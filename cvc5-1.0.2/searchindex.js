Search.setIndex({"docnames": ["api/api", "api/cpp/cpp", "api/cpp/datatype", "api/cpp/datatypeconstructor", "api/cpp/datatypeconstructordecl", "api/cpp/datatypedecl", "api/cpp/datatypeselector", "api/cpp/driveroptions", "api/cpp/exceptions", "api/cpp/grammar", "api/cpp/kind", "api/cpp/modes", "api/cpp/op", "api/cpp/optioninfo", "api/cpp/quickstart", "api/cpp/result", "api/cpp/roundingmode", "api/cpp/solver", "api/cpp/sort", "api/cpp/statistics", "api/cpp/synthresult", "api/cpp/term", "api/cpp/unknownexplanation", "api/java/index", "api/java/java", "api/java/quickstart", "api/python/base/datatype", "api/python/base/datatypeconstructor", "api/python/base/datatypeconstructordecl", "api/python/base/datatypedecl", "api/python/base/datatypeselector", "api/python/base/grammar", "api/python/base/kind", "api/python/base/op", "api/python/base/python", "api/python/base/quickstart", "api/python/base/result", "api/python/base/roundingmode", "api/python/base/solver", "api/python/base/sort", "api/python/base/statistics", "api/python/base/synthresult", "api/python/base/term", "api/python/base/unknownexplanation", "api/python/python", "api/python/pythonic/arith", "api/python/pythonic/array", "api/python/pythonic/bitvec", "api/python/pythonic/boolean", "api/python/pythonic/dt", "api/python/pythonic/fp", "api/python/pythonic/internals", "api/python/pythonic/pythonic", "api/python/pythonic/quant", "api/python/pythonic/quickstart", "api/python/pythonic/set", "api/python/pythonic/solver", "binary/binary", "binary/quickstart", "examples/bags", "examples/bitvectors", "examples/bitvectors_and_arrays", "examples/combination", "examples/datatypes", "examples/examples", "examples/exceptions", "examples/extract", "examples/floatingpoint", "examples/helloworld", "examples/lineararith", "examples/quickstart", "examples/relations", "examples/sequences", "examples/sets", "examples/strings", "examples/sygus-fun", "examples/sygus-grammar", "examples/sygus-inv", "genindex", "index", "installation/installation", "options", "output-tags", "proofs/output_alethe", "proofs/output_dot", "proofs/output_lfsc", "proofs/proof_rules", "proofs/proofs", "references", "resource-limits", "statistics", "theories/bags", "theories/datatypes", "theories/separation-logic", "theories/sequences", "theories/sets-and-relations", "theories/strings", "theories/theories", "theories/transcendentals"], "filenames": ["api/api.rst", "api/cpp/cpp.rst", "api/cpp/datatype.rst", "api/cpp/datatypeconstructor.rst", "api/cpp/datatypeconstructordecl.rst", "api/cpp/datatypedecl.rst", "api/cpp/datatypeselector.rst", "api/cpp/driveroptions.rst", "api/cpp/exceptions.rst", "api/cpp/grammar.rst", "api/cpp/kind.rst", "api/cpp/modes.rst", "api/cpp/op.rst", "api/cpp/optioninfo.rst", "api/cpp/quickstart.rst", "api/cpp/result.rst", "api/cpp/roundingmode.rst", "api/cpp/solver.rst", "api/cpp/sort.rst", "api/cpp/statistics.rst", "api/cpp/synthresult.rst", "api/cpp/term.rst", "api/cpp/unknownexplanation.rst", "api/java/index.rst", "api/java/java.rst", "api/java/quickstart.rst", "api/python/base/datatype.rst", "api/python/base/datatypeconstructor.rst", "api/python/base/datatypeconstructordecl.rst", "api/python/base/datatypedecl.rst", "api/python/base/datatypeselector.rst", "api/python/base/grammar.rst", "api/python/base/kind.rst", "api/python/base/op.rst", "api/python/base/python.rst", "api/python/base/quickstart.rst", "api/python/base/result.rst", "api/python/base/roundingmode.rst", "api/python/base/solver.rst", "api/python/base/sort.rst", "api/python/base/statistics.rst", "api/python/base/synthresult.rst", "api/python/base/term.rst", "api/python/base/unknownexplanation.rst", "api/python/python.rst", "api/python/pythonic/arith.rst", "api/python/pythonic/array.rst", "api/python/pythonic/bitvec.rst", "api/python/pythonic/boolean.rst", "api/python/pythonic/dt.rst", "api/python/pythonic/fp.rst", "api/python/pythonic/internals.rst", "api/python/pythonic/pythonic.rst", "api/python/pythonic/quant.rst", "api/python/pythonic/quickstart.rst", "api/python/pythonic/set.rst", "api/python/pythonic/solver.rst", "binary/binary.rst", "binary/quickstart.rst", "examples/bags.rst", "examples/bitvectors.rst", "examples/bitvectors_and_arrays.rst", "examples/combination.rst", "examples/datatypes.rst", "examples/examples.rst", "examples/exceptions.rst", "examples/extract.rst", "examples/floatingpoint.rst", "examples/helloworld.rst", "examples/lineararith.rst", "examples/quickstart.rst", "examples/relations.rst", "examples/sequences.rst", "examples/sets.rst", "examples/strings.rst", "examples/sygus-fun.rst", "examples/sygus-grammar.rst", "examples/sygus-inv.rst", "genindex.rst", "index.rst", "installation/installation.rst", "options.rst", "output-tags.rst", "proofs/output_alethe.rst", "proofs/output_dot.rst", "proofs/output_lfsc.rst", "proofs/proof_rules.rst", "proofs/proofs.rst", "references.rst", "resource-limits.rst", "statistics.rst", "theories/bags.rst", "theories/datatypes.rst", "theories/separation-logic.rst", "theories/sequences.rst", "theories/sets-and-relations.rst", "theories/strings.rst", "theories/theories.rst", "theories/transcendentals.rst"], "titles": ["API Documentation", "C++ API", "Datatype", "DatatypeConstructor", "DatatypeConstructorDecl", "DatatypeDecl", "DatatypeSelector", "DriverOptions", "Exceptions", "Grammar", "Kind", "Modes", "Op", "OptionInfo", "Quickstart Guide", "Result", "RoundingMode", "Solver", "Sort", "Statistics", "SynthResult", "Term", "UnknownExplanation", "Java API", "Java API", "Quickstart Guide", "Datatype", "DatatypeConstructor", "DatatypeConstructorDecl", "DatatypeDecl", "DatatypeSelector", "Grammar", "Kind", "Op", "Base Python API", "Quickstart Guide", "Result", "RoundingMode", "Solver", "Sort", "Statistics", "SynthResult", "Term", "UnknownExplanation", "Python API", "Arithmetic", "Arrays", "Bit-Vectors", "Core &amp; Booleans", "Datatypes", "Floating Point", "Internals", "Pythonic API", "Quantifiers", "Quickstart Guide", "Sets", "Solvers &amp; Results", "Binary Documentation", "Quickstart Guide", "Theory of Bags", "Theory of Bit-Vectors", "Theory of Bit-Vectors and Arrays", "Theory Combination", "Theory of Datatypes", "Examples", "Exception Handling", "Theory of Bit-Vectors: <code class=\"code docutils literal notranslate\"><span class=\"pre\">extract</span></code>", "Theory of Floating-Points", "Hello World", "Theory of Linear Arithmetic", "Quickstart Example", "Theory of Relations", "Theory of Sequences", "Theory of Sets", "Theory of Strings", "SyGuS: Functions", "SyGuS: Grammars", "SyGuS: Invariants", "Index", "cvc5 Documentation", "Installation", "Options", "Output tags", "Proof format: Alethe", "Proof format: DOT", "Proof format: LFSC", "Proof rules", "Proof production", "References", "Resource limits", "Statistics", "Theory Reference: Bags", "Theory Reference: Datatypes", "Theory Reference: Separation Logic", "Theory Reference: Sequences", "Theory Reference: Sets and Relations", "Theory Reference: Strings", "Theory References", "Theory Reference: Transcendentals"], "terms": {"In": [0, 3, 10, 11, 14, 17, 18, 20, 21, 25, 26, 27, 32, 35, 38, 39, 41, 42, 49, 54, 58, 70, 81, 86, 88, 89, 92, 95], "addit": [0, 10, 32, 45, 47, 50, 67, 80, 83, 85, 86, 92], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 42, 45, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98], "cvc5": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "binari": [0, 17, 45, 71, 79, 80, 81, 89], "featur": [0, 22, 43, 44, 52, 57, 63, 81, 82, 84], "sever": [0, 48, 57, 84, 85, 97], "differ": [0, 10, 12, 17, 19, 21, 22, 24, 32, 38, 47, 48, 49, 50, 55, 57, 64, 67, 69, 86, 90, 91, 95], "program": [0, 34, 57, 81, 88], "languag": [0, 19, 57, 58, 61, 62, 64, 72, 73, 74, 81, 84, 91, 92, 93, 94, 95], "while": [0, 1, 14, 19, 23, 25, 35, 44, 54, 58, 62, 70, 80, 81, 86, 98], "c": [0, 8, 10, 11, 14, 17, 18, 21, 24, 25, 26, 32, 34, 35, 38, 39, 44, 45, 48, 50, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 85, 86, 90, 91, 92, 93, 94, 95, 98], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98], "consid": [0, 10, 21, 32, 42, 49, 61, 66, 81, 90], "primari": [0, 1, 58], "interfac": [0, 1, 5, 9, 17, 29, 31, 57, 81], "both": [0, 12, 19, 21, 81, 83, 94, 98], "java": [0, 14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 91, 95, 98], "base": [0, 8, 10, 11, 14, 16, 17, 21, 25, 32, 35, 38, 40, 42, 44, 46, 49, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 83, 85, 86, 91, 93, 95, 98], "python": [0, 14, 25, 35, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 91, 95, 98], "implement": [0, 17, 19, 56, 75, 76, 77, 80, 81, 83, 89, 92, 93, 95, 97], "thin": 0, "wrapper": [0, 7, 26, 27, 28, 29, 30, 31, 33, 36, 38, 39, 40, 42], "around": 0, "addition": [0, 13, 17, 18, 21, 38, 81, 86, 96, 97], "more": [0, 1, 10, 13, 14, 17, 24, 25, 32, 35, 40, 44, 49, 50, 54, 58, 60, 70, 80, 81, 85, 86, 90, 91, 95], "avail": [0, 14, 16, 17, 25, 35, 38, 40, 54, 56, 58, 70, 75, 76, 77, 80, 81, 83, 84, 85, 88, 90, 92], "http": [0, 10, 24, 32, 49, 50, 56, 80, 88], "github": [0, 14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 91, 95, 98], "com": [0, 24, 80], "cvc5_pythonic_api": [0, 14, 25, 35, 58, 65], "here": [0, 24, 25, 49, 58, 63, 83, 84, 85, 86, 87, 95], "The": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 52, 54, 55, 57, 58, 60, 61, 62, 64, 67, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98], "expos": [1, 10, 32], "full": [1, 14, 22, 25, 35, 43, 54, 55, 58, 70, 81], "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 27, 30, 32, 35, 38, 39, 44, 45, 47, 48, 49, 51, 53, 56, 62, 63, 64, 76, 77, 80, 82, 83, 86, 88, 90, 91, 95, 97, 98], "quickstart": [1, 24, 34, 52, 57, 64], "guid": [1, 24, 34, 52, 57, 81], "give": [1, 24, 49, 57, 58, 63, 69, 81, 89, 90], "short": [1, 24, 57, 58, 81], "introduct": [1, 24, 57, 86], "follow": [1, 10, 13, 14, 16, 17, 18, 25, 32, 35, 38, 44, 45, 46, 47, 49, 50, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 71, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 95, 98], "namespac": [1, 11, 14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "provid": [1, 3, 7, 10, 13, 17, 18, 21, 24, 27, 32, 38, 56, 75, 79, 80, 81, 82, 85, 86], "detail": [1, 10, 13, 17, 24, 32, 38, 50, 80, 83, 85, 86, 95], "individu": [1, 24, 82, 89, 90], "For": [1, 3, 10, 14, 16, 17, 18, 21, 24, 25, 27, 32, 35, 39, 42, 48, 49, 56, 58, 64, 67, 73, 80, 81, 85, 86, 89, 91, 92, 93, 94, 95], "most": [1, 11, 17, 24, 38, 45, 47, 56, 80, 94, 95, 98], "applic": [1, 3, 10, 24, 27, 32, 44, 46, 48, 51, 63, 81, 86, 89, 95], "solver": [1, 3, 5, 7, 8, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 27, 29, 32, 34, 35, 36, 39, 41, 42, 43, 49, 50, 52, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98], "main": [1, 11, 14, 17, 24, 25, 35, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 91, 95, 98], "entri": [1, 19, 24], "point": [1, 2, 3, 10, 16, 17, 18, 21, 24, 32, 37, 38, 39, 42, 52, 56, 63, 64, 86, 88, 89, 90, 93, 97], "exampl": [1, 3, 10, 18, 21, 24, 27, 32, 34, 39, 42, 44, 48, 49, 52, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 85, 86, 89, 91, 95], "except": [1, 10, 17, 19, 21, 24, 26, 32, 42, 45, 46, 48, 52, 56, 64, 81, 89, 92], "datatyp": [1, 3, 4, 5, 6, 10, 17, 18, 24, 27, 28, 29, 30, 32, 34, 38, 39, 52, 64, 82, 86, 88, 93, 95, 97], "datatypeconstructor": [1, 2, 10, 24, 32, 34, 63], "datatypeconstructordecl": [1, 5, 17, 24, 29, 34, 63], "datatypedecl": [1, 17, 24, 34, 38, 63], "datatypeselector": [1, 2, 3, 10, 24, 32, 34, 63], "driveropt": [1, 17], "grammar": [1, 17, 24, 34, 38, 64, 75, 81, 93], "kind": [1, 3, 6, 12, 14, 17, 18, 21, 24, 25, 27, 30, 33, 34, 35, 38, 39, 42, 46, 47, 48, 51, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 86, 91, 92, 93, 94, 95, 98], "mode": [1, 13, 16, 17, 18, 21, 38, 39, 42, 52, 67, 80, 81, 83, 84, 85, 93], "op": [1, 10, 17, 21, 24, 32, 34, 38, 42, 60, 66, 67, 93], "optioninfo": [1, 17, 24, 38], "result": [1, 10, 14, 16, 17, 20, 21, 22, 24, 25, 32, 34, 35, 37, 38, 41, 42, 52, 54, 58, 59, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 85, 86, 91, 95, 98], "roundingmod": [1, 10, 17, 18, 21, 24, 32, 34, 38, 39, 67], "sort": [1, 2, 3, 4, 5, 6, 9, 10, 14, 17, 21, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 38, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 92, 93, 94, 95, 98], "statist": [1, 17, 24, 34, 38, 56, 79, 81, 89], "synthresult": [1, 17, 24, 34], "term": [1, 3, 6, 9, 10, 11, 12, 14, 17, 18, 24, 25, 27, 30, 31, 32, 33, 34, 35, 38, 39, 49, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 98], "unknownexplan": [1, 15, 24, 34], "cvc5apiexcept": [1, 8, 14, 24, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "cvc5apirecoverableexcept": [1, 8, 19, 24], "const_iter": [1, 2, 3, 21, 62, 63], "stat": [1, 19, 24, 40, 56, 81, 90], "enum": [1, 10, 11, 16, 21, 22, 24, 32, 37, 43, 81, 82, 86], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 86, 91, 95, 98], "A": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 42, 46, 48, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 85, 86, 88, 90, 91, 92, 93, 94, 95, 98], "public": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 90, 91, 95, 98], "constructor": [2, 3, 4, 5, 6, 9, 10, 12, 15, 17, 18, 19, 20, 21, 26, 27, 28, 29, 32, 38, 39, 49, 63, 81, 86, 92, 95], "destructor": [2, 3, 4, 5, 6, 12, 17, 18, 19, 21, 81, 92], "oper": [2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 32, 33, 35, 38, 42, 47, 52, 54, 58, 70, 71, 81, 86, 89, 91, 93, 95, 96], "size_t": [2, 3, 5, 10, 12, 17, 18, 21, 38, 75, 76, 77], "idx": [2, 46, 48, 49, 53, 56], "const": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 35, 38, 45, 47, 48, 49, 50, 54, 55, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 81, 91, 92, 93, 94, 95], "get": [2, 3, 5, 6, 12, 13, 14, 17, 18, 19, 21, 25, 26, 27, 30, 33, 35, 38, 39, 40, 42, 46, 54, 56, 58, 59, 61, 62, 63, 70, 71, 72, 73, 75, 76, 77, 80, 81, 91, 95], "given": [2, 3, 4, 10, 11, 17, 18, 19, 21, 22, 26, 27, 28, 32, 38, 42, 43, 45, 46, 47, 48, 49, 50, 51, 56, 60, 62, 69, 75, 76, 77, 80, 81, 82, 86, 90, 91, 92, 93], "index": [2, 3, 10, 12, 17, 18, 21, 26, 27, 32, 33, 38, 39, 42, 61, 79, 80, 81, 86, 92, 94], "paramet": [2, 3, 4, 5, 8, 9, 10, 12, 15, 17, 18, 19, 21, 26, 27, 28, 29, 31, 32, 33, 38, 39, 40, 42, 56, 61, 63, 75, 76, 77, 81, 92], "return": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 68, 69, 70, 75, 76, 77, 81, 86, 89, 94, 98], "std": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 88, 90, 91, 92, 95, 98], "string": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 32, 35, 38, 39, 42, 45, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 86, 90, 91, 92, 93, 94, 95, 97, 98], "name": [2, 3, 4, 5, 6, 13, 14, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 35, 38, 40, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 63, 70, 73, 80, 81, 90, 92], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 45, 46, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 93, 95, 96, 98], "linear": [2, 3, 10, 26, 27, 32, 64, 81, 88, 98], "search": [2, 3, 11, 26, 27, 80, 81], "through": [2, 3, 26, 27, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 88, 95], "so": [2, 3, 5, 17, 24, 26, 27, 29, 38, 54, 58, 61, 63, 81], "case": [2, 3, 10, 11, 14, 17, 18, 20, 21, 25, 26, 27, 32, 35, 38, 39, 41, 42, 54, 58, 70, 81, 86, 89, 90, 94, 96], "multipl": [2, 3, 10, 11, 26, 27, 32, 45, 47, 50, 59, 61, 81, 86, 91], "similarli": [2, 3, 17, 26, 27, 38], "first": [2, 3, 6, 10, 11, 14, 17, 21, 25, 26, 27, 30, 32, 35, 38, 49, 54, 58, 60, 61, 63, 70, 76, 81, 83, 86, 94], "getconstructor": [2, 26, 63], "getselector": [2, 3, 26, 27, 63, 92, 95], "selector": [2, 3, 4, 6, 10, 18, 26, 27, 28, 30, 32, 39, 49, 63, 81, 86, 92, 95], "getnam": [2, 3, 5, 6, 26, 27, 29, 30], "getnumconstructor": [2, 5, 26, 29], "number": [2, 3, 5, 10, 12, 16, 17, 18, 21, 24, 26, 27, 29, 32, 33, 37, 38, 42, 45, 47, 48, 49, 50, 53, 56, 61, 67, 79, 81, 86, 89, 91, 92, 97, 98], "vector": [2, 9, 10, 13, 14, 17, 18, 21, 25, 32, 35, 38, 39, 42, 50, 52, 54, 56, 58, 63, 64, 67, 70, 75, 76, 77, 80, 81, 86, 92, 94, 95, 97], "getparamet": [2, 26], "parametr": [2, 3, 5, 17, 18, 26, 27, 29, 39, 81], "assert": [2, 10, 13, 14, 17, 18, 19, 21, 25, 32, 35, 38, 39, 42, 50, 54, 56, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 74, 80, 81, 86, 92, 93, 94, 95, 98], "method": [2, 3, 5, 7, 8, 10, 11, 17, 18, 19, 20, 21, 26, 27, 29, 32, 38, 39, 41, 42, 48, 49, 56, 60, 75, 76, 77, 81, 86, 88], "experiment": [2, 3, 5, 10, 17, 18, 26, 27, 29, 32, 38, 39, 42, 81], "mai": [2, 3, 5, 8, 10, 11, 16, 17, 18, 21, 26, 27, 29, 32, 38, 39, 42, 45, 47, 80, 81, 86, 89, 95], "chang": [2, 3, 5, 10, 17, 18, 19, 26, 27, 29, 32, 38, 39, 42, 80, 81, 90], "futur": [2, 3, 5, 10, 17, 18, 26, 27, 29, 32, 38, 39, 42, 81], "version": [2, 3, 5, 10, 14, 17, 18, 25, 26, 27, 29, 32, 35, 38, 39, 42, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 86, 88, 90, 91, 92, 95, 98], "bool": [2, 3, 4, 5, 6, 10, 12, 13, 15, 17, 18, 19, 20, 21, 32, 38, 39, 40, 42, 45, 46, 48, 49, 55, 56, 61, 62, 68, 75, 77, 81, 82, 83, 85, 94], "isparametr": [2, 5, 26, 29], "true": [2, 3, 4, 5, 6, 10, 12, 14, 15, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 90, 91, 92, 94, 95], "iscodatatyp": [2, 17, 26, 38, 49], "correspond": [2, 3, 9, 10, 11, 14, 17, 21, 25, 26, 27, 31, 32, 35, 38, 54, 58, 70, 81, 82, 85, 86, 89], "co": [2, 26, 81, 88, 92, 98], "istupl": [2, 18, 26, 39], "tupl": [2, 10, 17, 18, 21, 26, 32, 38, 39, 42, 45, 47, 48, 49, 71, 81, 95], "isrecord": [2, 18, 26, 39], "record": [2, 17, 18, 26, 38, 39, 85, 92], "isfinit": [2, 26], "finit": [2, 10, 17, 26, 32, 38, 52, 71, 81, 88, 94], "iswellfound": [2, 26], "determin": [2, 3, 5, 10, 15, 17, 18, 19, 20, 21, 26, 27, 32, 36, 38, 39, 41, 56, 80, 81, 86], "well": [2, 13, 19, 26, 81, 83, 90, 97], "found": [2, 17, 24, 26, 38, 80, 81, 95], "If": [2, 8, 10, 13, 14, 16, 17, 19, 21, 25, 26, 32, 35, 37, 38, 42, 44, 45, 47, 48, 49, 50, 53, 54, 56, 58, 60, 61, 66, 70, 80, 86, 94], "codatatyp": [2, 17, 26, 38], "fals": [2, 10, 11, 17, 19, 26, 32, 38, 40, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 65, 75, 76, 77, 81, 82, 83, 85, 86, 94], "ar": [2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 30, 31, 32, 35, 37, 38, 39, 40, 42, 44, 48, 49, 51, 54, 56, 58, 60, 62, 63, 67, 69, 70, 71, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98], "valu": [2, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 32, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 48, 50, 51, 54, 56, 58, 59, 60, 61, 62, 63, 67, 69, 70, 72, 73, 81, 86, 90, 91, 92, 94, 95], "size": [2, 10, 14, 17, 24, 25, 26, 32, 35, 38, 45, 47, 48, 50, 54, 58, 61, 70, 75, 76, 77, 81], "isnul": [2, 3, 4, 5, 6, 12, 15, 18, 20, 21, 26, 27, 28, 29, 30, 33, 36, 39, 41, 42], "null": [2, 3, 4, 5, 6, 10, 12, 17, 18, 20, 21, 26, 27, 28, 29, 30, 32, 33, 38, 39, 41, 42, 86], "object": [2, 3, 5, 6, 7, 8, 17, 18, 19, 24, 26, 27, 28, 29, 30, 38, 42, 45, 48, 49, 51, 53, 56, 63, 75, 76, 86, 89, 90, 91, 92, 93, 94, 95], "tostr": [2, 3, 4, 5, 6, 9, 12, 15, 18, 20, 21, 65, 75, 76, 77], "represent": [2, 3, 4, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 32, 35, 38, 42, 48, 50, 54, 58, 70, 81, 86, 90], "begin": [2, 3, 19, 21, 40, 62, 63, 75, 76, 77, 81], "an": [2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 63, 65, 67, 69, 70, 73, 79, 80, 81, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95], "iter": [2, 3, 19, 21, 24, 26, 27, 42, 62, 63, 90], "end": [2, 3, 14, 19, 21, 25, 35, 54, 58, 62, 63, 70, 75, 76, 77, 82], "one": [2, 3, 10, 14, 16, 19, 21, 25, 27, 32, 35, 37, 38, 42, 48, 49, 54, 58, 59, 60, 62, 63, 70, 73, 75, 77, 81, 86, 89, 91, 92, 93, 95], "off": [2, 3, 21, 81], "last": [2, 3, 17, 21, 38, 56, 81], "type": [2, 3, 4, 7, 8, 10, 11, 13, 14, 17, 18, 19, 21, 25, 27, 32, 35, 38, 45, 48, 54, 56, 58, 60, 63, 65, 67, 70, 74, 81, 86, 88, 90, 92, 93], "iterator_categori": [2, 3, 21], "forward_iterator_tag": [2, 3, 21], "tag": [2, 3, 17, 21, 49, 79, 81], "value_typ": [2, 3, 21], "item": [2, 3, 21], "pointer": [2, 3, 21, 48, 53], "refer": [2, 3, 17, 21, 48, 49, 51, 56, 63, 79, 81, 86], "difference_typ": [2, 3, 21], "ptrdiff_t": [2, 3, 21], "when": [2, 3, 10, 11, 17, 18, 19, 21, 32, 38, 42, 53, 80, 81, 82, 86, 89, 90, 93, 95], "two": [2, 3, 8, 10, 14, 15, 16, 21, 25, 32, 35, 37, 44, 47, 49, 54, 58, 59, 60, 61, 63, 69, 73, 81, 86, 90, 91, 95, 98], "subtract": [2, 3, 10, 14, 21, 25, 32, 35, 45, 47, 50, 54, 58, 70, 91], "nullari": [2, 3, 9, 10, 15, 27, 32, 36], "requir": [2, 3, 10, 12, 14, 17, 22, 25, 27, 32, 33, 35, 38, 43, 67, 75, 76, 77, 80, 81, 83, 86, 89, 93], "cython": [2, 3, 9, 80], "assign": [2, 3, 14, 17, 19, 21, 25, 35, 48, 54, 58, 60, 63, 70, 81], "after": [2, 3, 7, 10, 11, 17, 21, 32, 38, 49, 58, 60, 63, 65, 76, 81, 82, 89, 90, 94], "equal": [2, 3, 10, 11, 12, 14, 15, 16, 18, 21, 25, 32, 35, 37, 42, 45, 47, 49, 54, 58, 59, 60, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 85, 86, 90, 91, 95], "compar": [2, 3, 12, 15, 18, 21, 44, 86], "disequ": [2, 3, 10, 12, 15, 18, 21, 32, 48, 81], "increment": [2, 3, 14, 17, 21, 25, 35, 38, 54, 56, 58, 59, 60, 62, 70, 73, 75, 76, 77, 81, 88, 90, 91, 95, 98], "prefix": [2, 3, 10, 21, 24, 32, 45, 48, 58, 80, 81, 86, 94], "int": [2, 3, 10, 14, 17, 18, 21, 25, 27, 32, 35, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 91, 92, 93, 94, 95, 96, 98], "postfix": [2, 3, 21], "derefer": [2, 3, 21], "getterm": [3, 6, 10, 27, 30, 32, 63, 92], "special": [3, 10, 11, 13, 27, 32, 52, 67, 81, 86, 92], "like": [3, 6, 7, 10, 17, 21, 27, 30, 32, 38, 44, 56, 76, 81, 86, 89, 90, 98], "whose": [3, 4, 10, 11, 17, 21, 27, 28, 32, 38, 42, 81, 85, 86, 92, 93], "isdatatypeconstructor": [3, 18, 27, 39], "all": [3, 8, 10, 14, 17, 18, 19, 21, 25, 26, 27, 32, 35, 38, 39, 40, 42, 48, 49, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "includ": [3, 7, 10, 11, 13, 14, 17, 19, 21, 25, 27, 32, 35, 38, 40, 48, 53, 54, 55, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 90, 91, 92, 95, 98], "ones": [3, 10, 14, 17, 25, 27, 32, 35, 38, 54, 58, 70, 81, 95], "should": [3, 6, 8, 10, 14, 17, 25, 27, 30, 32, 35, 38, 54, 56, 58, 61, 69, 70, 75, 76, 77, 80, 85, 86, 90, 98], "argument": [3, 6, 10, 17, 18, 27, 30, 32, 38, 39, 46, 47, 48, 49, 51, 56, 63, 81, 86, 89, 92], "apply_constructor": [3, 10, 27, 32, 63, 92], "nil": [3, 10, 17, 27, 32, 38, 49, 63, 92, 93], "list": [3, 10, 11, 13, 14, 17, 18, 21, 25, 27, 32, 35, 38, 39, 42, 45, 48, 49, 51, 53, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 91, 92, 95, 98], "can": [3, 5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 24, 25, 26, 27, 29, 31, 32, 35, 38, 44, 45, 47, 48, 49, 50, 54, 56, 58, 60, 62, 63, 64, 70, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 95], "construct": [3, 5, 8, 10, 14, 17, 18, 21, 25, 27, 29, 32, 35, 38, 39, 42, 54, 58, 62, 63, 64, 70, 81, 86], "mkterm": [3, 10, 14, 17, 21, 25, 27, 32, 35, 38, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 92, 93, 94, 95, 98], "t": [3, 10, 11, 12, 13, 14, 17, 18, 21, 25, 27, 32, 35, 38, 42, 48, 54, 56, 58, 62, 63, 70, 75, 76, 77, 81, 86, 88, 91, 92, 93, 94, 95, 98], "where": [3, 10, 11, 17, 19, 21, 26, 27, 32, 38, 42, 49, 61, 81, 86, 87, 89, 91, 92, 93, 94, 96], "instead": [3, 14, 18, 21, 25, 27, 35, 54, 58, 70, 81, 85, 86, 95], "getinstantiatedterm": [3, 27], "below": [3, 27, 32, 45, 47, 80, 81, 86, 89, 91, 92, 94, 95, 96], "retsort": [3, 27], "intend": [3, 17, 19, 27, 38, 79, 82, 86], "seen": [3, 27, 86, 92], "ha": [3, 5, 7, 10, 13, 17, 18, 19, 20, 21, 27, 32, 38, 39, 41, 42, 48, 49, 60, 63, 68, 81, 82, 86, 89, 90, 92, 94], "been": [3, 5, 7, 14, 17, 18, 19, 25, 27, 35, 38, 39, 54, 58, 60, 63, 68, 70, 82, 86, 89], "explicitli": [3, 10, 13, 14, 25, 27, 32, 35, 54, 58, 70, 81, 89], "cast": [3, 27, 45, 47, 48, 50, 92], "cannot": [3, 17, 21, 27, 48], "infer": [3, 27, 81, 86], "declar": [3, 4, 5, 10, 14, 17, 25, 27, 28, 29, 32, 35, 38, 48, 52, 54, 56, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 91, 93, 94, 95, 98], "par": [3, 27, 63, 92], "con": [3, 10, 27, 32, 49, 63, 81, 92], "head": [3, 27, 63, 92], "tail": [3, 27, 49, 63, 92], "must": [3, 10, 12, 17, 21, 27, 32, 38, 42, 48, 49, 60, 73, 81, 86, 92, 93], "user": [3, 10, 13, 27, 32, 44, 52, 80, 81, 82, 86, 93], "smt": [3, 5, 10, 14, 16, 17, 18, 25, 27, 29, 32, 35, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 79, 80, 83, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98], "2": [3, 5, 9, 10, 14, 16, 17, 21, 25, 27, 29, 31, 32, 35, 42, 45, 47, 48, 49, 50, 53, 54, 56, 58, 59, 60, 61, 67, 69, 70, 73, 80, 81, 85, 86, 88, 90, 91, 92, 93, 95, 98], "6": [3, 5, 14, 24, 25, 27, 29, 35, 45, 47, 54, 58, 70, 80, 88, 92, 93], "done": [3, 27, 80, 81, 86, 89], "via": [3, 7, 10, 13, 14, 17, 18, 19, 21, 25, 27, 32, 35, 38, 44, 56, 57, 65, 71, 72, 74, 80, 81, 83, 86, 89, 90, 93, 95], "syntax": [3, 5, 10, 27, 29, 32, 52, 56, 76, 81, 95], "qualifi": [3, 27], "identifi": [3, 11, 19, 27, 48, 81, 86], "equival": [3, 10, 17, 21, 27, 32, 38, 42, 60, 63, 75, 76, 77, 81, 86, 92], "appli": [3, 10, 18, 21, 27, 32, 39, 42, 48, 49, 56, 63, 81, 86, 89, 92], "abov": [3, 10, 11, 13, 14, 17, 21, 25, 27, 32, 35, 38, 54, 58, 60, 70, 75, 76, 77, 80, 81, 86, 92, 95], "desir": [3, 27, 80], "gettesterterm": [3, 10, 27, 32, 63, 92], "tester": [3, 10, 18, 27, 32, 39, 49, 52, 63, 81, 86, 92], "similar": [3, 6, 10, 27, 30, 32, 56, 76, 80, 81, 86, 95], "which": [3, 8, 9, 10, 16, 17, 18, 20, 21, 31, 32, 38, 39, 40, 41, 42, 45, 63, 75, 76, 77, 81, 85, 86, 90, 92, 95], "apply_test": [3, 10, 27, 32, 63, 92], "getnumselector": [3, 27], "far": [3, 5, 27, 29], "th": [3, 86, 88, 94, 96], "specif": [4, 5, 14, 22, 24, 25, 28, 29, 35, 43, 49, 54, 58, 63, 70, 86, 90], "creat": [4, 5, 10, 14, 17, 18, 19, 21, 25, 28, 29, 32, 35, 38, 39, 42, 45, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 63, 65, 67, 68, 70, 72, 75, 76, 81, 85, 91, 92, 93, 94, 95], "void": [4, 5, 9, 14, 17, 18, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "addselector": [4, 28, 63], "add": [4, 5, 9, 10, 14, 17, 25, 28, 29, 31, 32, 35, 38, 45, 50, 51, 54, 55, 56, 58, 61, 62, 70, 75, 76, 77, 81], "codomain": [4, 6, 10, 17, 18, 28, 30, 32, 38, 39], "addselectorself": [4, 28, 63], "itself": [4, 5, 7, 28, 29, 49, 63, 86, 89, 92], "addselectorunresolv": [4, 28], "unresdataypenam": [4, 28], "unresolv": [4, 17, 28, 38], "resolv": [4, 5, 28, 63], "see": [5, 10, 14, 17, 18, 19, 21, 25, 29, 32, 34, 35, 38, 39, 40, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 86, 89, 91, 93, 95, 98], "coincid": [5, 9, 29, 31], "lib": [5, 16, 17, 18, 24, 29, 37, 38, 39, 56, 57, 58, 62, 80, 81, 83, 88, 89, 92, 93, 94, 96, 97], "command": [5, 9, 14, 17, 18, 21, 25, 29, 35, 54, 56, 57, 58, 63, 70, 75, 76, 77, 80, 81, 89, 90, 92, 93], "singl": [5, 10, 19, 29, 32, 40, 48, 50, 53, 55, 67, 81, 86, 89, 94], "within": [5, 10, 18, 21, 29, 32, 39, 56, 80, 81, 83, 85, 86, 89], "from": [5, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 32, 35, 36, 37, 38, 39, 41, 42, 50, 52, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 85, 86, 90, 91, 93, 94, 95, 98], "mkdatatypesort": [5, 17, 29, 38, 63, 92], "addconstructor": [5, 29, 63], "ctor": [5, 17, 29, 38, 63], "isresolv": 5, "e": [5, 7, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 25, 32, 33, 35, 36, 38, 41, 42, 43, 45, 46, 48, 49, 53, 54, 55, 56, 58, 59, 60, 65, 67, 70, 71, 73, 74, 80, 81, 84, 86, 88, 91, 94, 95, 96, 98], "alreadi": [5, 14, 17, 25, 35, 44, 48, 54, 58, 70, 80, 81], "isdatatypeselector": [6, 18, 30, 39], "apply_selector": [6, 10, 30, 32, 63, 92, 95], "getupdaterterm": [6, 10, 30, 32, 63, 92], "updat": [6, 10, 18, 30, 32, 39, 46, 63, 81, 94, 96], "isdatatypeupdat": [6, 18, 30, 39], "apply_updat": [6, 10, 30, 32, 63, 92], "getcodomainsort": [6, 30], "safe": [7, 8, 13, 21, 42, 56, 81, 89], "access": [7, 13, 17, 18, 19, 21, 49, 81, 94], "few": [7, 24, 67, 81, 89], "option": [7, 10, 13, 14, 17, 25, 32, 35, 38, 54, 56, 58, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 85, 86, 87, 90, 91, 95], "frontend": [7, 13], "commun": [7, 8, 17], "appropri": [7, 19, 48, 81], "regular": [7, 10, 17, 18, 32, 38, 39, 74, 81, 82, 86], "getopt": [7, 13, 17, 38, 56, 81], "getoptioninfo": [7, 13, 17, 38, 56, 81], "g": [7, 10, 12, 13, 14, 17, 18, 21, 22, 25, 32, 33, 35, 38, 42, 43, 49, 54, 56, 58, 70, 74, 75, 80, 81, 84, 86, 94, 95, 96, 98], "input": [7, 9, 11, 13, 17, 31, 38, 57, 58, 64, 75, 76, 77, 81, 82, 90, 92, 93, 95], "output": [7, 13, 17, 18, 21, 38, 54, 58, 61, 62, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 89, 95], "stream": [7, 8, 11, 13, 17, 18, 21, 49, 75, 76, 77, 81, 92], "configur": [7, 24, 56, 80, 81, 89], "err": [7, 81], "out": [7, 10, 11, 14, 18, 25, 32, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 94, 95, 98], "doe": [7, 10, 11, 17, 18, 19, 21, 32, 38, 44, 52, 59, 61, 63, 67, 80, 81, 86, 89, 91, 92, 93], "store": [7, 10, 17, 19, 21, 32, 38, 42, 46, 61, 81, 86, 90], "onli": [7, 10, 11, 14, 17, 18, 19, 21, 22, 25, 32, 35, 38, 39, 42, 43, 54, 58, 60, 70, 80, 81, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96], "act": 7, "It": [7, 10, 13, 14, 17, 18, 19, 25, 32, 34, 35, 38, 39, 42, 47, 48, 49, 52, 54, 56, 58, 70, 79, 80, 81, 83, 84, 86, 89, 92, 94, 96], "thu": [7, 16, 38, 69, 80, 89, 98], "longer": [7, 8, 80], "destroi": [7, 19, 56], "istream": 7, "": [7, 10, 14, 16, 17, 18, 19, 21, 25, 32, 35, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 60, 62, 63, 65, 67, 70, 74, 80, 81, 83, 86, 88, 91, 92, 93, 94, 95, 98], "ostream": [7, 11, 17, 18, 19], "error": [7, 8, 65, 81], "api": [8, 9, 10, 14, 17, 19, 20, 21, 25, 32, 35, 38, 41, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 89, 90, 91, 93, 94, 95, 98], "certain": [8, 12, 16, 33, 80, 82, 89], "we": [8, 10, 11, 14, 17, 18, 20, 21, 25, 32, 35, 38, 41, 49, 54, 56, 58, 60, 61, 63, 66, 68, 70, 71, 73, 80, 81, 84, 86, 91, 92, 93, 94, 95], "broadli": 8, "distinguish": [8, 10, 17, 38, 86, 93], "deriv": [8, 86], "ani": [8, 9, 10, 11, 13, 17, 21, 31, 32, 38, 59, 73, 81, 82, 86, 90, 91, 93, 95], "fail": [8, 17, 38, 45, 46, 48, 80, 81], "behav": [8, 10, 32], "wa": [8, 11, 13, 15, 17, 18, 20, 21, 22, 23, 36, 38, 41, 43, 81, 82, 83, 86, 90], "call": [8, 10, 14, 17, 20, 21, 25, 32, 35, 38, 40, 41, 42, 54, 58, 62, 70, 80, 81, 86, 89], "still": [8, 80, 90], "howev": [8, 10, 14, 25, 32, 35, 54, 58, 70], "associ": [8, 10, 17, 18, 21, 32, 38, 39, 48, 49, 67, 81, 86, 92], "unsaf": 8, "state": [8, 17, 38, 86, 89], "thrown": [8, 21, 26, 42], "subclass": [8, 48], "inlin": [8, 14, 25, 35, 54, 58, 70], "str": [8, 14, 25, 35, 38, 48, 50, 51, 54, 56, 58, 70, 74, 75, 76, 77, 96], "messag": [8, 89], "stringstream": [8, 75, 76, 77], "getmessag": 8, "retriev": [8, 14, 19, 21, 35, 50, 56, 75, 76, 77], "char": 8, "what": [8, 10, 81], "noexcept": 8, "overrid": [8, 48, 80, 81], "style": [8, 81], "arrai": [8, 10, 14, 17, 18, 21, 25, 32, 35, 38, 39, 42, 48, 50, 52, 53, 54, 55, 58, 64, 70, 86, 90, 97], "recover": 8, "cvc5apioptionexcept": [8, 24], "cvc5apiunsupportedexcept": 8, "sygu": [9, 17, 31, 38, 52, 57, 64, 81], "defin": [9, 14, 17, 18, 25, 31, 35, 38, 48, 49, 51, 52, 54, 56, 58, 61, 63, 66, 70, 71, 74, 75, 76, 77, 80, 81, 82, 85, 86, 91, 93, 95, 97, 98], "context": [9, 10, 17, 31, 32, 38, 45, 47, 48, 50, 56, 60, 81, 93], "free": [9, 10, 11, 17, 21, 31, 32, 38, 56, 81, 86, 93, 95], "Its": [9, 31], "definit": [9, 17, 31, 38, 81, 86], "grammardef": [9, 31], "IF": [9, 31, 57], "1": [9, 10, 14, 16, 17, 21, 24, 25, 31, 32, 35, 38, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96], "standard": [9, 16, 18, 21, 31, 50, 58, 67, 75, 76, 77, 80, 81, 86, 88, 92, 93, 96], "addrul": [9, 31, 75, 76], "ntsymbol": [9, 17, 31, 38], "rule": [9, 31, 75, 76, 81, 83, 85, 87], "set": [9, 10, 11, 13, 14, 17, 18, 19, 21, 25, 31, 32, 35, 38, 39, 42, 48, 49, 50, 52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 82, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98], "non": [9, 10, 17, 18, 31, 32, 38, 48, 65, 75, 76, 80, 81, 83, 86, 89, 90, 92, 93, 94, 96], "termin": [9, 17, 31, 38, 75, 76, 81, 89], "ad": [9, 10, 11, 14, 25, 31, 32, 35, 44, 54, 56, 58, 70, 81, 85, 86], "addanyconst": [9, 31], "allow": [9, 10, 13, 17, 31, 32, 38, 44, 81, 89, 92, 95], "arbitrari": [9, 10, 11, 17, 21, 24, 31, 32, 81, 85, 86], "constant": [9, 10, 11, 14, 17, 21, 25, 31, 32, 35, 38, 42, 45, 46, 47, 48, 49, 50, 51, 54, 56, 58, 61, 62, 67, 69, 70, 72, 74, 81, 82, 86, 90, 91, 94, 95, 98], "addanyvari": [9, 31, 76], "variabl": [9, 10, 11, 14, 17, 21, 25, 31, 32, 35, 38, 48, 53, 54, 58, 60, 61, 62, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 86, 93, 95, 98], "synth": [9, 17, 20, 31, 38, 41, 75, 76, 77, 81], "fun": [9, 17, 31, 38, 62, 71, 75, 76, 77, 81, 82, 94, 95, 98], "inv": [9, 17, 31, 38, 77, 81, 86], "same": [9, 10, 12, 14, 17, 21, 25, 31, 32, 35, 38, 48, 49, 54, 58, 64, 70, 80, 81, 86, 89, 92, 94, 95], "need": [9, 18, 63, 71, 72, 73, 74, 81, 95], "friend": [9, 15, 17, 18, 19, 21, 36], "everi": [10, 17, 32, 38, 48, 56, 64, 81, 89, 90], "each": [10, 14, 17, 25, 35, 38, 47, 48, 49, 54, 58, 62, 63, 70, 75, 76, 81, 86, 90, 92], "bit": [10, 16, 17, 18, 21, 32, 38, 39, 42, 50, 52, 64, 67, 80, 81, 86, 90, 94, 97], "const_bitvector": [10, 32], "symbol": [10, 14, 17, 18, 21, 25, 32, 35, 38, 39, 42, 48, 54, 55, 56, 58, 63, 76, 81, 86, 92, 93, 98], "over": [10, 14, 17, 19, 21, 25, 26, 27, 32, 35, 42, 54, 55, 58, 59, 62, 63, 66, 69, 70, 71, 73, 80, 81, 85, 86, 89, 90, 91, 95], "univers": [10, 17, 21, 32, 38, 42, 53, 71, 75, 76, 81, 88, 95], "quantifi": [10, 14, 17, 25, 32, 35, 38, 48, 52, 54, 58, 70, 71, 82, 83, 86, 93, 95, 97], "formula": [10, 11, 14, 17, 25, 32, 35, 38, 48, 53, 54, 58, 61, 69, 70, 71, 81, 82, 85, 86, 88, 93, 95, 98], "foral": [10, 17, 32, 38, 53, 71, 81, 86, 91, 95], "enumer": [10, 11, 16, 19, 22, 32, 81, 82, 86, 90, 92], "internal_kind": [10, 32], "intern": [10, 11, 19, 21, 32, 40, 52, 56, 81, 82, 84, 85, 86, 87, 88, 89, 90, 98], "serv": [10, 32], "abstract": [10, 21, 32, 56, 81, 88], "appear": [10, 14, 25, 32, 35, 54, 58, 70, 81], "queri": [10, 14, 15, 17, 19, 20, 25, 32, 35, 36, 38, 41, 54, 56, 58, 60, 61, 62, 70, 72, 74, 81, 82, 90], "simplifi": [10, 17, 21, 32, 38, 42, 46, 47, 49, 50, 56, 63, 81], "form": [10, 11, 14, 17, 25, 32, 35, 38, 45, 54, 56, 58, 70, 81, 86, 92], "never": [10, 32, 81], "undefined_kind": [10, 32], "undefin": [10, 32], "null_term": [10, 32], "other": [10, 14, 18, 19, 21, 22, 25, 32, 35, 38, 43, 46, 47, 48, 50, 52, 54, 55, 56, 58, 60, 63, 70, 80, 81, 84, 86, 89, 95], "than": [10, 13, 14, 16, 18, 21, 25, 32, 35, 37, 38, 45, 47, 54, 58, 60, 70, 80, 81, 86, 94], "uninterpreted_sort_valu": [10, 32], "uninterpret": [10, 17, 18, 21, 32, 38, 39, 42, 48, 62, 83, 94, 97], "chainabl": [10, 32], "ariti": [10, 17, 18, 32, 38, 39, 48, 49, 63, 71], "n": [10, 17, 21, 32, 38, 42, 45, 47, 49, 51, 61, 62, 63, 69, 75, 76, 77, 80, 81, 86, 88, 91, 92, 93, 94], "mkop": [10, 17, 32, 38, 60, 66, 67, 92], "uint32_t": [10, 17, 18, 21, 38, 86], "distinct": [10, 17, 32, 38, 48, 50, 59, 62, 63, 73, 91, 94, 95], "mkconst": [10, 14, 17, 21, 25, 32, 35, 38, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 91, 92, 94, 95, 98], "Not": [10, 32, 48, 50, 56, 62, 63, 67, 75, 86], "permit": [10, 32], "bind": [10, 19, 23, 24, 32, 75, 76], "exist": [10, 14, 17, 19, 25, 32, 35, 38, 53, 58, 65, 81, 86, 93], "bound": [10, 17, 21, 32, 38, 42, 48, 53, 69, 81, 86, 94], "mkvar": [10, 17, 21, 32, 38, 65, 71, 75, 76, 77, 95], "lambda": [10, 17, 32, 38, 53, 75, 76, 77, 81], "bodi": [10, 17, 32, 38, 53, 61, 75, 76, 77, 81], "sexpr": [10, 32, 45, 46, 47, 48, 50, 56], "express": [10, 17, 18, 21, 32, 38, 39, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 67, 74, 86], "0": [10, 14, 17, 18, 21, 24, 25, 32, 35, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 91, 92, 93, 94, 95, 96, 98], "remov": [10, 17, 32, 38, 55, 56, 81, 86, 91], "cpp": [10, 14, 25, 35, 44, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 88, 91, 95, 98], "variable_list": [10, 32, 71, 95], "wit": [10, 17, 32, 38, 86, 88], "x": [10, 11, 14, 17, 21, 24, 25, 32, 35, 38, 42, 45, 47, 48, 50, 51, 53, 54, 56, 58, 59, 60, 62, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 86, 91, 92, 93, 94, 95, 98], "f": [10, 21, 32, 42, 48, 53, 56, 62, 73, 74, 75, 76, 77, 81, 82, 86, 92, 93, 95], "element": [10, 17, 18, 21, 32, 38, 39, 42, 46, 48, 49, 53, 55, 56, 59, 61, 73, 81, 91, 93, 94, 95], "descript": [10, 13, 17, 32, 84, 87], "planetmath": 10, "org": [10, 49, 50, 88], "hilbertsvarepsilonoper": 10, "satisfi": [10, 14, 15, 17, 22, 25, 32, 35, 36, 38, 43, 54, 56, 58, 60, 61, 62, 69, 70, 72, 79, 81, 86, 88, 93], "But": [10, 32], "enforc": [10, 32, 81, 89], "axiom": [10, 32, 81, 86], "ensur": [10, 32, 81, 86, 95], "uniqu": [10, 32, 48, 86], "up": [10, 32, 61, 80, 81, 86], "logic": [10, 14, 17, 25, 32, 35, 38, 47, 54, 56, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 85, 88, 91, 94, 95, 97], "equiv": [10, 32, 81, 86], "rightarrow": [10, 17, 32, 86, 91], "3": [10, 14, 16, 24, 25, 32, 35, 45, 47, 48, 50, 54, 56, 58, 59, 61, 67, 69, 70, 73, 81, 82, 86, 88, 90, 91, 92, 95], "inst_pattern_list": [10, 32], "primarili": [10, 32], "model": [10, 11, 14, 17, 25, 32, 35, 38, 50, 52, 54, 58, 59, 61, 62, 65, 67, 70, 71, 72, 73, 74, 81, 86, 88, 91, 93, 95], "arithmet": [10, 14, 16, 25, 32, 35, 47, 52, 54, 58, 62, 64, 67, 70, 83, 86, 88, 97, 98], "support": [10, 17, 21, 24, 32, 38, 42, 44, 48, 49, 52, 57, 63, 71, 79, 81, 82, 83, 85, 89, 91, 92, 93, 94, 95, 96, 97, 98], "parser": [10, 32], "moreov": [10, 32], "cautiou": [10, 32], "gener": [10, 19, 21, 32, 52, 56, 63, 81, 82, 85, 86, 89, 90], "valid": [10, 11, 13, 17, 32, 81, 86], "semant": [10, 17, 21, 32, 75, 76, 81], "unintuit": [10, 32], "unsatisfi": [10, 14, 15, 17, 25, 32, 35, 38, 52, 54, 56, 58, 66, 70, 93], "wherea": [10, 32], "notic": [10, 14, 25, 32, 35, 54, 58, 86, 93, 95], "z": [10, 21, 32, 42, 45, 47, 48, 50, 67, 74, 86, 93, 94, 95], "const_boolean": [10, 32], "boolean": [10, 14, 17, 18, 19, 21, 25, 32, 35, 38, 39, 42, 52, 53, 54, 56, 58, 62, 68, 70, 75, 77, 81, 86, 88, 93], "mktrue": [10, 17, 32, 38, 61], "mkfals": [10, 17, 32, 38], "mkboolean": [10, 17, 32, 38, 65], "NOT": [10, 32, 61, 67, 71, 75, 86, 90, 95], "negat": [10, 21, 32, 42, 45, 47, 48, 56, 60, 62, 69, 81, 86], "AND": [10, 32, 60, 61, 62, 65, 67, 69, 72, 74, 75, 76, 81, 90], "conjunct": [10, 21, 32, 42, 47, 81], "impli": [10, 17, 32, 38, 46, 48, 60, 61, 62, 66, 67, 81, 86], "implic": [10, 21, 32, 42, 48, 86], "OR": [10, 32, 60, 67, 75, 86], "disjunct": [10, 17, 21, 32, 38, 42, 47, 81], "xor": [10, 32, 47, 48, 60, 86], "exclus": [10, 21, 32, 42, 47, 81], "left": [10, 32, 47, 86, 93, 94], "ITE": [10, 32, 60, 75, 77, 81, 86], "els": [10, 14, 21, 25, 32, 35, 42, 48, 54, 58, 60, 70, 81, 92], "second": [10, 14, 25, 32, 35, 38, 47, 49, 54, 58, 63, 70, 93], "apply_uf": [10, 21, 32, 48, 62, 75, 76, 86, 90], "instanti": [10, 12, 17, 18, 32, 33, 38, 39, 52, 63, 81, 82, 86, 92], "cardinality_constraint": [10, 32], "cardin": [10, 17, 21, 32, 38, 42, 81, 88, 94, 95], "constraint": [10, 14, 17, 21, 25, 32, 35, 38, 42, 48, 52, 54, 56, 58, 69, 70, 71, 75, 76, 77, 81, 88, 93], "interpret": [10, 17, 32, 38, 56, 81, 89, 93, 95], "predic": [10, 17, 18, 32, 38, 39, 45, 49, 73, 81, 86, 91, 92, 93, 95], "uinterpret": [10, 32], "less": [10, 16, 18, 21, 32, 37, 45, 47, 81, 86], "upper": [10, 17, 21, 32, 38, 42, 69, 81, 86], "mkcardinalityconstraint": [10, 17, 32, 38], "ho_appli": [10, 32, 86], "higher": [10, 32, 34, 81, 86], "order": [10, 17, 18, 21, 32, 38, 39, 42, 49, 63, 81, 86, 94], "encod": [10, 17, 32, 38, 50, 60, 86], "domain": [10, 17, 18, 32, 38, 39, 46, 48, 49, 52, 55, 63, 81, 91, 93, 94], "real": [10, 14, 17, 18, 21, 25, 32, 35, 38, 39, 42, 45, 48, 50, 53, 54, 58, 69, 70, 81, 86, 97, 98], "match": [10, 17, 26, 27, 32, 38, 48, 49, 80, 81, 93], "mult": [10, 32, 45, 51, 69, 98], "iand": [10, 32, 81], "integ": [10, 14, 17, 18, 19, 21, 24, 25, 32, 35, 38, 39, 42, 45, 47, 48, 49, 50, 54, 56, 58, 62, 63, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 81, 86, 90, 94, 95, 97], "wise": [10, 32, 47], "parameter": [10, 18, 32, 39, 63, 86], "posit": [10, 12, 16, 17, 21, 32, 33, 37, 38, 42, 50, 56, 67, 81, 86, 94], "width": [10, 17, 18, 21, 32, 38, 39, 42, 47, 60, 81], "k": [10, 24, 32, 38, 46, 49, 51, 61, 86], "_": [10, 18, 32, 39, 60, 61, 63, 66, 67, 81, 82, 85, 86, 92, 93, 95], "i_1": [10, 32, 86], "i_2": [10, 32, 86], "bv2int": [10, 32, 47], "bvand": [10, 32, 47, 81], "int2bv": [10, 32, 47], "indic": [10, 12, 17, 20, 21, 32, 33, 41, 42, 50, 81, 86, 89, 90], "pow2": [10, 32, 81], "power": [10, 32, 45, 61, 81], "rais": [10, 17, 32, 56], "neg": [10, 16, 17, 21, 32, 37, 38, 42, 45, 50, 76, 81, 86, 89, 94], "sub": [10, 14, 21, 25, 32, 35, 45, 54, 58, 69, 70, 75, 81, 86, 94], "divis": [10, 17, 32, 45, 47, 50, 81], "ints_divis": [10, 32], "ints_modulu": [10, 32], "modulu": [10, 32, 45, 47], "ab": [10, 32, 74, 81], "absolut": [10, 32, 50], "pow": [10, 32, 45], "exponenti": [10, 32, 45, 86, 98], "sine": [10, 32, 45, 81, 86, 98], "cosin": [10, 32, 45, 98], "tangent": [10, 32, 45, 81, 86, 98], "cosec": [10, 32, 45, 98], "secant": [10, 32, 45, 86, 98], "cotang": [10, 32, 45, 98], "arcsin": [10, 32, 45, 98], "arc": [10, 32], "arccosin": [10, 32, 45, 98], "arctang": [10, 32, 45, 98], "arccosec": [10, 32, 45, 98], "arcsec": [10, 32, 45, 98], "arccotang": [10, 32, 45, 98], "sqrt": [10, 32, 45, 98], "squar": [10, 32, 45, 50, 98], "root": [10, 32, 45, 50, 86, 98], "divid": [10, 14, 25, 32, 35, 54, 58, 70], "const_rat": [10, 32], "precis": [10, 16, 17, 24, 32, 37, 50, 67, 81, 89, 98], "ration": [10, 14, 17, 21, 24, 25, 32, 35, 42, 45, 54, 58, 67, 70, 86, 98], "mkreal": [10, 14, 17, 25, 32, 35, 38, 54, 58, 69, 70, 98], "int64_t": [10, 13, 14, 17, 19, 21, 25, 35, 54, 58, 70, 81, 90], "const_integ": [10, 32], "mkinteg": [10, 14, 17, 25, 32, 35, 38, 54, 58, 59, 62, 63, 69, 70, 72, 73, 74, 75, 76, 77, 91, 94, 95], "lt": [10, 14, 25, 32, 35, 45, 50, 54, 58, 69, 70, 77, 98], "leq": [10, 14, 25, 32, 35, 45, 50, 54, 58, 62, 69, 70, 75, 77, 86, 91], "gt": [10, 32, 45, 50, 63, 72, 81, 98], "greater": [10, 16, 18, 21, 32, 37, 45, 47, 86], "geq": [10, 32, 45, 50, 69, 71, 74, 75, 86, 91], "is_integ": [10, 32], "to_integ": [10, 32], "convert": [10, 14, 17, 25, 32, 35, 38, 42, 48, 49, 54, 56, 58, 67, 70, 81, 86, 87], "floor": [10, 32], "to_real": [10, 32, 45], "pi": [10, 17, 21, 32, 38, 42, 45, 67, 81, 86, 98], "mkpi": [10, 17, 32, 38, 98], "isrealvalu": [10, 21, 32, 42], "fix": [10, 18, 21, 32, 39, 42, 86, 94], "mkbitvector": [10, 17, 32, 38, 60, 61, 67], "uint64_t": [10, 13, 14, 17, 19, 21, 25, 35, 54, 58, 70, 81, 90], "bitvector_concat": [10, 32], "concaten": [10, 21, 32, 42, 47, 72, 74, 86, 94], "bitvector_and": [10, 32], "bitvector_or": [10, 32], "bitvector_xor": [10, 32, 60], "bitvector_not": [10, 32], "bitvector_nand": [10, 32], "nand": [10, 32], "bitvector_nor": [10, 32], "nor": [10, 32], "bitvector_xnor": [10, 32], "xnor": [10, 32], "bitvector_comp": [10, 32], "comparison": [10, 18, 21, 32, 47, 81, 86], "bitvector_mult": [10, 32, 61], "bitvector_add": [10, 32, 60], "bitvector_sub": [10, 32, 60], "bitvector_neg": [10, 32], "complement": [10, 32, 47, 55, 81, 95], "bitvector_udiv": [10, 32], "unsign": [10, 32, 42, 47, 50, 61, 81], "truncat": [10, 32], "toward": [10, 16, 32, 37, 50], "divisor": [10, 32], "zero": [10, 14, 16, 17, 21, 25, 26, 27, 32, 35, 37, 38, 42, 47, 50, 54, 58, 61, 62, 67, 70, 75, 76, 77, 81, 82, 86, 89], "bitvector_urem": [10, 32], "remaind": [10, 32, 47, 50], "dividend": [10, 32], "bitvector_sdiv": [10, 32], "sign": [10, 21, 32, 42, 47, 50, 81, 86, 90], "bitvector_srem": [10, 32], "bitvector_smod": [10, 32], "bitvector_shl": [10, 32], "shift": [10, 32, 47, 86], "bitvector_lshr": [10, 32], "right": [10, 14, 25, 32, 35, 47, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 93, 94, 95, 98], "bitvector_ashr": [10, 32], "bitvector_ult": [10, 32], "bitvector_ul": [10, 32], "bitvector_ugt": [10, 32], "bitvector_ug": [10, 32], "bitvector_slt": [10, 32, 61], "bitvector_sl": [10, 32], "bitvector_sgt": [10, 32, 61], "bitvector_sg": [10, 32], "bitvector_ultbv": [10, 32], "bitvector_sltbv": [10, 32], "bitvector_it": [10, 32, 81], "condit": [10, 17, 21, 32, 38, 42, 77, 81, 85, 86], "bitvector_redor": [10, 32], "redor": [10, 32], "bitvector_redand": [10, 32], "redand": [10, 32], "bitvector_extract": [10, 12, 17, 32, 33, 60, 66], "extract": [10, 32, 47, 49, 60, 62, 64, 80, 81, 94], "lower": [10, 32, 81, 86], "bitvector_repeat": [10, 17, 32], "repeat": [10, 32, 81], "time": [10, 14, 22, 25, 32, 35, 43, 47, 54, 58, 70, 81], "bitvector_zero_extend": [10, 17, 32], "extens": [10, 32, 71, 79, 91, 92, 93, 95, 98], "extend": [10, 32, 81, 85, 86, 98], "bitvector_sign_extend": [10, 17, 32], "bitvector_rotate_left": [10, 17, 32], "rotat": [10, 32, 47], "bitvector_rotate_right": [10, 17, 32], "int_to_bitvector": [10, 17, 32], "convers": [10, 32, 50, 96], "bitvector_to_nat": [10, 32], "const_floatingpoint": [10, 32], "float": [10, 14, 16, 17, 18, 21, 25, 32, 35, 37, 38, 39, 42, 45, 48, 52, 54, 58, 64, 70, 88, 90, 97], "ieee": [10, 16, 32, 50, 67, 80, 88], "754": [10, 16, 32, 67, 80, 88], "mkfloatingpoint": [10, 17, 32, 38, 67], "const_roundingmod": [10, 32], "mkroundingmod": [10, 17, 32, 38, 67], "floatingpoint_fp": [10, 32], "liter": [10, 11, 17, 32, 38, 48, 81, 82, 86, 93], "tripl": [10, 32], "expon": [10, 17, 18, 21, 32, 38, 39, 42, 50, 86], "significand": [10, 17, 18, 21, 32, 38, 39, 42, 50], "without": [10, 14, 17, 25, 32, 35, 38, 54, 58, 67, 70, 89], "hidden": [10, 32], "floatingpoint_eq": [10, 32, 67], "floatingpoint_ab": [10, 32], "floatingpoint_neg": [10, 32], "floatingpoint_add": [10, 32, 67], "floatingpoint_sub": [10, 32], "sutract": [10, 32], "floatingpoint_mult": [10, 32], "multipli": [10, 14, 25, 32, 35, 50, 54, 58, 70], "floatingpoint_div": [10, 32], "floatingpoint_fma": [10, 32], "fuse": [10, 32, 50], "4": [10, 14, 16, 25, 32, 35, 45, 47, 50, 54, 58, 59, 61, 70, 81, 90, 91, 92, 95], "floatingpoint_sqrt": [10, 32], "floatingpoint_rem": [10, 32], "floatingpoint_rti": [10, 32], "round": [10, 16, 17, 18, 21, 32, 37, 38, 39, 42, 52, 61, 67, 81], "integr": [10, 21, 32, 52, 88, 90], "floatingpoint_min": [10, 32], "minimum": [10, 13, 32, 50, 80, 81, 86], "floatingpoint_max": [10, 32], "maximum": [10, 13, 32, 50, 69, 80, 81, 86], "floatingpoint_leq": [10, 32, 67], "floatingpoint_lt": [10, 32, 67], "floatingpoint_geq": [10, 32], "floatingpoint_gt": [10, 32], "floatingpoint_is_norm": [10, 32, 67], "normal": [10, 17, 32, 38, 50, 67, 81, 86], "floatingpoint_is_subnorm": [10, 32], "floatingpoint_is_zero": [10, 32], "floatingpoint_is_inf": [10, 32, 67], "infinit": [10, 16, 32, 37, 49, 81, 94, 95], "floatingpoint_is_nan": [10, 32, 67], "nan": [10, 17, 32, 38, 50, 67], "floatingpoint_is_neg": [10, 32], "floatingpoint_is_po": [10, 32], "floatingpoint_to_fp_from_ieee_bv": [10, 17, 32], "floatingpoint_to_fp_from_fp": [10, 17, 32], "floatingpoint_to_fp_from_r": [10, 17, 32], "floatingpoint_to_fp_from_sbv": [10, 17, 32], "floatingpoint_to_fp_from_ubv": [10, 17, 32], "floatingpoint_to_ubv": [10, 17, 32], "floatingpoint_to_sbv": [10, 17, 32, 67], "floatingpoint_to_r": [10, 32, 67], "select": [10, 16, 27, 32, 37, 46, 61, 81, 82, 86, 89, 92], "const_arrai": [10, 32], "eq_rang": [10, 32], "b": [10, 14, 17, 18, 24, 25, 32, 35, 39, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 60, 67, 70, 71, 73, 81, 83, 85, 86, 88, 91, 92, 93, 94, 95], "rang": [10, 32, 46, 48, 49, 55, 61, 63, 67, 74, 75, 76, 77, 81, 86], "j": [10, 17, 32, 38, 46, 49, 63, 86, 88, 92, 94], "inclus": [10, 32, 81], "current": [10, 13, 14, 17, 25, 32, 35, 38, 42, 52, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 86, 89, 90, 91, 94, 95, 97, 98], "creation": [10, 32], "enabl": [10, 14, 17, 23, 25, 32, 35, 38, 54, 56, 58, 70, 80, 81, 82, 92, 98], "exp": [10, 17, 32, 38, 50, 72, 74, 81, 86, 98], "misappli": [10, 32], "belong": [10, 11, 12, 21, 32, 93], "field": [10, 17, 32, 38, 49, 92], "libv2": [10, 14, 25, 32, 35, 54, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 81, 91, 95, 98], "l": [10, 24, 32, 49, 80, 81, 86, 88, 93, 96], "h": [10, 14, 25, 32, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 86, 91, 93, 95, 98], "repres": [10, 12, 17, 18, 19, 21, 24, 32, 33, 38, 45, 47, 48, 50, 53, 56, 61, 81, 86, 91], "ast": [10, 21, 32, 42, 45, 46, 47, 48, 49, 50, 53, 55, 56, 81], "match_bind_cas": [10, 32], "match_cas": [10, 32], "pattern": [10, 32, 52, 81], "cover": [10, 13, 32, 80, 81, 86], "least": [10, 16, 17, 32, 37, 38, 48, 73, 81, 95], "catch": [10, 32, 65], "against": [10, 32], "evalu": [10, 14, 25, 32, 35, 47, 54, 56, 58, 63, 70, 81, 86, 92], "binder": [10, 17, 32, 38, 86], "contain": [10, 11, 17, 18, 21, 32, 38, 39, 42, 48, 49, 53, 56, 80, 81, 85, 86, 94, 95], "tuple_project": [10, 17, 32, 92], "project": [10, 14, 25, 32, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 92, 95, 98], "take": [10, 17, 18, 21, 32, 38, 39, 42, 50, 55, 81, 89], "obtain": [10, 13, 14, 17, 19, 25, 32, 35, 38, 40, 54, 58, 70, 86, 90, 94, 96], "compon": [10, 11, 14, 17, 25, 32, 35, 38, 54, 58, 70, 86, 89], "its": [10, 11, 12, 13, 17, 19, 21, 32, 33, 42, 48, 49, 63, 75, 76, 81, 86, 87, 89, 90, 91, 93], "10": [10, 14, 17, 21, 25, 32, 35, 42, 45, 46, 47, 49, 50, 54, 56, 58, 70, 77, 81, 88], "20": [10, 32, 49, 50, 88], "30": [10, 32, 56, 66], "40": [10, 32], "yield": [10, 32], "sep_nil": [10, 32], "separ": [10, 17, 32, 38, 44, 48, 69, 75, 76, 77, 88, 97], "mksepnil": [10, 17, 32, 38, 93], "sep_emp": [10, 32], "empti": [10, 15, 17, 19, 23, 32, 36, 38, 49, 55, 59, 71, 72, 73, 81, 86, 91, 93, 94, 95], "heap": [10, 17, 32, 38, 81, 93], "mksepemp": [10, 17, 32, 38, 93], "sep_pto": [10, 32, 93], "relat": [10, 17, 18, 32, 38, 52, 64, 77, 79, 81, 86, 88, 93, 97], "denot": [10, 14, 25, 32, 35, 54, 58, 70, 71, 86, 92, 93, 94], "locat": [10, 17, 32, 38, 80, 93], "data": [10, 17, 21, 32, 38, 42, 88, 92, 93], "sep_star": [10, 32, 93], "star": [10, 32, 93], "child": [10, 21, 32, 42, 62], "hold": [10, 13, 19, 21, 32, 42, 48, 61, 67, 73, 81, 82, 85, 86, 95], "disjoint": [10, 32, 59, 71, 91, 93], "sep_wand": [10, 32, 93], "magic": [10, 32, 93], "wand": [10, 32, 93], "antecend": [10, 32], "conclus": [10, 32, 81, 86], "anteced": [10, 32], "set_empti": [10, 32], "mkemptyset": [10, 17, 32, 38, 71, 73, 95], "set_union": [10, 32, 71, 73, 95], "union": [10, 21, 32, 42, 49, 55, 59, 71, 73, 74, 86, 91, 93, 95], "set_int": [10, 32, 71, 73, 95], "intersect": [10, 32, 55, 59, 71, 73, 81, 86, 91, 95], "set_minu": [10, 32, 95], "set_subset": [10, 32, 71, 73, 95], "subset": [10, 11, 14, 17, 25, 32, 35, 38, 54, 55, 58, 70, 71, 73, 81, 95], "set_memb": [10, 32, 71, 73, 95], "membership": [10, 32, 91, 95], "member": [10, 13, 32, 55, 71, 73, 91, 95], "set_singleton": [10, 32, 73, 95], "singleton": [10, 21, 32, 42, 55, 73, 95], "set_insert": [10, 32, 95], "insert": [10, 32, 56, 75, 76, 77, 95], "set_card": [10, 32, 95], "set_compl": [10, 32, 95], "respect": [10, 13, 17, 19, 21, 32, 81, 86, 89, 93, 97], "set_univers": [10, 21, 32, 42], "mkuniverseset": [10, 17, 32, 38, 71, 95], "theori": [10, 11, 16, 17, 18, 21, 22, 32, 38, 43, 52, 64, 79, 83, 85, 86, 88, 89, 90], "issetvalu": [10, 21, 32, 42], "set_comprehens": [10, 32], "comprehens": [10, 32, 87], "specifi": [10, 11, 16, 17, 32, 38, 48, 63, 80, 81, 86, 98], "x_1": [10, 17, 32, 38, 86], "x_n": [10, 32, 38, 86], "p": [10, 17, 21, 32, 38, 48, 49, 53, 56, 62, 81, 82, 86, 88], "y": [10, 14, 21, 24, 25, 32, 35, 42, 45, 47, 48, 50, 53, 54, 56, 58, 62, 67, 69, 70, 72, 74, 75, 81, 82, 86, 88, 91, 93, 94, 95, 98], "wedg": [10, 14, 17, 25, 32, 35, 38, 54, 58, 86], "leftrightarrow": [10, 32, 86], "set_choos": [10, 32], "choos": [10, 14, 25, 32, 35, 54, 58, 70, 80, 81], "determinist": [10, 32, 89], "set_is_singleton": [10, 32], "set_map": [10, 32], "map": [10, 17, 18, 19, 21, 32, 38, 39, 42, 48, 86, 90], "s_1": [10, 32, 86], "s_2": [10, 32, 86], "set_filt": [10, 32], "filter": [10, 32, 81], "bag": [10, 17, 18, 32, 38, 39, 52, 64, 97], "set_fold": [10, 32], "fold": [10, 32, 84], "combin": [10, 32, 64, 71, 79, 81, 97], "start": [10, 14, 17, 25, 26, 27, 32, 35, 38, 54, 58, 70, 75, 76, 82, 85, 93, 94], "initi": [10, 17, 32, 38, 49, 81], "relation_join": [10, 32, 71, 95], "join": [10, 32, 71, 95], "relation_product": [10, 32, 95], "cartesian": [10, 32], "product": [10, 24, 32, 47, 56, 79, 81, 95], "relation_transpos": [10, 32, 71, 95], "transpos": [10, 32, 71, 95], "relation_tclosur": [10, 32, 71, 95], "transit": [10, 17, 32, 38, 71, 77, 81, 86, 95], "closur": [10, 32, 71, 95], "relation_join_imag": [10, 32], "imag": [10, 32], "relation_iden": [10, 32], "ident": [10, 12, 21, 32, 48, 76, 92], "relation_group": [10, 32], "group": [10, 32, 81], "rel": [10, 32, 71, 95], "n_1": [10, 32], "dot": [10, 32, 38, 42, 81, 86, 87], "n_k": [10, 32], "partit": [10, 32, 81], "have": [10, 14, 17, 18, 19, 21, 25, 32, 35, 38, 44, 48, 49, 54, 56, 58, 60, 70, 71, 80, 81, 86, 91, 92, 93, 94, 95], "part": [10, 14, 17, 23, 25, 32, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 89, 90, 91, 94, 95, 98], "relation_aggreg": [10, 32], "aggreg": [10, 32], "aggr": [10, 32], "natur": [10, 32, 91, 98], "t_1": [10, 32, 86], "t_j": [10, 32], "relation_project": [10, 32], "bag_empti": [10, 32], "mkemptybag": [10, 17, 32, 38, 59, 91], "bag_union_max": [10, 32, 59, 91], "max": [10, 32, 48, 59, 75, 81, 91], "bag_union_disjoint": [10, 32, 59, 91], "sum": [10, 32, 45, 47, 49, 56, 62, 81, 86], "bag_inter_min": [10, 32, 59, 91], "min": [10, 32, 75, 81, 91, 96], "bag_difference_subtract": [10, 32, 91], "bag_difference_remov": [10, 32], "share": [10, 21, 24, 32, 81, 83], "bag_subbag": [10, 32, 59, 91], "bag_count": [10, 32, 59, 91], "bag_memb": [10, 32, 91], "bag_duplicate_remov": [10, 32, 91], "duplic": [10, 18, 21, 32, 39, 42, 91], "elimin": [10, 17, 32, 38, 81, 86, 91], "exactli": [10, 17, 32, 38], "bag_mak": [10, 32, 59, 91], "make": [10, 19, 24, 32, 61, 66, 67, 72, 74, 80, 81, 91, 95], "bag_card": [10, 32], "bag_choos": [10, 32], "bag_is_singleton": [10, 32], "bag_from_set": [10, 32], "bag_to_set": [10, 32], "bag_map": [10, 32], "bag_filt": [10, 32], "subbag": [10, 32, 59, 91], "bag_fold": [10, 32], "bag_partit": [10, 32], "r": [10, 15, 32, 48, 49, 56, 67, 74, 80, 82, 86, 92], "table_product": [10, 32], "tabl": [10, 18, 32, 48, 91, 92, 93, 94, 95], "cross": [10, 32, 81], "table_project": [10, 32], "table_aggreg": [10, 32], "table_join": [10, 32], "m_1": [10, 32, 91], "m_k": [10, 32], "table_group": [10, 32], "string_concat": [10, 32, 74], "concat": [10, 32, 47, 50, 72, 81], "string_in_regexp": [10, 32, 74], "reglan": [10, 18, 32, 39, 74, 96], "string_length": [10, 32, 74], "length": [10, 18, 32, 39, 72, 74, 75, 76, 77, 81, 86, 94], "string_substr": [10, 32], "substr": [10, 32, 86, 96], "string_upd": [10, 32], "replac": [10, 18, 21, 32, 38, 39, 42, 56, 81, 86, 92, 94], "otherwis": [10, 17, 18, 21, 32, 38, 42, 81, 86, 94, 96], "origin": [10, 14, 25, 32, 35, 54, 58, 70, 81, 86], "preserv": [10, 32], "strong": [10, 32, 81], "string_charat": [10, 32], "charact": [10, 17, 32, 38, 81, 90, 96], "string_contain": [10, 32], "whether": [10, 13, 14, 17, 19, 20, 25, 32, 35, 38, 41, 48, 50, 54, 56, 58, 61, 68, 70, 81, 86, 90, 92], "anoth": [10, 14, 25, 32, 35, 54, 58, 60, 70, 81, 89], "alwai": [10, 32, 49, 55, 81, 86, 90, 95], "string_indexof": [10, 32], "string_indexof_r": [10, 32], "string_replac": [10, 32], "s_3": [10, 32], "unmodifi": [10, 32, 76], "string_replace_al": [10, 32], "occurr": [10, 32, 56, 86, 92, 94], "string_replace_r": [10, 32], "string_replace_re_al": [10, 32], "string_to_low": [10, 32], "string_to_upp": [10, 32], "string_rev": [10, 32], "revers": [10, 32, 86, 94, 96], "string_to_cod": [10, 32], "code": [10, 25, 32, 48, 60, 61, 80, 81, 86, 96], "string_from_cod": [10, 32], "string_lt": [10, 32], "strictli": [10, 32], "lexiograph": [10, 32], "string_leq": [10, 32], "string_prefix": [10, 32], "s1": [10, 32, 74, 94], "string_suffix": [10, 32], "suffix": [10, 32, 86, 94], "string_is_digit": [10, 32], "digit": [10, 16, 32, 37], "9": [10, 14, 24, 25, 32, 35, 54, 58, 70, 80], "string_from_int": [10, 32], "string_to_int": [10, 32], "total": [10, 32, 81], "const_str": [10, 32], "mkstring": [10, 17, 32, 38, 59, 74, 91], "wstring": [10, 17, 21], "string_to_regexp": [10, 32, 74], "regexp": [10, 17, 32, 39, 81], "regexp_concat": [10, 32, 74], "regexp_union": [10, 32, 74], "regexp_int": [10, 32], "regexp_diff": [10, 32], "regexp_star": [10, 32, 74], "regexp_plu": [10, 32], "regexp_opt": [10, 32], "regexp_rang": [10, 32, 74], "regexp_repeat": [10, 32], "repetit": [10, 32], "regexp_loop": [10, 32], "loop": [10, 32, 61, 62, 63, 81], "regexp_non": [10, 32], "none": [10, 17, 32, 38, 45, 46, 47, 48, 49, 50, 53, 55, 56, 81, 83], "mkregexpnon": [10, 17, 32, 38], "regexp_al": [10, 32], "mkregexpal": [10, 17, 32, 38], "regexp_allchar": [10, 32], "mkregexpallchar": [10, 17, 32, 38], "regexp_compl": [10, 32], "seq_concat": [10, 21, 32, 72, 94], "sequenc": [10, 17, 18, 21, 32, 38, 39, 42, 52, 64, 81, 86, 90, 97], "seq_length": [10, 32, 72, 94], "seq_extract": [10, 32, 94], "subsequ": [10, 32], "seq_upd": [10, 32, 94], "seq_at": [10, 32, 94], "seq_contain": [10, 32, 94], "check": [10, 14, 17, 22, 25, 32, 35, 38, 43, 49, 50, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98], "seq_indexof": [10, 32, 94], "seq_replac": [10, 32, 94], "seq_replace_al": [10, 32, 94], "seq_rev": [10, 32, 94], "seq_prefix": [10, 32, 94], "seq_suffix": [10, 32, 94], "const_sequ": [10, 21, 32], "seq": [10, 21, 32, 72, 81, 94], "unit": [10, 11, 21, 32, 42, 72, 81, 86, 94], "c1": [10, 21, 32, 42, 81, 92, 93], "cn": [10, 32, 93], "c_1": [10, 21, 32, 42, 86], "c_n": [10, 21, 32, 42, 86], "some": [10, 13, 14, 17, 21, 25, 32, 35, 38, 42, 52, 54, 58, 61, 62, 69, 70, 80, 81, 86, 89, 90, 92, 94, 96], "getsequencevalu": [10, 21, 32, 42], "mkemptysequ": [10, 17, 32, 38, 72, 94], "seq_unit": [10, 21, 32, 72, 94], "seq_nth": [10, 32, 94], "nth": [10, 32, 94], "inst_pattern": [10, 32], "existenti": [10, 32, 53, 81, 86], "under": [10, 14, 25, 32, 35, 54, 58, 70, 80, 81, 86], "inst_no_pattern": [10, 32], "inst_pool": [10, 17, 32], "pool": [10, 17, 32, 38, 81], "annot": [10, 32, 81, 86], "declarepool": [10, 17, 32, 38], "q": [10, 17, 32, 38, 45, 48, 53, 56, 72, 74, 81, 82, 86], "occur": [10, 11, 32, 81, 86, 89], "compris": [10, 32], "inst_add_to_pool": [10, 32], "instantanti": [10, 32], "assum": [10, 17, 32, 38, 47, 48, 49, 56, 59, 60, 62, 66, 67, 73, 81, 82, 83, 86, 91, 92, 93, 94, 95], "skolem_add_to_pool": [10, 32], "skolem": [10, 32, 81, 86], "inst_attribut": [10, 32], "attribut": [10, 17, 32, 38], "custom": [10, 32, 56, 81, 84], "properti": [10, 32, 67, 90], "ascrib": [10, 32], "keyword": [10, 17, 32, 38, 56], "last_kind": [10, 32], "mark": [10, 32], "templat": [10, 12, 13, 18, 21, 81], "struct": [10, 12, 13, 18, 21], "hash": [10, 12, 18, 21, 48], "blockmodelsmod": [11, 17], "block": [11, 17, 38, 92], "how": [11, 17, 19, 38, 57, 62, 64, 67, 75, 76, 77, 80, 81, 86, 90, 91, 95], "blockmodel": [11, 17, 38], "blockmodelvalu": [11, 17, 38], "sat": [11, 14, 17, 24, 25, 35, 38, 49, 50, 54, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 83, 85, 86, 88, 89, 91, 92, 93, 94, 95, 98], "skeleton": 11, "concret": [11, 48, 92], "learnedlittyp": [11, 17, 38], "learn": [11, 17, 38, 81], "categori": [11, 80], "getlearnedliter": [11, 17, 38], "note": [11, 18, 21, 39, 42, 45, 48, 50, 51, 63, 80, 81, 85, 86, 87, 88, 92, 96], "conceptu": [11, 86], "classifi": 11, "criteria": [11, 81], "thei": [11, 13, 14, 21, 25, 35, 54, 58, 70, 81, 86, 89], "meet": [11, 81], "learned_lit_preprocess_solv": 11, "turn": [11, 14, 16, 25, 35, 42, 54, 58, 70, 81], "substitut": [11, 18, 21, 39, 42, 56, 81, 82, 86], "dure": [11, 18, 21, 39, 42, 80, 81, 82, 86, 89], "preprocess": [11, 22, 43, 81, 82, 86, 89], "particular": [11, 13, 17, 19, 81, 86, 90, 92, 95], "learned_lit_preprocess": 11, "top": [11, 14, 17, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 86, 91, 92, 95, 98], "level": [11, 14, 17, 25, 34, 35, 38, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 86, 91, 95, 98], "claus": [11, 81, 86], "learned_lit_input": [11, 17, 38], "typic": 11, "interest": [11, 62, 80, 81], "learned_lit_solv": 11, "solvabl": [11, 81], "learned_lit_constant_prop": 11, "made": [11, 17, 38], "propag": [11, 52, 81, 86], "learned_lit_intern": 11, "fall": 11, "learned_lit_unknown": 11, "produc": [11, 14, 17, 25, 35, 38, 48, 54, 58, 59, 61, 62, 65, 67, 70, 71, 72, 73, 74, 80, 81, 83, 85, 87, 91, 95], "proofcompon": [11, 17, 38], "proof": [11, 17, 38, 67, 79, 88], "proof_component_raw_preprocess": 11, "g1": [11, 76], "gn": 11, "assumpt": [11, 17, 38, 56, 60, 62, 81, 86], "f1": [11, 86, 93], "fm": 11, "necessarili": 11, "proof_component_preprocess": 11, "gu1": 11, "gun": 11, "fu1": 11, "fum": 11, "unsat": [11, 14, 17, 24, 25, 35, 38, 49, 50, 54, 56, 58, 59, 60, 62, 65, 66, 67, 69, 70, 81, 82, 83, 85, 86, 90, 91, 93, 94, 95, 98], "core": [11, 14, 17, 24, 25, 35, 38, 52, 54, 58, 70, 81, 86, 89, 90], "befor": [11, 17, 38, 81, 82], "immedi": [11, 17, 38, 89], "respons": [11, 17, 21, 38, 81], "proof_component_sat": 11, "l1": [11, 49], "lk": 11, "lemma": [11, 81, 86, 89, 90], "proof_component_theory_lemma": 11, "contrast": [11, 17, 21, 38, 89], "proof_component_ful": [11, 17, 38], "ltype": 11, "write": [11, 25, 58, 81, 86], "pc": 11, "syntact": [12, 17, 21, 38], "node": [12, 21, 48, 49, 81, 84, 86, 92, 93], "manag": [12, 21, 80, 81], "getkind": [12, 21, 33, 42, 75, 76, 77], "isindex": [12, 33], "iff": [12, 21, 33, 38, 39, 42, 86, 92, 93], "getnumindic": [12, 33], "about": [13, 17, 38, 49, 59, 71, 72, 73, 74, 82, 86, 90, 91, 95], "alias": [13, 56, 81], "inform": [13, 14, 17, 19, 25, 35, 38, 40, 49, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 90, 91, 95, 98], "concern": 13, "inspect": [13, 19, 21, 81, 90], "valueinfo": 13, "altern": [13, 14, 21, 25, 35, 44, 54, 57, 58, 62, 63, 70, 80, 81, 86, 92, 98], "voidinfo": 13, "nativ": [13, 21, 42, 80], "default": [13, 18, 19, 21, 38, 40, 42, 46, 50, 55, 56, 80, 81, 84, 86, 90], "numberinfo": 13, "doubl": [13, 19, 50, 81, 86, 90], "modeinfo": 13, "conveni": [13, 86], "manner": [13, 81, 86], "boolvalu": 13, "stringvalu": 13, "intvalu": 13, "uintvalu": 13, "doublevalu": 13, "expect": [13, 14, 24, 25, 35, 45, 48, 49, 54, 58, 60, 61, 63, 66, 67, 70, 86, 93], "also": [13, 14, 17, 18, 19, 21, 25, 35, 38, 39, 45, 47, 49, 54, 58, 62, 63, 67, 69, 70, 80, 81, 83, 85, 86, 90, 92, 95, 97], "getdriveropt": [13, 17], "optioninfovari": 13, "variant": [13, 49], "possibl": [13, 14, 19, 25, 35, 54, 58, 70, 80, 81, 89, 95], "setbyus": [13, 56], "defaultvalu": 13, "currentvalu": 13, "typenam": 13, "numer": [13, 14, 17, 21, 25, 26, 27, 35, 38, 45, 47, 50, 54, 58, 70, 81], "basic": [13, 52, 68, 81, 85], "instanc": [14, 19, 25, 35, 48, 49, 73, 81, 92, 95], "ask": [14, 25, 35, 54, 58, 65, 70], "setopt": [14, 17, 25, 35, 38, 54, 56, 58, 59, 61, 62, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 95], "next": [14, 17, 25, 35, 38, 54, 58, 62, 63, 70, 81], "simplest": [14, 25, 35, 54, 58, 70], "wai": [14, 16, 25, 35, 54, 57, 58, 70, 81, 86, 89], "qf_all": [14, 25, 35, 54, 58, 70, 93, 95], "To": [14, 25, 35, 49, 54, 58, 63, 70, 80, 86, 89, 92, 93, 98], "optim": [14, 25, 35, 54, 58, 70, 81, 86], "behavior": [14, 25, 35, 54, 58, 70], "qf_bv": [14, 25, 35, 54, 58, 60, 66, 70], "qf_aufbv": [14, 25, 35, 54, 58, 61, 70], "setlog": [14, 17, 25, 35, 38, 54, 58, 59, 60, 61, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 92, 93, 94, 95, 98], "realsort": [14, 25, 35, 45, 47, 48, 53, 54, 58, 70], "getrealsort": [14, 17, 25, 35, 38, 54, 58, 69, 70, 98], "intsort": [14, 25, 35, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 62, 63, 70, 73, 94], "getintegersort": [14, 17, 25, 35, 38, 54, 58, 62, 63, 65, 69, 70, 71, 72, 73, 75, 76, 77, 92, 94, 95], "now": [14, 25, 35, 49, 54, 58, 63, 67, 70, 81], "actual": [14, 15, 19, 25, 35, 36, 49, 54, 56, 58, 63, 86, 89], "regard": [14, 25, 35, 54, 58, 70], "them": [14, 25, 35, 54, 56, 58, 63, 70, 81, 85], "formal": [14, 25, 35, 54, 58, 70, 88], "Their": [14, 25, 35, 54, 58, 70], "gradual": [14, 25, 35, 54, 58, 70], "xplusi": [14, 25, 35, 54, 58, 70], "src": [14, 25, 35, 54, 58, 70, 94], "cvc5_kind": [14, 25, 35, 54, 58, 70], "constraint1": [14, 25, 35, 54, 58, 70], "constraint2": [14, 25, 35, 54, 58, 70], "constraint3": [14, 25, 35, 54, 58, 70], "constraint4": [14, 25, 35, 54, 58, 70], "assertformula": [14, 17, 25, 35, 38, 54, 58, 60, 61, 62, 63, 66, 67, 69, 70, 71, 95, 98], "r1": [14, 25, 35, 54, 58, 70], "checksat": [14, 15, 17, 25, 35, 36, 38, 54, 58, 60, 62, 63, 65, 67, 69, 70, 71, 81, 89, 95, 98], "either": [14, 17, 25, 26, 27, 35, 38, 54, 56, 58, 67, 70, 81, 86, 89, 90, 94], "unknown": [14, 15, 17, 20, 22, 25, 35, 36, 38, 41, 54, 56, 58, 70, 81, 82, 86, 89], "statu": [14, 25, 35, 81, 86, 93, 94], "issat": [14, 15, 25, 35, 36, 59, 67, 72, 73, 74, 91, 95], "isunsat": [14, 15, 25, 35, 36], "issatunknown": [14, 25, 35], "print": [14, 17, 19, 25, 35, 38, 45, 46, 47, 48, 50, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 85, 86, 89, 90, 91, 95, 98], "cout": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "endl": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "xval": [14, 25, 35, 54, 58, 70], "getvalu": [14, 17, 21, 25, 35, 38, 54, 58, 59, 61, 62, 67, 70, 71, 72, 73, 74, 91, 95], "yval": [14, 25, 35, 54, 58, 70], "do": [14, 17, 19, 25, 35, 38, 44, 48, 54, 56, 58, 60, 61, 70, 81], "xminusi": [14, 25, 35, 54, 58, 70], "xminusyv": [14, 25, 35, 54, 58, 70], "xstr": [14, 25, 35, 54, 58, 70], "getrealvalu": [14, 21, 25, 35, 42, 54, 58, 70], "ystr": [14, 25, 35, 54, 58, 70], "xminusystr": [14, 25, 35, 54, 58, 70], "further": [14, 25, 35, 54, 58, 70, 80, 81], "pair": [14, 17, 21, 24, 25, 35, 42, 49, 54, 56, 58, 70, 92], "xpair": [14, 25, 35, 54, 58, 70], "getreal64valu": [14, 21, 25, 35, 54, 58, 70], "ypair": [14, 25, 35, 54, 58, 70], "xminusypair": [14, 25, 35, 54, 58, 70], "independ": [14, 19, 25, 35, 54, 58, 70, 81], "comput": [14, 17, 25, 35, 38, 54, 58, 70, 81, 85, 88], "would": [14, 25, 35, 44, 54, 58, 70], "perform": [14, 22, 25, 35, 43, 54, 58, 70, 80, 81, 82, 83, 85, 86, 96], "manual": [14, 25, 35, 54, 56, 58, 70, 80], "complex": [14, 25, 35, 54, 58, 70, 81], "easier": [14, 19, 25, 35, 54, 58, 70], "let": [14, 17, 25, 35, 38, 49, 54, 58, 67, 70, 81, 84, 86, 96], "xminusycomput": [14, 25, 35, 54, 58, 70], "gcd": [14, 25, 35, 54, 58, 70], "correctli": [14, 25, 35, 54, 58, 70, 86], "incorrectli": [14, 25, 35, 54, 58, 70], "reset": [14, 17, 25, 35, 38, 54, 56, 58, 70, 93], "resetassert": [14, 17, 25, 35, 38, 54, 56, 58, 70], "revis": [14, 25, 35, 54, 58, 70, 81, 88], "r2": [14, 25, 35, 54, 58, 70], "unsatcor": [14, 25, 35, 54, 58, 70], "getunsatcor": [14, 17, 25, 35, 38, 54, 58, 70], "contributor": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "yoni": [14, 25, 35, 54, 58, 70, 75, 76, 77], "zohar": [14, 25, 35, 54, 58, 70, 75, 76, 77], "gereon": [14, 25, 35, 54, 58, 70, 98], "kremer": [14, 25, 35, 54, 58, 70, 98], "mathia": [14, 25, 35, 54, 58, 60, 61, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 88, 95, 98], "preiner": [14, 25, 35, 54, 58, 60, 61, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 95, 98], "file": [14, 17, 24, 25, 35, 52, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 90, 91, 92, 95, 98], "copyright": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 95, 98], "2009": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 88, 91, 95, 98], "2022": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "author": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "sourc": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 91, 95, 98], "directori": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 85, 91, 95, 98], "institut": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "affili": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "reserv": [14, 25, 35, 50, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "copi": [14, 17, 19, 21, 25, 34, 35, 44, 47, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 91, 95, 98], "licens": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 91, 95, 98], "simpl": [14, 25, 35, 52, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 85, 91, 95, 98], "demonstr": [14, 25, 35, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "capabl": [14, 25, 35, 54, 58, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 95], "iostream": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "doc": [14, 25, 35, 54, 58, 70, 80], "henc": [14, 25, 35, 54, 58, 70], "jargon": [14, 25, 35, 54, 58, 70], "5": [14, 24, 25, 35, 45, 47, 48, 49, 50, 54, 56, 58, 65, 70, 80, 81, 82, 89, 92], "our": [14, 25, 35, 54, 58, 63, 67, 70, 80, 95], "7": [14, 25, 35, 47, 50, 54, 58, 66, 70, 80, 88, 92], "8": [14, 25, 35, 45, 47, 50, 54, 58, 66, 67, 70, 81], "compound": [14, 25, 35, 54, 58, 70], "even": [14, 16, 25, 35, 37, 50, 54, 58, 63, 70, 81, 86, 95], "those": [14, 17, 25, 35, 38, 49, 54, 58, 63, 70, 81, 86], "did": [14, 25, 35, 54, 58, 70, 81, 86], "11": [14, 25, 35, 50, 54, 58, 70, 77, 81, 82, 83, 88], "12": [14, 17, 25, 35, 54, 58, 70], "13": [14, 25, 35, 54, 58, 70, 85, 88], "14": [14, 25, 35, 54, 58, 67, 70], "15": [14, 25, 35, 54, 58, 70], "16": [14, 17, 21, 25, 35, 42, 47, 50, 54, 58, 67, 70, 81], "17": [14, 25, 35, 54, 58, 70, 83, 88], "18": [14, 25, 35, 54, 58, 70, 88, 98], "mudathir": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "moham": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "aina": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "niemetz": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "andr": [14, 25, 35, 54, 58, 59, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 88, 91, 95, 98], "noetzli": [14, 25, 35, 54, 58, 59, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "import": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "io": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "math": [14, 25, 35, 54, 58, 61, 70], "biginteg": [14, 24, 25, 35, 54, 58, 70], "util": [14, 24, 25, 35, 52, 54, 58, 60, 61, 62, 63, 70, 75, 76, 77, 81], "arraylist": [14, 25, 35, 54, 58, 61, 70, 75, 76, 77], "static": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 86, 91, 95, 98], "arg": [14, 17, 25, 35, 38, 45, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 86, 91, 95, 98], "throw": [14, 19, 25, 35, 54, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "try": [14, 17, 25, 35, 38, 45, 46, 47, 48, 50, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 95, 98], "new": [14, 25, 35, 44, 48, 49, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 86, 88, 91, 95, 98], "system": [14, 25, 35, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 89, 91, 95, 98], "println": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "aslist": [14, 25, 35, 54, 58, 70], "test": [14, 25, 35, 48, 58, 61, 63, 65, 81, 82, 83, 85, 90], "pgm": [14, 25, 35, 58, 65], "example_quickstart": [14, 25, 35, 58], "py": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "__name__": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "__main__": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "introduc": [14, 18, 25, 35, 54, 58, 60, 70, 81, 86], "confirm": [14, 25, 35, 54, 58, 70], "solv": [14, 17, 25, 35, 45, 47, 48, 49, 52, 54, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 86, 88, 89, 90, 95], "m": [14, 25, 35, 50, 54, 56, 58, 62, 70, 81, 86, 90, 91], "decim": [14, 21, 25, 35, 38, 42, 45, 54, 58, 70, 81], "as_decim": [14, 25, 35, 45, 54, 58, 70], "fraction": [14, 25, 35, 38, 42, 45, 54, 58, 70], "as_fract": [14, 25, 35, 45, 54, 58, 70], "report": [14, 25, 35, 54, 58, 59, 69, 70, 72, 73, 74, 81, 88, 91, 95, 98], "solut": [14, 17, 20, 25, 35, 38, 41, 45, 47, 48, 49, 54, 56, 58, 70, 75, 76, 77, 81], "usr": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 91, 95, 98], "bin": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 85, 90, 91, 95, 98], "env": [14, 25, 35, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 95, 98], "alex": [14, 25, 35, 54, 58, 61, 62, 65, 68, 70, 71, 74, 75, 76, 77, 95, 98], "ozdemir": [14, 25, 35, 54, 58, 61, 62, 65, 68, 70, 71, 74, 75, 76, 77, 95, 98], "adapt": [14, 25, 35, 54, 58, 60, 68, 70], "plu": [14, 25, 35, 54, 56, 58, 70, 75, 76, 81], "xpy": [14, 25, 35, 54, 58, 70], "ypy": [14, 25, 35, 54, 58, 70], "xminusypi": [14, 25, 35, 54, 58, 70], "minu": [14, 25, 35, 54, 58, 70, 75, 86, 95], "len": [14, 25, 35, 54, 56, 58, 70, 72, 74, 75, 76, 77, 81, 86, 94], "smtlib": [14, 25, 35, 54, 56, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 91, 92, 93, 95, 98], "smt2": [14, 25, 35, 52, 54, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 82, 83, 85, 90, 91, 92, 95, 98], "dump": [14, 25, 35, 54, 58, 70, 81, 82, 83, 85], "echo": [14, 25, 35, 54, 58, 60, 62, 66, 69, 70, 73, 95], "built": [14, 23, 25, 35, 45, 47, 54, 58, 70, 80, 93], "rather": [14, 25, 35, 54, 58, 70, 81, 86], "encapsul": [15, 20, 36, 41], "three": [15, 21, 36, 49, 50, 59, 60, 69, 73, 91, 95], "explan": [15, 36, 58, 81, 89], "checksatassum": [15, 17, 36, 38, 59, 60, 61, 62, 65, 66, 68, 69, 72, 73, 74, 89, 91, 95], "isunknown": [15, 20, 36, 41], "abl": [15, 36, 95], "un": [15, 36], "overload": [15, 24, 52], "getunknownexplan": [15, 36], "mani": [16, 81], "These": [16, 45, 48, 81, 83, 86], "directli": [16, 17, 21, 32, 81], "iee19": [16, 88], "section": [16, 50, 81], "round_nearest_ties_to_even": [16, 37, 67], "nearest": [16, 37, 50], "bracket": [16, 37], "unrepresent": [16, 37], "signific": [16, 37, 47], "deliv": [16, 37], "round_toward_posit": [16, 37, 67], "infin": [16, 17, 21, 37, 38, 42, 67, 81], "oo": [16, 17, 37, 50, 67], "shall": [16, 37], "format": [16, 17, 37, 38, 56, 58, 59, 60, 61, 62, 63, 71, 72, 73, 81, 86, 87, 91, 92, 95], "possibli": [16, 37, 49, 81, 86], "closest": [16, 37], "round_toward_neg": [16, 37, 67], "round_toward_zero": [16, 37], "magnitud": [16, 37], "round_nearest_ties_to_awai": [16, 37], "awai": [16, 37, 50, 63], "larger": [16, 37], "delet": 17, "disallow": [17, 67], "getnullsort": [17, 38], "getbooleansort": [17, 18, 38, 62, 68, 75, 77], "getregexpsort": [17, 38], "getroundingmodesort": [17, 38], "getstringsort": [17, 38, 59, 74, 91], "mkarraysort": [17, 38, 61], "indexsort": [17, 38, 61], "elemsort": [17, 38], "mkbitvectorsort": [17, 18, 38, 60, 61, 66], "mkfloatingpointsort": [17, 38, 67], "sig": [17, 38, 46, 48, 50], "dtypedecl": [17, 38], "mkfunctionsort": [17, 38, 62], "mkparamsort": [17, 18, 38, 39, 63], "nullopt": 17, "mkpredicatesort": [17, 38], "mkrecordsort": [17, 38, 92], "mksetsort": [17, 18, 38, 71, 73, 95], "mkbagsort": [17, 18, 38, 59, 91], "mksequencesort": [17, 38, 72, 94], "mkuninterpretedsort": [17, 18, 38, 62, 71, 95], "mkunresolveddatatypesort": [17, 38], "yet": [17, 38, 44, 60, 83, 85, 86, 97], "placehold": [17, 38, 86], "mutual": [17, 38, 49, 81, 92], "recurs": [17, 38, 49, 81, 86, 92], "mkuninterpretedsortconstructorsort": [17, 18, 38], "mktuplesort": [17, 38, 71, 92, 95], "Of": [17, 38], "children": [17, 21, 42, 48, 49, 53, 62, 86, 92], "ari": [17, 38, 86], "mktupl": [17, 38, 71, 95], "simpli": [17, 48], "wrap": [17, 56], "val": [17, 38, 45, 47, 48, 49, 50, 67], "123": 17, "34": 17, "num": [17, 56, 81, 82], "den": 17, "denomin": [17, 21, 38, 45], "re": [17, 21, 38, 74, 80, 81], "allchar": [17, 38, 81], "useescsequ": [17, 38], "compat": [17, 38, 44, 55, 80], "escap": [17, 38, 86], "u1234": [17, 38], "unicod": [17, 26, 27, 28, 38, 42, 81, 96], "fit": [17, 21], "mkconstarrai": [17, 38, 61], "mkfloatingpointposinf": [17, 38, 67], "mkfloatingpointneginf": [17, 38], "mkfloatingpointnan": [17, 38, 67], "mkfloatingpointposzero": [17, 38, 67], "mkfloatingpointnegzero": [17, 38], "rm": [17, 38, 50, 67, 81], "upperbound": 17, "mkdatatypeconstructordecl": [17, 38, 63], "mkdatatypedecl": [17, 38, 63], "param": [17, 18, 39, 75, 76, 77], "much": [17, 19, 38], "work": [17, 38, 81, 89], "involv": [17, 38, 86], "engin": [17, 38, 79, 81], "simplif": [17, 38, 81, 83], "prop_liter": [17, 38], "declaredatatyp": [17, 38, 63], "datatype_decl": [17, 38], "declarefun": [17, 38], "declaresort": [17, 38, 62], "definefun": [17, 38, 77], "bound_var": [17, 38], "global": [17, 38, 45, 47, 48, 50, 81, 82, 90], "function_def": [17, 38], "persist": [17, 38, 81], "pop": [17, 38, 56, 60, 67, 69], "definefunrec": [17, 38], "rec": [17, 38, 81, 92], "definefunsrec": [17, 38], "function_decl": [17, 38], "_1": [17, 86], "_n": [17, 38, 86], "getassert": [17, 38], "getinfo": [17, 38], "flag": [17, 19, 38, 83, 84, 85], "info": [17, 38, 93, 94], "info_flag": [17, 38], "getoptionnam": [17, 38, 56, 81], "driver": [17, 90], "properli": [17, 56, 89], "getunsatassumpt": [17, 38], "between": [17, 38, 67, 81, 86], "unnam": [17, 38], "getdifficulti": [17, 38], "difficulti": [17, 38, 81], "estim": [17, 38], "difficult": [17, 38], "unment": [17, 38], "getproof": [17, 38], "recent": [17, 38, 80], "depend": [17, 81, 86], "account": [17, 38], "ref": 17, "lbl": 17, "entail": [17, 38, 60, 62, 66, 68, 69, 81], "were": [17, 23, 49, 75, 76, 77, 85, 95], "getmodeldomainel": [17, 38], "question": [17, 38], "ismodelcoresymbol": [17, 38], "v": [17, 24, 38, 45, 46, 47, 50, 53, 60, 81], "essenti": [17, 19, 38, 48], "show": [17, 19, 38, 56, 62, 64, 67, 68, 69, 80, 81], "getmodel": [17, 38, 65], "var": [17, 38, 56, 68, 75, 76, 81, 85], "getquantifierelimin": [17, 38], "qe": [17, 38, 81], "complet": [17, 38, 44, 63, 67, 80, 81], "lra": [17, 38], "lia": [17, 38, 73, 75, 76, 77, 81, 95], "bv": [17, 42, 47, 81, 86], "bar": [17, 38, 56], "x_i": [17, 38, 86], "y_1": [17, 38, 86], "y_j": [17, 38], "x_k": [17, 38], "phi": [17, 38, 71], "y_n": [17, 38, 86], "getquantifiereliminationdisjunct": [17, 38], "partial": [17, 38, 81, 86], "q_n": [17, 38], "q_1": [17, 38], "q_i": [17, 38], "q_": [17, 38], "q_j": [17, 38], "eventu": [17, 38], "declaresepheap": [17, 38], "locsort": [17, 38], "datasort": [17, 38], "invok": [17, 38, 56, 57], "onc": [17, 18, 19, 21, 38, 39, 42, 81, 93], "getvaluesepheap": [17, 38], "getvaluesepnil": [17, 38], "initvalu": [17, 38], "instruct": [17, 80, 89], "document": [17, 23, 81], "declareoraclefun": 17, "fn": [17, 86, 93], "oracl": [17, 81], "ordinari": 17, "implicitli": 17, "sym": [17, 81], "text": [17, 81, 93], "nscope": [17, 38], "stack": [17, 38], "getinterpol": [17, 38], "conj": [17, 38, 81], "interpol": [17, 38, 81], "conjectur": [17, 38, 75, 76, 77, 81], "getinterpolantnext": [17, 38], "success": [17, 38, 81], "guarante": [17, 38, 86, 90], "wrt": [17, 38, 81], "getabduct": [17, 38], "abduct": [17, 38, 81], "getabductnext": [17, 38], "preced": [17, 38], "invalid": [17, 19, 38, 56, 65, 81, 89], "not_entail": [17, 38], "getinstanti": [17, 38], "modul": [17, 38, 75, 76, 77, 80], "push": [17, 38, 56, 60, 67, 69, 81], "setinfo": [17, 38], "declaresygusvar": [17, 38, 75, 76], "append": [17, 38, 56, 61, 75, 76, 77, 81, 95, 98], "v2": [17, 38, 57, 58, 62], "mkgrammar": [17, 38, 75, 76], "boundvar": [17, 38], "treat": [17, 21, 38, 42], "matter": [17, 38], "pre": [17, 18, 21, 38, 39, 42, 77, 80, 81, 86, 94], "synthfun": [17, 38, 75, 76], "synthes": [17, 38, 75, 76, 77, 81, 82], "synthinv": [17, 38, 77], "invari": [17, 38, 64, 81], "addsygusconstraint": [17, 38, 75, 76], "forumla": 17, "addsygusassum": [17, 38], "addsygusinvconstraint": [17, 38, 77], "tran": [17, 38, 77, 85, 86, 88], "post": [17, 38, 77, 81, 86], "synthesi": [17, 20, 38, 41, 52, 75, 76, 77, 81], "problem": [17, 38, 56, 60, 61, 64, 67, 71, 79, 80, 81, 82, 95], "checksynth": [17, 20, 38, 41, 75, 76, 77], "find": [17, 38, 59, 67, 71, 73, 81, 91, 95], "getsynthsolut": [17, 38, 75, 76, 77], "checksynthnext": [17, 20, 38, 41], "answer": [17, 38, 71, 81, 82, 95], "getstatist": [17, 19, 38, 90], "snapshot": [17, 19, 38, 90], "decoupl": [17, 38, 90], "again": [17, 23, 38, 81, 89, 90], "printstatisticssaf": 17, "fd": 17, "descriptor": 17, "suitabl": 17, "usag": [17, 68, 81, 89], "signal": [17, 81], "handler": 17, "isoutputon": 17, "determion": 17, "o": [17, 19, 81, 82, 88], "line": [17, 57, 80, 81, 86, 90, 98], "getoutput": 17, "commandexecutor": 17, "serial": 18, "offer": [18, 21, 44, 80, 84], "factori": [18, 21], "multiset": [18, 91], "structur": [18, 48, 81], "hassymbol": [18, 21, 39, 42], "getsymbol": [18, 21, 39, 42], "mkunresolvedsort": 18, "raw": [18, 21, 39, 42, 81], "isboolean": [18, 39], "isinteg": [18, 39], "isreal": [18, 39], "isstr": [18, 19, 39], "isregexp": [18, 39], "isroundingmod": [18, 39], "isbitvector": [18, 39], "bitvec": [18, 39, 47, 60, 61, 65, 66], "isfloatingpoint": [18, 39], "floatingpoint": [18, 39, 50], "eb": [18, 39], "sb": [18, 39], "isdatatyp": [18, 39], "isdatatypetest": [18, 27, 39], "isfunct": [18, 39, 75, 76, 77], "ispred": [18, 39], "isarrai": [18, 39], "isset": [18, 39], "isbag": [18, 39], "issequ": [18, 39], "isuninterpretedsort": [18, 39], "isuninterpretedsortconstructor": [18, 39], "isinstanti": [18, 39], "getuninterpretedsortconstructor": [18, 39], "getdatatyp": [18, 39, 63, 92, 95], "underli": [18, 39, 48, 49, 53], "getinstantiatedparamet": [18, 39], "travers": [18, 21, 39, 42], "run": [18, 21, 24, 39, 42, 80, 81, 89], "until": [18, 21, 39, 42, 81, 89], "d": [18, 24, 39, 49, 67, 81, 83, 85, 86, 88, 91], "subsort": [18, 39, 45, 47, 48], "simultan": [18, 21, 42], "earliest": [18, 21, 39, 42], "prioriti": [18, 21, 39, 42, 81], "tostream": 18, "getdatatypeconstructorar": [18, 39], "getdatatypeconstructordomainsort": [18, 39], "getdatatypeconstructorcodomainsort": [18, 39], "getdatatypeselectordomainsort": [18, 39], "getdatatypeselectorcodomainsort": [18, 39], "getdatatypetesterdomainsort": [18, 39], "getdatatypetestercodomainsort": [18, 39], "mainli": 18, "doesn": 18, "getfunctionar": [18, 39], "getfunctiondomainsort": [18, 39], "getfunctioncodomainsort": [18, 39, 75, 76, 77], "getarrayindexsort": [18, 39], "getarrayelementsort": [18, 39], "getsetelementsort": [18, 39], "getbagelementsort": [18, 39], "getsequenceelementsort": [18, 39], "getuninterpretedsortconstructorar": [18, 39], "getbitvectors": [18, 39], "getfloatingpointexponents": [18, 39], "getfloatingpointsignificands": [18, 39], "getdatatypear": [18, 39], "gettuplelength": [18, 39], "gettuplesort": [18, 39], "histogram": [19, 90], "isint": [19, 45], "isdoubl": 19, "etc": [19, 56, 63, 86, 89], "getint": 19, "getdoubl": 19, "kei": [19, 58], "frequenc": [19, 81], "By": 19, "def": [19, 62, 63, 65, 75, 76, 77, 81], "pass": [19, 49, 56, 65, 81, 85, 86, 89], "visibl": [19, 40], "skip": [19, 81], "shown": 19, "isintern": [19, 90], "isdefault": [19, 90], "histogramdata": 19, "On": [19, 80, 81], "isx": 19, "getx": 19, "sole": 19, "becaus": 19, "getstr": 19, "ishistogram": 19, "gethistogram": 19, "sv": 19, "hassolut": [20, 41, 75, 76, 77], "hasnosolut": [20, 41], "could": [20, 41, 56, 86], "best": [21, 81], "mk": 21, "id": [21, 26, 27, 42, 81, 86, 92], "getnumchildren": [21, 42], "getid": [21, 42], "getsort": [21, 42, 60, 63, 75, 76, 77], "w": [21, 42, 86, 88, 96], "hasop": [21, 42], "getop": [21, 42], "notterm": [21, 42, 59, 60, 62, 66, 69, 73, 91, 95], "andterm": [21, 42], "orterm": [21, 42], "xorterm": [21, 42], "eqterm": [21, 42], "impterm": [21, 42], "iteterm": [21, 42], "then_t": [21, 42], "else_t": [21, 42], "int32_t": 21, "getrealorintegervaluesign": [21, 42], "isint32valu": 21, "getint32valu": 21, "isuint32valu": 21, "getuint32valu": 21, "isint64valu": 21, "getint64valu": 21, "isuint64valu": 21, "getuint64valu": 21, "isintegervalu": [21, 42], "getintegervalu": [21, 42], "isstringvalu": [21, 42], "getstringvalu": [21, 42], "confus": [21, 42], "whatev": [21, 42], "isreal32valu": 21, "getreal32valu": 21, "isreal64valu": 21, "isconstarrai": [21, 42], "getconstarraybas": [21, 42], "isbooleanvalu": [21, 42], "getbooleanvalu": [21, 42], "isbitvectorvalu": [21, 42], "getbitvectorvalu": [21, 42], "hexadecim": 21, "isuninterpretedsortvalu": [21, 42], "getuninterpretedsortvalu": [21, 42], "istuplevalu": [21, 42], "gettuplevalu": [21, 42], "isroundingmodevalu": [21, 42], "getroundingmodevalu": [21, 42], "held": [21, 42], "isfloatingpointposzero": [21, 42], "isfloatingpointnegzero": [21, 42], "isfloatingpointposinf": [21, 42], "isfloatingpointneginf": [21, 42], "isfloatingpointnan": [21, 42], "isfloatingpointvalu": [21, 42], "getfloatingpointvalu": [21, 42], "canon": [21, 42], "c_": [21, 42, 86], "getsetvalu": [21, 42], "issequencevalu": [21, 42], "describ": [21, 56, 85, 86, 92, 96, 98], "themselv": 21, "One": [21, 84], "const_sequence_": 21, "latter": [21, 26, 27, 83], "former": 21, "iscardinalityconstraint": [21, 42], "getcardinalityconstraint": [21, 42], "just": [21, 55, 82], "nodemanag": 21, "nm": 21, "shared_ptr": 21, "reason": [22, 43, 59, 71, 72, 73, 74, 80, 81, 82, 86, 87, 88, 91, 95], "requires_full_check": [22, 43], "incomplet": [22, 43, 81], "timeout": [22, 43, 81, 89], "limit": [22, 43, 48, 49, 79, 81, 98], "reach": [22, 43, 81, 89], "resourceout": [22, 43], "resourc": [22, 25, 43, 79, 81], "memout": [22, 43], "memori": [22, 43, 80], "interrupt": [22, 43, 89], "unsupport": [22, 43], "encount": [22, 43, 81], "unknown_reason": [22, 43], "No": [22, 43, 71, 81], "disabl": [23, 62, 81, 89], "pleas": [23, 80], "build_bindings_java": 23, "cmake": [23, 24, 80, 90], "build": [23, 45, 46, 47, 48, 49, 50, 61, 63, 67, 81, 90], "mostli": 24, "mirror": 24, "There": [24, 83, 90], "hierarchi": 24, "git": 24, "clone": 24, "cd": [24, 80, 81], "sh": [24, 80], "auto": [24, 63, 80, 81], "download": [24, 80, 85], "instal": [24, 79, 85], "libcvc5jni": 24, "libcvc5pars": 24, "libcvc5": 24, "libpicpoli": 24, "libpicpolyxx": 24, "libpoli": 24, "libpolyxx": 24, "dev": [24, 80], "jar": 24, "compil": 24, "javac": 24, "cp": 24, "librari": 24, "djava": 24, "path": [24, 80], "triplet": 24, "your": [25, 80], "__getitem__": [26, 27, 33, 40, 42, 46, 55, 56], "__iter__": [26, 27, 42], "self": [26, 27, 28, 29, 30, 31, 33, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 71, 95], "unresdatatypenam": 28, "And": [32, 48, 53, 56, 61, 62, 67, 69, 75, 86], "addtion": 32, "bvadd": [32, 47, 60], "almost": [34, 44], "exact": [34, 44], "experi": 34, "usatisfi": 36, "formuula": 38, "inv_f": [38, 77], "pre_f": [38, 77], "trans_f": [38, 77], "post_f": [38, 77], "loctyp": 38, "glbl": 38, "sym_or_fun": 38, "sort_or_term": 38, "glb": 38, "succes": 38, "inteprol": 38, "dictionari": [38, 40], "term_or_list": 38, "sorts_or_bool": 38, "arg0": 38, "symbolnam": 38, "temporari": 38, "forward": 38, "kind_or_op": 38, "comma": 38, "automat": [38, 48, 49, 56, 79, 80, 81, 98], "sort_or_list_1": 39, "sort_or_list_2": 39, "hexdecim": 42, "indici": 42, "usual": [42, 57, 80, 89], "necessari": [42, 86], "__str__": [42, 48, 51], "cdot": [42, 86], "term_or_list_1": 42, "term_or_list_2": 42, "topythonobj": 42, "dict": 42, "aim": 44, "fulli": [44, 56, 63, 81], "z3": [44, 45], "you": [44, 62, 63, 80], "verbos": [44, 81], "abil": 44, "everyth": 44, "visit": 44, "page": [44, 49, 80, 88, 93], "pip": 44, "ctx": [45, 46, 47, 48, 49, 50, 53, 55, 56], "is_int": [45, 48], "is_real": [45, 50], "intval": [45, 48, 51, 55, 56, 73], "100": [45, 81], "realval": [45, 50, 67], "long": [45, 47, 48, 50, 76, 89], "notat": [45, 48, 58, 86], "ratval": 45, "boolsort": [45, 46, 47, 48, 49, 53, 62], "freshint": 45, "fresh": [45, 48, 58, 86], "eq": [45, 46, 47, 48, 50, 66, 81], "intvector": [45, 56], "sz": [45, 47, 48], "x__0": 45, "x__1": 45, "x__2": 45, "freshreal": 45, "realvector": 45, "arithref": 45, "__add__": [45, 47, 50], "__sub__": [45, 47, 50], "__mul__": [45, 47, 48, 50], "__div__": [45, 47, 50], "__pow__": 45, "__neg__": [45, 47, 50], "__gt__": [45, 47, 50], "__lt__": [45, 47, 50], "__ge__": [45, 47, 50], "__le__": [45, 47, 50], "exprref": [45, 47, 48], "__eq__": [45, 47, 48, 56], "__ne__": [45, 47, 48, 56], "main_ctx": [45, 48, 56], "uminu": 45, "unari": [45, 47, 50, 71, 92, 98], "deprec": 45, "kept": 45, "compatibl": 45, "div": 45, "intsmodulu": 45, "__mod__": [45, 47, 50], "toreal": [45, 48], "toint": 45, "builtin": [45, 86, 90], "arithemt": 45, "cbrt": 45, "cubic": 45, "prove": [45, 46, 56, 60, 61, 62, 63, 66, 69, 73, 85], "is_arith": 45, "is_int_valu": 45, "is_rational_valu": 45, "is_arith_sort": 45, "is_add": 45, "is_mul": 45, "is_sub": 45, "is_div": 45, "is_idiv": 45, "is_mod": 45, "is_l": 45, "is_lt": 45, "is_g": 45, "is_gt": 45, "is_is_int": 45, "is_to_r": 45, "is_to_int": 45, "arithsortref": 45, "smtexcept": [45, 46, 48, 51], "ex": [45, 48, 80], "reverse_children": [45, 46, 47, 48, 49, 50, 53, 55], "boolval": [45, 48, 65], "__pos__": [45, 47, 50], "__radd__": [45, 47, 50], "__rdiv__": [45, 47, 50], "__rmod__": [45, 47, 50], "__rmul__": [45, 47, 48, 50], "__rpow__": 45, "__rsub__": [45, 47, 50], "__rtruediv__": [45, 47, 50], "__truediv__": [45, 47, 50], "intnumref": 45, "as_binary_str": 45, "1010": 45, "as_long": [45, 47], "bignum": [45, 47], "as_str": [45, 50], "ratnumref": 45, "prec": [45, 81], "place": [45, 86, 89], "333": 45, "denominator_as_long": 45, "numerator_as_long": 45, "10000000000": 45, "10000000001": 45, "dom": 46, "rng": 46, "constarrai": 46, "alia": [46, 56], "arraysort": [46, 48, 61], "aa": 46, "unimpl": 46, "multi": [46, 81], "arrayref": 46, "is_array_sort": 46, "is_arrai": 46, "is_const_arrai": 46, "is_k": 46, "is_select": 46, "is_stor": 46, "is_upd": 46, "arraysortref": 46, "shorthand": [46, 55, 86], "is_bv": [47, 50], "word": [47, 50, 81, 86, 95, 96], "bitvecsort": [47, 48, 50, 61], "x2": [47, 50], "bitvecv": [47, 50], "32": [47, 50, 60, 61, 66, 67, 96], "0x": [47, 50], "8x": [47, 50], "0x0000000a": 47, "u": [47, 62, 81, 86, 92, 93], "byte": 47, "bitvecref": 47, "__or__": [47, 55], "__and__": [47, 55], "__xor__": 47, "__invert__": 47, "__lshift__": 47, "__rshift__": 47, "is_sign": 47, "num_bit": 47, "modulo": [47, 79, 81, 88], "bv_x": 47, "bv_x_plus_4": 47, "289": 47, "3x": 47, "121": 47, "high": [47, 83, 85], "low": 47, "ul": 47, "bvsle": 47, "bvule": 47, "ult": 47, "bvslt": [47, 61], "bvult": 47, "ug": 47, "bvsge": 47, "bvuge": 47, "ugt": 47, "bvsgt": [47, 61], "bvugt": 47, "sle": 47, "slt": 47, "sge": 47, "sgt": 47, "udiv": 47, "bvsdiv": 47, "bvudiv": 47, "urem": 47, "srem": 47, "bvsmod": 47, "bvurem": 47, "sdiv": 47, "smod": 47, "bvsrem": 47, "lshr": 47, "bvashr": 47, "bvlshr": 47, "as_signed_long": 47, "rotateleft": 47, "rotateright": 47, "signext": 47, "extra": 47, "24": [47, 50, 67, 81], "v0": 47, "254": 47, "fe": 47, "zeroext": 47, "repeatbitvec": 47, "aaaa": 47, "bvredand": 47, "reduct": [47, 81, 86], "bvredor": 47, "bvmult": 47, "bvsub": [47, 60], "bvor": 47, "bvxor": [47, 60], "bvneg": 47, "bvnot": 47, "bitwis": [47, 81], "is_bv_sort": 47, "is_bv_valu": 47, "bitvecsortref": 47, "b00000000000000000000000000001010": 47, "setsort": [47, 48, 55], "bvshl": 47, "mod": [47, 50, 81], "__rand__": 47, "__rlshift__": 47, "__ror__": 47, "__rrshift__": 47, "__rxor__": 47, "64": [47, 50, 80, 88, 90], "bitvecnumref": 47, "0xbadc0d": 47, "195936478": 47, "0x0badc0d": 47, "is_tru": 48, "is_fals": 48, "is_bool": 48, "freshbool": 48, "b1": 48, "b2": 48, "blank": 48, "space": [48, 79, 86], "Or": [48, 56, 60, 67, 86], "boolvector": 48, "p__0": 48, "p__1": 48, "p__2": 48, "freshconst": 48, "freshfunct": 48, "probe": [48, 52], "p__3": 48, "p__4": 48, "mk_not": 48, "strip": 48, "present": [48, 86, 95], "is_bool_valu": 48, "is_and": 48, "is_or": 48, "is_impli": 48, "is_not": 48, "is_eq": 48, "is_distinct": 48, "is_const": [48, 53], "is_func_decl": 48, "__bool__": 48, "__hash__": [48, 56], "__init__": [48, 49, 51, 56], "__nonzero__": 48, "__repr__": [48, 49, 56], "repr": [48, 49, 56], "__weakref__": [48, 49, 51, 56], "weak": [48, 49, 51, 56, 81], "as_ast": [48, 53], "decl": [48, 56, 63, 81], "n1": [48, 49, 92], "n2": [48, 49], "get_id": 48, "hashcod": 48, "num_arg": 48, "sortref": 48, "pretti": 48, "boolref": 48, "boolsortref": 48, "is_expr": [48, 51], "funcdeclref": 48, "__call__": [48, 49], "coercion": [48, 49], "isinst": [48, 56], "manipul": 49, "happen": [49, 81], "phase": [49, 80, 81, 86], "intlist": 49, "third": 49, "finish": [49, 81, 89], "tool": [49, 80], "interact": [49, 81], "is_nil": [49, 63], "is_con": [49, 63], "testor": 49, "recogn": 49, "accessor": [49, 63], "ambigu": [49, 92], "datatypesortref": 49, "unambigu": 49, "createdatatyp": 49, "codatayp": 49, "intstream": 49, "helper": [49, 98], "tree": [49, 71, 81, 92], "treelist": 49, "leaf": [49, 86], "car": 49, "cdr": 49, "tuplesort": [49, 95], "mk_pair": 49, "disjointsum": 49, "en": [49, 50], "wikipedia": [49, 50], "wiki": [49, 50], "tagged_union": 49, "injector": 49, "extractor": 49, "inject0": 49, "extract0": 49, "inject1": 49, "extract1": 49, "being": [49, 53, 98], "cell": [49, 86], "num_constructor": [49, 63], "num_acc": 49, "is_nam": 49, "datatypeconstructorref": 49, "datatypeselectorref": 49, "datatyperecognizerref": 49, "datatyperef": 49, "fpsort": 50, "is_fp": 50, "ebit": 50, "sbit": 50, "fpmul": 50, "rne": 50, "fpadd": 50, "fpval": [50, 67], "25": [50, 81, 88], "exponent_as_long": 50, "0x00000004": 50, "125": 50, "fpnan": 50, "set_fpa_pretti": 50, "pb": [50, 81], "get_fpa_pretti": 50, "fpplusinfin": 50, "fpminusinfin": 50, "fpinfin": 50, "fppluszero": 50, "fpminuszero": 50, "fpzero": 50, "53": [50, 81], "float16": 50, "half": 50, "floathalf": 50, "float32": [50, 67, 81], "floatsingl": 50, "float64": [50, 81], "floatdoubl": 50, "float128": 50, "128": 50, "quadrupl": 50, "floatquadrupl": 50, "fpref": 50, "fpab": 50, "fpneg": 50, "rtz": 50, "fpsub": 50, "fpdiv": 50, "fprem": 50, "fpmin": 50, "fpmax": 50, "fpfma": 50, "fpsqrt": 50, "fproundtointegr": 50, "roundtointegr": 50, "fpisnan": [50, 67], "isnan": 50, "fpisinf": [50, 67], "isinfinit": 50, "fpiszero": 50, "iszero": 50, "fpisnorm": 50, "isnorm": 50, "fpissubnorm": 50, "issubnorm": 50, "fpisneg": 50, "isneg": 50, "fpisposit": 50, "isposit": 50, "fplt": 50, "fpleq": 50, "fpgt": 50, "fpgeq": 50, "fpeq": [50, 67], "fpneq": 50, "fpfp": 50, "sgn": 50, "22": 50, "23": 50, "fptofp": 50, "127": 50, "4194304": [50, 81], "xv": 50, "slvr": 50, "a1": 50, "a2": 50, "a3": 50, "x_db": 50, "x_r": 50, "x_sign": 50, "fpbvtofp": 50, "x_bv": 50, "0x3f800000": 50, "x_fp": 50, "1065353216": 50, "fpfptofp": 50, "x_sgl": 50, "x_dbl": 50, "fprealtofp": 50, "fpsignedtofp": 50, "4294967291": 50, "fpunsignedtofp": 50, "fptofpunsign": 50, "fptosbv": 50, "fptoubv": 50, "fptoreal": 50, "is_fp_sort": 50, "is_fp_valu": 50, "is_fprm_sort": 50, "is_fprm": 50, "is_fprm_valu": 50, "roundnearesttiestoeven": [50, 67], "ti": [50, 92], "broken": 50, "doi": [50, 88], "1109": [50, 88], "ieeestd": [50, 88], "2019": [50, 81, 88], "8766229": [50, 88], "point_arithmet": 50, "rounding_mod": 50, "roundnearesttiestoawai": 50, "rna": 50, "roundtowardposit": 50, "rtp": [50, 67], "roundtowardneg": 50, "rtn": [50, 67], "roundtowardzero": 50, "get_default_rounding_mod": 50, "set_default_rounding_mod": [50, 67], "sum1": 50, "sum2": 50, "solverfor": [50, 56, 69], "qf_fp": [50, 67], "explicit": [50, 54], "get_default_fp_sort": 50, "set_default_fp_sort": 50, "fpsortref": 50, "b0": 50, "b01111111": 50, "b00000000000000000000000": 50, "fpnumref": 50, "bias": [50, 81], "isinf": 50, "subnorm": 50, "significand_as_long": 50, "miss": [50, 52, 80], "2097152": 50, "fprmref": 50, "is_sort": 51, "is_app": 51, "is_app_of": 51, "z3py": 52, "pseudo": [52, 81], "count": [52, 59, 90, 91], "atmost": 52, "atleast": 52, "partialord": 52, "linearord": 52, "html": [52, 80], "hook": 52, "fixedpoint": 52, "pars": [52, 81, 82], "builder": 52, "transcendent": [52, 81, 86, 88, 97], "overview": 52, "fp": [52, 67, 81], "mem0": 53, "lo": 53, "hi": 53, "mem1": 53, "is_var": 53, "is_quantifi": 53, "quantifierref": 53, "is_exist": 53, "is_foral": 53, "is_lambda": 53, "num_var": 53, "var_nam": 53, "displai": [53, 62], "var_sort": 53, "With": [54, 80, 82], "elem_sort": 55, "emptyset": [55, 73, 93, 95], "fullset": 55, "setunion": 55, "setintersect": 55, "setadd": 55, "setdel": 55, "setdiffer": 55, "setcompl": 55, "setminu": [55, 86, 91], "ismemb": [55, 73], "issubset": [55, 73], "setref": 55, "setsortref": 55, "kwarg": 56, "solve_us": 56, "claim": 56, "tri": 56, "counterexampl": [56, 67, 81], "logfil": 56, "uiowa": 56, "edu": 56, "simplesolv": 56, "purpos": [56, 86], "__iadd__": 56, "fml": 56, "assert_expr": 56, "consist": [56, 63, 69, 86, 98], "eval": [56, 81], "ackermann": [56, 81], "approx": [56, 81], "branch": [56, 81], "depth": [56, 81], "num_scop": 56, "backtrack": 56, "reason_unknown": 56, "why": [56, 81, 82], "recreat": 56, "crash": [56, 81], "foo": 56, "lisp": 56, "sai": [56, 86, 95], "checksatresult": 56, "modelref": 56, "aka": 56, "__len__": 56, "model_complet": 56, "a__0": 56, "a__1": 56, "a__2": 56, "a__3": 56, "a__4": 56, "easiest": 57, "tptp": [57, 81], "furthermor": [58, 86, 97], "later": [58, 81], "written": 58, "slv": [59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 91, 95, 98], "intersectionac": [59, 73, 91, 95], "intersectionbc": [59, 73, 91, 95], "distribut": [59, 71, 73, 80, 81, 91, 95], "uniondisjointab": [59, 91], "lh": [59, 67, 73, 74, 91, 95], "rh": [59, 67, 73, 74, 91, 95], "guess": [59, 81, 91], "unionmaxab": [59, 91], "theorem": [59, 73, 79, 91, 95], "verifi": [59, 71, 73, 81, 91, 95], "emptbag": [59, 91], "emptybag": [59, 91], "four": [59, 91], "bag_a_2": [59, 91], "bag_b_3": [59, 91], "bag_b_1": [59, 91], "bag_c_2": [59, 91], "bag_a_2_b_3": [59, 91], "bag_b_1_c_2": [59, 91], "union_disjoint": [59, 91], "count_x": [59, 91], "uniondisjoint": [59, 91], "inter_min": [59, 91], "union_max": [59, 91], "bitvector": 60, "liana": [60, 61, 88], "hadarean": [60, 61, 88], "book": 60, "hacker": 60, "delight": 60, "henri": 60, "warren": 60, "want": [60, 61, 80], "straightforward": [60, 95], "effici": [60, 81], "piec": 60, "bitvector32": [60, 66], "x_eq_a": 60, "x_eq_b": 60, "new_x": 60, "execut": [60, 89, 93], "new_x_": 60, "ite": [60, 75, 77, 81, 82, 83, 85, 86, 91, 96], "assignment0": 60, "a_xor_b_xor_x": 60, "assignment1": 60, "new_x_eq_new_x_": 60, "a_plus_b": 60, "a_plus_b_minus_x": 60, "assignment2": 60, "x_neq_x": 60, "odd": [60, 86], "extract_op": 60, "lsb_of_a": 60, "a_odd": 60, "1u": 60, "morgan": [60, 61, 62, 63, 68, 69, 86], "deter": [60, 61, 62, 63, 68, 69], "x_is_a_or_b": 60, "new_x0": 60, "per": [60, 81, 89], "new_x1": 60, "new_x2": 60, "makai": [60, 61, 62, 63, 66, 67, 68, 69, 72, 73, 74, 95], "mann": [60, 61, 62, 63, 66, 67, 68, 69, 72, 73, 74, 95], "andrew": [60, 63, 66, 68, 75, 76, 77, 88], "reynold": [60, 63, 66, 68, 75, 76, 77, 88], "direct": [60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 81, 86, 95], "translat": [60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 81, 86, 95], "satisifi": 60, "lsb": 60, "bv1": [60, 61, 81], "bitvectors_and_arrai": 61, "cmath": 61, "previous": [61, 92], "current_arrai": 61, "throughout": 61, "unrol": 61, "index_s": 61, "log2": [61, 81], "elementsort": [61, 91, 95], "0u": 61, "current_array0": 61, "current_array0_gt_0": 61, "old_curr": 61, "2u": 61, "new_curr": 61, "current_slt_new_curr": 61, "push_back": [61, 92], "bitvectorsandarrai": 61, "privat": [61, 62, 63, 75, 76, 77], "log": [61, 81, 88], "toarrai": [61, 75, 76, 77], "idx_bit": 61, "ceil": 61, "init_arrai": 61, "init_arr": 61, "larg": [61, 79], "enough": 61, "overflow": 61, "constarr0": 61, "zeroi": 61, "bv0": 61, "onei": 61, "twoi": 61, "bv2": 61, "threei": 61, "bv3": 61, "twoe": 61, "unroll1": 61, "bvmul": 61, "current_array_": 61, "unroll2": 61, "current_array__": 61, "unroll3": 61, "current_array___": 61, "tim": [62, 68, 69, 88], "king": [62, 68, 69, 88], "prefixprintgetvalu": 62, "dag": [62, 81, 83], "thresh": [62, 81, 83], "dagifi": [62, 81], "qf_uflira": 62, "utoint": 62, "intpr": 62, "f_x": 62, "f_y": 62, "p_0": 62, "p_f_y": 62, "nest": [62, 81], "it2": 62, "it1": 62, "hasnext": [62, 63], "print_val": 62, "print_all_subterm": 62, "sum_": [62, 86], "ncvc5": 62, "induct": [63, 66, 81, 88, 92, 93], "conslistsort": 63, "old": [63, 81], "conslistspec": 63, "useless": 63, "relev": [63, 81], "spec": 63, "datatypesort": 63, "fill": 63, "conslist": 63, "too": 63, "though": [63, 95], "t2": [63, 83, 93], "cours": 63, "t_is_con": 63, "t_updat": 63, "paramconslistspec": 63, "paramlist": 63, "paramcon": 63, "paramnil": 63, "paramconslistsort": 63, "paramconsintlistsort": 63, "paramconslist": 63, "stor": 63, "head_a": 63, "50": [63, 81], "step": [63, 80, 81, 83, 85, 86], "keep": [63, 81], "mind": 63, "selfsort": 63, "cons2": 63, "nil2": 63, "conslistsort2": 63, "list2": 63, "nsort": 63, "nsimplifi": 63, "qf_ufdtlia": 63, "sinc": [63, 86, 93], "singular": 63, "macro": [63, 81, 86], "parlist": 63, "parhead": 63, "partail": 63, "parlistint": 63, "ahead": 63, "mechan": [64, 81, 89], "hello": 64, "world": 64, "handl": [64, 81], "execpt": 65, "exit": [65, 81], "invalidterm": 65, "legaci": 65, "sy": [65, 75, 76, 77, 82], "em": 65, "example_except": 65, "clark": [66, 88], "barrett": [66, 88], "ext_31_1": 66, "31": 66, "x_31_1": 66, "ext_30_0": 66, "x_30_0": 66, "ext_31_31": 66, "x_31_31": 66, "ext_0_0": 66, "x_0_0": 66, "eq2": 66, "01234567": 66, "visual": [66, 84, 87], "1234567": 66, "0123456": 66, "a_31_1": 66, "a_30_0": 66, "a_31_31": 66, "a_0_0": 66, "floating_point_arith": 67, "toi": 67, "2008": [67, 88], "cassert": 67, "fpt32": 67, "restrict": [67, 81, 89], "inf": [67, 81], "someth": [67, 81], "to_sbv": 67, "final": [67, 81], "trick": [67, 81], "smallest": 67, "0b001": 67, "floatingpointarith": 67, "floating_point": 67, "commut": 67, "is_tautologi": 67, "succe": 67, "contribut": 67, "eva": 67, "darulova": 67, "symfpu": 67, "fp32": 67, "constrain": [67, 81], "11000000010010001111010111000011": 67, "01000000010010001111010111000011": 67, "bounds_x": 67, "bounds_i": 67, "bounds_z": 67, "veri": 68, "noth": 68, "helloworld": 68, "tutori": 68, "qf_uf": 68, "firstli": 69, "secondli": 69, "tight": 69, "linear_arith": 69, "qf_lira": 69, "neg2": 69, "two_third": 69, "three_i": 69, "diff": [69, 81], "x_geq_3i": 69, "x_leq_i": 69, "neg2_lt_x": 69, "diff_leq_two_third": 69, "diff_is_two_third": 69, "lineararith": 69, "famili": 71, "peopl": [71, 95], "male": [71, 95], "femal": [71, 95], "father": [71, 95], "mother": [71, 95], "parent": [71, 95], "ancestor": [71, 95], "descend": [71, 95], "nonempti": 71, "cap": [71, 81, 91], "bowti": 71, "subseteq": [71, 91], "cup": [71, 91], "person": [71, 95], "langl": 71, "rangl": 71, "mrtb17": [71, 88, 95], "ext": [71, 80, 81, 95], "personsort": [71, 95], "tuplearity1": [71, 95], "relationarity1": [71, 95], "tuplearity2": [71, 95], "relationarity2": [71, 95], "emptysetterm": [71, 95], "emptyrelationterm": [71, 95], "universeset": [71, 95], "isempty1": [71, 95], "isempty2": [71, 95], "peoplearetheunivers": [71, 95], "malesetisnotempti": [71, 95], "femalesetisnotempti": [71, 95], "inter": [71, 73, 81, 86, 95], "malesfemalesintersect": [71, 95], "malesandfemalesaredisjoint": [71, 95], "isempty3": [71, 95], "isempty4": [71, 95], "fatherisnotempti": [71, 95], "motherisnotempti": [71, 95], "fathersaremal": [71, 95], "mothersarefemal": [71, 95], "unionfathermoth": [71, 95], "parentisfatherormoth": [71, 95], "tclosur": [71, 95], "transitiveclosur": [71, 95], "ancestorformula": [71, 95], "descendantformula": [71, 95], "xxtupl": [71, 95], "notmemb": [71, 95], "quantifiedvari": [71, 95], "noselfancestor": [71, 95], "set_": [71, 73, 95], "qf_slia": [72, 74, 94], "smtlib2": [72, 74], "intseq": 72, "concat_len": 72, "formula1": [72, 74], "formula2": [72, 74], "int_seq": 72, "kshitij": [73, 88, 95], "bansal": [73, 88, 95], "uf": [73, 81, 95], "qf_ufliaf": [73, 95], "unionab": [73, 95], "emptset": [73, 95], "me": [73, 95], "singleton_on": [73, 95], "singleton_two": [73, 95], "singleton_thre": [73, 95], "one_two": [73, 95], "two_thre": [73, 95], "abc": [73, 74, 86, 96], "tianyi": 74, "liang": 74, "str_ab": 74, "leni": 74, "s2": [74, 94], "formula3": 74, "to_r": 74, "in_r": 74, "abdalrhman": [75, 76, 77], "start_bool": 75, "startbool": 75, "varx": [75, 76], "vari": [75, 81], "max_x_i": 75, "min_x_i": 75, "printsynthsolut": [75, 76, 77], "sygusfun": 75, "print_synth_solut": [75, 76, 77], "header": [75, 76, 77], "ifndef": [75, 76, 77], "cvc5__utils_h": [75, 76, 77], "sol": [75, 76, 77, 81], "endif": [75, 76, 77], "definefuntostr": [75, 76, 77], "ss": [75, 76, 77, 81], "stringbuild": [75, 76, 77], "getchild": [75, 76, 77], "define_fun_to_str": [75, 76, 77], "neg_x": 76, "termain": 76, "g2": 76, "g3": 76, "id1": 76, "id2": 76, "id3": 76, "reusabl": 76, "remain": [76, 80, 89, 90, 94], "id4": 76, "id1_x": 76, "id2_x": 76, "id3_x": 76, "id4_x": 76, "sygusgrammar": 76, "look": [76, 90], "ten": 77, "xp": 77, "sygusinv": 77, "open": [79, 86], "prover": 79, "successor": 79, "cvc4": [79, 80], "local": [80, 81], "build_dir": 80, "jn": 80, "parallel": 80, "thread": 80, "linux": 80, "mingw": 80, "w64": 80, "arm64": 80, "recommend": 80, "homebrew": 80, "tap": 80, "link": 80, "strongli": [80, 81], "discourag": 80, "dynam": [80, 81], "win64": 80, "dep": 80, "gcc": 80, "clang": 80, "toml": 80, "v6": 80, "packag": 80, "ship": 80, "eager": [80, 81, 86], "blast": [80, 81, 86], "cad": 80, "nonlinear": [80, 81, 88, 98], "poli": [80, 86], "multiprecis": 80, "better": 80, "footprint": 80, "permiss": 80, "gpl": 80, "speed": [80, 81], "contrib": 80, "script": [80, 85], "discuss": 80, "edit": 80, "tab": 80, "histori": [80, 81], "prompt": 80, "libedit": 80, "devel": 80, "flexibl": [80, 83], "simplevc": 80, "lang": [80, 81], "scikit": 80, "pytest": 80, "help": [80, 81], "develop": 80, "maintain": [80, 81], "contact": 80, "team": 80, "issu": 80, "tracker": 80, "doxygen": 80, "sphinx": 80, "rtd": 80, "theme": 80, "sphinxcontrib": 80, "bibtex": 80, "programoutput": 80, "breath": 80, "gh": 80, "content": 80, "readm": 80, "md": 80, "ctest": 80, "infrastructur": 80, "regex": 80, "exclud": 80, "label": 80, "le": 80, "failur": [80, 81], "regressn": 80, "apitest": 80, "api_test": 80, "system_test": 80, "ourobor": 80, "unit_test": 80, "subdir": 80, "map_util_black": 80, "regress_test": 80, "regress0": [80, 82, 83, 85, 90], "bug288b": 80, "preconfigur": 80, "systemtest": 80, "runexampl": 80, "coverag": 80, "gcov": 80, "sure": 80, "commit": 80, "sha": 80, "config": [80, 81], "wget": 80, "archiv": 80, "tar": 80, "gz": 80, "xf": 80, "runtim": [81, 90], "wide": [81, 90], "letter": 81, "interv": [81, 86, 98], "treatment": 81, "exhaust": [81, 89], "lang_auto": 81, "forc": 81, "inst": 81, "trigger": [81, 86], "benchmark": 81, "lit": 81, "deep": 81, "restart": [81, 89], "candid": [81, 82], "back": [81, 82], "verbatim": 81, "process": [81, 82, 86, 88, 89], "along": [81, 82], "quiet": 81, "decreas": 81, "rlimit": [81, 89], "reproduc": 81, "tlimit": 81, "millisecond": [81, 89], "wall": 81, "clock": 81, "increas": 81, "shell": 81, "seed": 81, "random": 81, "attempt": 81, "strict": [81, 86], "toler": 81, "conform": 81, "common": [81, 86, 98], "subexpr": 81, "don": 81, "200": 81, "expert": 81, "approxim": [81, 86, 98], "arith": [81, 86, 90], "brab": 81, "cube": 81, "compliant": 81, "prop": 81, "unat": 81, "bi": 81, "decid": [81, 93], "tableau": 81, "row": 81, "shorter": 81, "rewrit": [81, 83, 85, 86, 89], "inequ": [81, 86], "collect": [81, 86, 90], "pivot": [81, 86], "cut": 81, "period": 81, "dio": 81, "decomp": 81, "leak": 81, "diophantin": 81, "equat": [81, 86], "griggio": [81, 88], "jsat": 81, "2012": 81, "varord": 81, "simplex": 81, "violat": 81, "fc": 81, "penalti": 81, "degener": 81, "unset": 81, "tune": 81, "replai": [81, 86], "extern": [81, 86, 87, 89], "maxcutsincontext": 81, "65535": 81, "miplib": 81, "tmp": 81, "nl": 81, "cov": 81, "cylindr": 81, "algebra": 81, "lift": 81, "lazard": 81, "scheme": 81, "discard": 81, "whenev": [81, 89], "proj": [81, 92], "mccallum": 81, "modif": [81, 86], "prune": 81, "agress": 81, "elim": [81, 86], "go": 81, "light": 81, "approach": 81, "weight": [81, 89], "ent": 81, "conf": 81, "conflict": [81, 86], "factor": [81, 86], "inc": 81, "irrat": 81, "purifi": 81, "rbound": 81, "resolut": [81, 83, 85, 86], "split": [81, 86], "tf": 81, "taylor": [81, 86], "deg": 81, "degre": [81, 86], "polynomi": [81, 86], "tplane": [81, 86], "plane": [81, 86, 98], "strategi": [81, 86], "interleav": 81, "icp": 81, "rlv": 81, "threshold": 81, "pp": 81, "ppassert": 81, "earli": 81, "close": [81, 86], "eagerli": 81, "reject": 81, "25500": 81, "coeffici": 81, "effort": 81, "fulleffort": 81, "revert": 81, "known": 81, "cach": 81, "rr": 81, "robin": 81, "se": 81, "recheck": 81, "soi": 81, "quick": [81, 85], "explain": [81, 95], "minim": 81, "infeas": 81, "invoc": 81, "bland": 81, "ineq": 81, "relationship": 81, "fcsimplex": 81, "focus": 81, "converg": 81, "fmcad": 81, "2013": [81, 88], "submiss": 81, "de": [81, 86, 88], "moura": [81, 88], "09": 81, "paper": 81, "reduc": [81, 86], "care": 81, "graph": [81, 84], "algorithm": [81, 86], "christ": 81, "hoenick": 81, "2014": 81, "debug": [81, 82], "diagnost": 81, "channel": 81, "managederr": 81, "stderr": 81, "stdout": 81, "filenam": [81, 90], "managedin": 81, "read": [81, 86], "stdin": 81, "managedout": 81, "rweight": [81, 89], "unchang": 81, "trace": 81, "pushpop": 81, "wildcard": 81, "bitblast": [81, 86], "lazi": 81, "variou": 81, "aggress": [81, 86], "booltobv": 81, "ITEs": 81, "gauss": 81, "gaussian": 81, "intro": [81, 86], "blaster": 81, "rw": 81, "2017": [81, 88], "scholl": 81, "smt08": 81, "minisat": 81, "cryptominisat": 81, "cadic": 81, "kissat": 81, "backend": 81, "cdt": 81, "bisimilar": 81, "dt": [81, 92, 95], "cyclic": 81, "send": 81, "polit": 81, "sel": [81, 86, 92], "across": [81, 90], "abort": 81, "tell": 81, "fair": 81, "height": 81, "instant": [81, 82], "symmetri": [81, 86], "break": 81, "agg": 81, "smart": 81, "lazili": 81, "pbe": 81, "justif": [81, 85], "stoponli": 81, "atgp": 81, "inspir": 81, "stop": 81, "jh": 81, "activ": 81, "polici": [81, 86], "pend": 81, "do_semantic_checks_by_default": 81, "wf": 81, "wb": 81, "lazier": 81, "prenotifyfact": 81, "registerterm": 81, "measur": [81, 89], "cpu": 81, "portfolio": 81, "job": 81, "segv": 81, "spin": 81, "segfault": 81, "wait": 81, "gdb": 81, "emit": 81, "entir": 81, "chosen": 81, "request": 81, "trail": 81, "c2": [81, 93], "c3": 81, "filesystem": 81, "b0001": 81, "expr": 81, "flatten": 81, "ho": 81, "chain": [81, 86], "refut": [81, 86], "sound": 81, "cluster": 81, "cnf": [81, 86], "aleth": [81, 86, 87], "lfsc": [81, 86, 87], "progress": 81, "granular": [81, 83, 85], "dsl": 81, "improv": 81, "expand": [81, 86], "pedant": 81, "incorrect": 81, "untrust": 81, "merg": 81, "subproof": [81, 84, 86], "processor": 81, "unus": 81, "scope": [81, 86], "dimac": 81, "calus": 81, "freq": 81, "cbqi": 81, "rd": 81, "qcf": 81, "irrelev": 81, "portion": [81, 86, 96], "tconstraint": 81, "vo": 81, "cegi": 81, "sampl": 81, "trust": [81, 85, 86], "acceler": 81, "inde": 81, "spuriou": 81, "cegqi": 81, "invers": 81, "invert": [81, 86], "slack": 81, "boundari": 81, "becom": 81, "side": [81, 85, 86], "adder": 81, "resort": 81, "vt": 81, "innermost": 81, "midpoint": 81, "nopt": 81, "cond": 81, "quant": 81, "lead": 81, "gen": 81, "ground": 81, "expans": [81, 84, 86], "stc": 81, "ind": 81, "strengthen": 81, "quantif": [81, 82], "taut": 81, "tautolog": 81, "techniqu": [81, 98], "mean": [81, 85, 86, 89], "stratifi": 81, "favor": 81, "fmf": 81, "proxi": 81, "admiss": 81, "mbqi": 81, "fmc": 81, "thesi": 81, "1000": 81, "satur": 81, "due": [81, 83, 89], "ax": 81, "db": 81, "delai": 81, "dtt": 81, "ites": 81, "smaller": [81, 86, 94], "conserv": 81, "likewis": 81, "miniscop": 81, "fv": [81, 86], "prenex": 81, "norm": 81, "mapsto": [81, 86], "alpha": [81, 86], "dsplit": 81, "wd": 81, "rep": 81, "ee": 81, "regist": 81, "prefer": 81, "analysi": [81, 88], "unfold": [81, 84, 86], "unif": [81, 86], "connect": [81, 93], "crepair": 81, "repair": 81, "fast": 81, "agnost": 81, "geometr": 81, "miner": 81, "stronger": 81, "weaker": 81, "rev": [81, 94, 96], "backward": 81, "previou": 81, "concis": 81, "symobl": 81, "monomi": [81, 86], "insid": 81, "outsid": 81, "maxim": [81, 94], "templ": 81, "weaken": [81, 86], "precondit": 81, "postcondit": 81, "sg": 81, "reconstruct": [81, 83, 88], "unifi": 81, "minimi": 81, "preproc": 81, "fuzz": [81, 83, 85], "unsolv": 81, "subsolv": 81, "hard": 81, "avoid": 81, "accel": 81, "correct": [81, 86], "cong": [81, 83, 85, 86], "congruenc": [81, 86], "nvar": 81, "uniform": 81, "uniformli": 81, "fashion": 81, "si": [81, 96], "rcon": 81, "exceed": 81, "successfulli": 81, "10000": 81, "unlimit": 81, "igain": 81, "piecewis": 81, "indeped": 81, "barbosa": [81, 88], "et": 81, "al": 81, "unconstrain": 81, "gain": 81, "shuffl": 81, "verif": [81, 88], "databas": 81, "subterm": 81, "pat": 81, "ignor": [81, 94], "unbound": 81, "sep": [81, 93], "refin": [81, 98], "emp": [81, 93], "shorten": 81, "mayb": 81, "expens": 81, "averag": 81, "rew": 81, "prep": 81, "foreign": 81, "simp": 81, "kim": 81, "somenzi": 81, "suffici": 81, "unev": 81, "unevaluat": 81, "unlabel": 81, "track": 81, "unless": 81, "sove": 81, "nonclaus": 81, "compress": 81, "simplifywithcar": 81, "simplifici": 81, "batch": 81, "save": [81, 84], "clausal": 81, "subtyp": 81, "bcp": 81, "substituion": 81, "4294967295": 81, "pure": 81, "bitwidth": 81, "calcul": [81, 86], "monoton": 81, "bruttomesso": 81, "brummay": 81, "phd": 81, "qf_abv": 81, "prepocess": 81, "card": [81, 95], "196608": 81, "alphabet": 81, "deq": [81, 86], "extension": [81, 86], "ff": [81, 85], "flat": 81, "mbr": 81, "65536": 81, "omit": [81, 86], "rexplain": 81, "regress": [81, 82, 83, 85, 90], "condens": 81, "central": [81, 89], "own": 81, "tc": 81, "theoryof": 81, "breaker": 81, "deharb": 81, "cade": [81, 88], "2011": [81, 88], "ll": 81, "shrink": 81, "aspect": 82, "cli": [82, 83, 85, 90], "regress1": 82, "qid": 82, "myquant1": 82, "myquant2": 82, "f_int": 82, "f_bool": 82, "cvc": [82, 85], "nat": 82, "succ": 82, "pred": 82, "printer": [82, 86], "print_sub": 82, "additon": 83, "coars": [83, 86], "fine": [83, 85, 88], "grain": [83, 85, 86, 88], "verit": [83, 88], "bdodeharbef09": [83, 88], "isabel": 83, "hol": 83, "bbff20": [83, 88], "sfd21": [83, 88], "coq": [83, 88], "smtcoq": [83, 88], "plugin": 83, "afgregoir": [83, 88], "emt": [83, 88], "rust": 83, "checker": [83, 85, 86], "qgu": [83, 85], "a0": 83, "t1": [83, 86, 92, 93], "cl": 83, "equiv_pos2": 83, "refl": [83, 85, 86], "t3": 83, "t4": 83, "all_simplifi": 83, "t5": 83, "premis": [83, 86], "t6": 83, "t7": 83, "t8": 83, "t9": 83, "t10": 83, "not_and": [83, 86], "t11": 83, "t12": 83, "equiv2": 83, "t13": 83, "t14": 83, "equiv1": 83, "t15": 83, "reorder": [83, 85, 86], "t16": 83, "t17": 83, "t18": 83, "or_neg": 83, "t19": 83, "t20": 83, "contract": 83, "t21": 83, "t22": 83, "t23": 83, "t24": 83, "t25": 83, "t26": 83, "t27": 83, "t28": 83, "t29": 83, "t30": 83, "t31": 83, "among": [84, 86], "thing": [84, 86], "leverag": 84, "calculu": [84, 85, 86, 87], "dedic": 84, "suffic": 84, "upload": 84, "color": [84, 92], "stepwis": 84, "lf": 85, "framework": [85, 88], "sor": [85, 88], "repositori": 85, "meta": 85, "signatur": 85, "warn": 85, "often": 85, "theory_rewrit": [85, 86], "__t1": 85, "__t2": 85, "__t3": 85, "__t4": 85, "__t5": 85, "__t6": 85, "__t7": 85, "__t8": 85, "__a0": 85, "plet": 85, "__p1": 85, "f_and": 85, "__p2": 85, "__p3": 85, "__p4": 85, "__p5": 85, "f_not": 85, "__p6": 85, "and_elim": [85, 86], "eq_resolv": [85, 86], "__p7": 85, "__p8": 85, "__p9": 85, "f_": 85, "__p10": 85, "__p11": 85, "equiv_elim1": [85, 86], "cnf_equiv_pos1": [85, 86], "tt": [85, 88], "pfrule": 86, "analog": 86, "texttt": 86, "rulenam": 86, "inferrulesc": 86, "varphi_1": 86, "varphi_n": 86, "mid": 86, "t_m": 86, "psi": 86, "varphi_i": 86, "t_i": 86, "tm": 86, "sometim": 86, "abus": 86, "interchang": 86, "target": 86, "design": 86, "categor": 86, "enclos": [86, 98], "macro_": 86, "inferrul": 86, "justifi": 86, "f_1": 86, "f_n": 86, "land": 86, "neq": 86, "bot": 86, "textrm": 86, "dual": 86, "conclud": 86, "circ": 86, "sigma_": 86, "f_i": 86, "methodid": 86, "idr": 86, "rw_evalu": 86, "macro_sr_eq_intro": 86, "rewritten": 86, "proven": 86, "ida": 86, "view": 86, "transform": 86, "proof_check": 86, "macro_sr_pred_intro": 86, "toorigin": 86, "hand": 86, "purif": 86, "macro_sr_pred_elim": 86, "macro_sr_pred_transform": 86, "a_1": 86, "a_n": 86, "anyth": 86, "inferenceid": 86, "remove_term_formula_axiom": 86, "removetermformula": 86, "getaxiomfor": 86, "theory_lemma": 86, "tid": 86, "theoryid": 86, "rid": 86, "rw_rewrite_theory_pr": 86, "rw_rewrite_theory_post": 86, "rw_rewrite_eq_ext": 86, "theory_preprocess": 86, "pprewrit": 86, "theory_preprocess_lemma": 86, "preprocess_lemma": 86, "theory_expand_def": 86, "witness_axiom": 86, "trust_rewrit": 86, "replay": 86, "postprocess": 86, "trust_sub": 86, "trust_subs_map": 86, "trustsubstitutionmap": 86, "trust_subs_eq": 86, "theory_infer": 86, "fact": 86, "sat_refut": 86, "c_2": 86, "pol": 86, "polar": 86, "resp": 86, "accord": 86, "unsound": 86, "chain_resolut": 86, "pol_1": 86, "l_1": 86, "pol_": 86, "l_": 86, "diamond_": 86, "mathit": 86, "c_i": 86, "diamond": 86, "macro_resolut": 86, "macro_resolution_trust": 86, "uncheck": 86, "lor": 86, "f_2": 86, "modus_ponen": 86, "modu": 86, "ponen": 86, "implies_elim": 86, "not_not_elim": 86, "contra": 86, "contradict": 86, "and_intro": 86, "not_or_elim": 86, "not_implies_elim1": 86, "not_implies_elim2": 86, "equiv_elim2": 86, "not_equiv_elim1": 86, "not_equiv_elim2": 86, "xor_elim1": 86, "xor_elim2": 86, "not_xor_elim1": 86, "not_xor_elim2": 86, "ite_elim1": 86, "ite_elim2": 86, "not_ite_elim1": 86, "not_ite_elim2": 86, "cnf_and_po": 86, "cnf_and_neg": 86, "cnf_or_po": 86, "cnf_or_neg": 86, "cnf_implies_po": 86, "cnf_implies_neg1": 86, "cnf_implies_neg2": 86, "cnf_equiv_pos2": 86, "cnf_equiv_neg1": 86, "cnf_equiv_neg2": 86, "cnf_xor_pos1": 86, "cnf_xor_pos2": 86, "cnf_xor_neg1": 86, "cnf_xor_neg2": 86, "cnf_ite_pos1": 86, "cnf_ite_pos2": 86, "cnf_ite_pos3": 86, "cnf_ite_neg1": 86, "cnf_ite_neg2": 86, "cnf_ite_neg3": 86, "reflex": 86, "symm": 86, "t_2": 86, "t_": 86, "t_n": 86, "s_n": 86, "proofrulecheck": 86, "mkkindnod": 86, "true_intro": 86, "true_elim": 86, "false_intro": 86, "false_elim": 86, "ho_app_encod": 86, "theoryufrewrit": 86, "gethoapplyforapplyuf": 86, "isth": 86, "ho_cong": 86, "arrays_read_over_writ": [86, 90], "arrays_read_over_write_contra": 86, "contraposit": 86, "arrays_read_over_write_1": [86, 90], "arrays_ext": [86, 90], "skolemcach": 86, "getextindexskolem": 86, "arrays_eq_range_expand": 86, "eqrang": 86, "bv_bitblast": 86, "circuit": 86, "bitblast_strategies_templ": 86, "bv_bitblast_step": 86, "bv_eager_atom": 86, "atom": 86, "bitvector_eager_atom": 86, "dt_unif": 86, "s_i": 86, "dt_inst": 86, "_c": 86, "discrimin": [86, 92], "dt_collaps": 86, "collaps": 86, "_i": 86, "c_j": 86, "typenod": 86, "mkgroundterm": 86, "proper": 86, "mkgroundvalu": 86, "dt_split": 86, "vee": 86, "dt_clash": 86, "clash": 86, "skolem_intro": 86, "unpurifi": 86, "sigma": 86, "skolemmanag": 86, "mkskolem": 86, "getwitnessform": 86, "caus": 86, "quantifiers_inst_e_match": 86, "alpha_equiv": 86, "z_1": 86, "z_n": 86, "varphi": [86, 93], "quantifiers_preprocess": 86, "quantifierspreprocess": 86, "concat_eq": 86, "ldot": [86, 93], "stand": 86, "implicit": 86, "mathsf": 86, "bc": 86, "splitconst": 86, "concat_unifi": 86, "concat_conflict": 86, "neither": 86, "concat_split": 86, "r_t": 86, "r_": 86, "suf": [86, 94], "concat_csplit": 86, "concat_lprop": 86, "concat_cprop": 86, "w_1": 86, "w_2": 86, "w_3": 86, "overlap": 86, "largest": 86, "therefor": [86, 89, 90], "roverlap": 86, "string_decompos": 86, "decomposit": 86, "string_length_po": 86, "string_length_non_empti": 86, "string_reduct": 86, "stringspreprocess": 86, "string_eager_reduct": 86, "termregistri": 86, "eagerreduc": 86, "re_int": 86, "r_1": 86, "r_2": 86, "re_unfold_po": 86, "regexpopr": 86, "reduceregexppo": 86, "re_unfold_neg": 86, "reduceregexpneg": 86, "re_unfold_neg_concat_fix": 86, "reduceregexpnegconcatfix": 86, "getregexpconcatfix": 86, "re_elim": 86, "regexpelimin": 86, "string_code_inj": 86, "_code": 86, "string_seq_unit_inj": 86, "string_infer": 86, "isrev": 86, "bookkeep": 86, "inferproofcon": 86, "macro_arith_scale_sum_ub": 86, "l_n": 86, "k_1": 86, "k_n": 86, "k_i": 86, "mathbb": [86, 91], "fusion": 86, "diamond_i": 86, "flip": 86, "scale": 86, "colon": 86, "p_1": 86, "p_n": 86, "arith_sum_ub": 86, "p_i": 86, "l_i": 86, "r_i": 86, "r_n": 86, "int_tight_ub": 86, "tighten": 86, "lfloor": 86, "rfloor": 86, "int_tight_lb": 86, "lceil": 86, "rceil": 86, "arith_trichotomi": 86, "trichotomi": 86, "arith_op_elim_axiom": 86, "operatorelim": 86, "arith_poly_norm": 86, "polynorm": 86, "isarithpolynorm": 86, "arith_mult_sign": 86, "f_k": 86, "arith_mult_po": 86, "arith_mult_neg": 86, "arith_mult_tang": 86, "arith_trans_pi": 86, "arith_trans_exp_neg": 86, "arith_trans_exp_posit": 86, "arith_trans_exp_super_lin": 86, "grow": [86, 89], "super": 86, "linearli": [86, 89], "arith_trans_exp_zero": 86, "arith_trans_exp_approx_above_neg": 86, "maclaurin": 86, "seri": 86, "frac": 86, "arith_trans_exp_approx_above_po": 86, "po": 86, "arith_trans_exp_approx_below": 86, "infti": 86, "arith_trans_sine_bound": 86, "sin": [86, 98], "arith_trans_sine_shift": 86, "slolem": 86, "arith_trans_sine_symmetri": 86, "symmetr": 86, "arith_trans_sine_tangent_zero": 86, "arith_trans_sine_tangent_pi": 86, "arith_trans_sine_approx_above_neg": 86, "lb": 86, "ub": 86, "arith_trans_sine_approx_above_po": 86, "arith_trans_sine_approx_below_neg": 86, "arith_trans_sine_approx_below_po": 86, "arith_nl_covering_direct": 86, "irp": 86, "_k": 86, "indexedrootpred": 86, "univari": 86, "topmost": 86, "arith_nl_covering_recurs": 86, "x_": 86, "lfsc_rule": 86, "holder": 86, "a_m": 86, "alethe_rul": 86, "faithfulli": 87, "reflect": [87, 89], "meant": 87, "micha": 88, "\u00eb": 88, "armand": 88, "germain": 88, "faur": 88, "benjamin": 88, "gr": 88, "\u00e9": 88, "goir": 88, "chantal": 88, "keller": 88, "laurent": 88, "ry": 88, "werner": 88, "modular": 88, "slash": 88, "jean": 88, "pierr": 88, "jouannaud": 88, "zhong": 88, "shao": 88, "editor": 88, "certifi": 88, "volum": 88, "7086": 88, "lectur": 88, "scienc": 88, "135": 88, "150": 88, "springer": 88, "1007": 88, "978": 88, "642": 88, "25379": 88, "9_12": 88, "bbrt17": [88, 95], "cesar": 88, "tinelli": 88, "decis": [88, 89, 92, 93, 98], "procedur": [88, 92, 93, 98], "corr": 88, "arxiv": 88, "1702": 88, "06259": 88, "haniel": 88, "jasmin": 88, "christian": 88, "blanchett": 88, "fleuri": 88, "pascal": 88, "fontain": 88, "scalabl": 88, "journal": 88, "autom": 88, "485": 88, "510": 88, "2020": 88, "url": 88, "s10817": 88, "018": 88, "09502": 88, "bft17": [88, 93], "technic": 88, "depart": 88, "iowa": 88, "www": 88, "bst07": [88, 92], "igor": 88, "shikanian": 88, "satisf": 88, "21": 88, "46": 88, "2007": 88, "3233": 88, "sat190028": 88, "thoma": 88, "bouton": 88, "diego": 88, "caminha": 88, "oliveira": 88, "david": 88, "harb": 88, "pen": 88, "rustabl": 88, "fficient": 88, "olver": 88, "renat": 88, "schmidt": 88, "confer": 88, "deduct": 88, "5663": 88, "151": 88, "156": 88, "dx": 88, "02959": 88, "2_12": 88, "cgi": [88, 98], "alessandro": 88, "cimatti": 88, "alberto": 88, "ahm": 88, "irfan": 88, "marco": 88, "roveri": 88, "roberto": 88, "sebastiani": 88, "acm": 88, "19": 88, "52": [88, 93], "2018": 88, "1145": 88, "3230639": 88, "burak": 88, "ekici": 88, "alain": 88, "mebsout": 88, "gui": 88, "katz": 88, "plug": 88, "rupak": 88, "majumdar": 88, "viktor": 88, "kuncak": 88, "aid": 88, "cav": 88, "10427": 88, "126": 88, "133": 88, "319": 88, "63390": 88, "9_7": 88, "84": 88, "baoluo": 88, "meng": 88, "leonardo": 88, "26": 88, "26th": 88, "gothenburg": 88, "sweden": 88, "august": 88, "proceed": 88, "10395": 88, "148": 88, "165": 88, "63046": 88, "5_10": 88, "rb15": [88, 92], "ami": 88, "felti": 88, "aart": 88, "middeldorp": 88, "25th": 88, "berlin": 88, "germani": 88, "2015": 88, "9195": 88, "197": 88, "213": 88, "21401": 88, "6_13": 88, "risk16": [88, 93], "radu": 88, "iosif": 88, "cristina": 88, "serban": 88, "cyril": 88, "artho": 88, "axel": 88, "legai": 88, "doron": 88, "pele": 88, "technologi": 88, "14th": 88, "symposium": 88, "atva": 88, "2016": 88, "chiba": 88, "japan": 88, "octob": 88, "9938": 88, "244": 88, "261": 88, "46520": 88, "3_16": 88, "han": 88, "\u00f6": 88, "rg": 88, "schurr": 88, "martin": 88, "desharnai": 88, "reliabl": 88, "assist": 88, "platzer": 88, "geoff": 88, "sutcliff": 88, "12699": 88, "450": 88, "467": 88, "2021": 88, "030": 88, "79876": 88, "5_26": 88, "aaron": 88, "stump": 88, "duckki": 88, "oe": 88, "syst": 88, "42": 88, "91": 88, "118": 88, "s10703": 88, "012": 88, "0163": 88, "amount": 89, "whole": 89, "lifetim": 89, "honor": 89, "subroutin": 89, "realiz": 89, "afterward": 89, "asynchron": 89, "setitim": 89, "ulimit": 89, "inher": 89, "unsuit": 89, "standalon": 89, "effect": 89, "As": 89, "soon": 89, "continu": [89, 94], "Then": 89, "intent": 89, "spent": 89, "event": 89, "modifi": 89, "restartstep": 89, "varieti": 90, "insight": 90, "enable_statist": 90, "competit": 90, "dealloc": 90, "stabl": 90, "minor": 90, "timer": 90, "export": 90, "auflia": 90, "bug336": 90, "unknown_type_const": 90, "totaltim": 90, "5m": 90, "inferenceslemma": 90, "arith_split_deq": 90, "inferencesfact": 90, "combination_split": 90, "overal": 90, "sent": 90, "difference_subtract": 91, "duplicate_remov": 91, "uplu": [91, 93], "m_2": 91, "difference_remov": 91, "delta": 91, "qf_dt": 92, "d1": 92, "dk": 92, "nk": 92, "s11": 92, "s1i": 92, "cj": 92, "sij": 92, "red": 92, "black": 92, "fname": 92, "lname": 92, "john": 92, "smith": 92, "sugar": [92, 95], "coinduct": 92, "ci": 92, "term_1": [92, 95], "term_n": [92, 95], "upd": 92, "sort_1": [92, 93, 95], "sort_n": [92, 95], "s_int": [92, 95], "i1": 92, "fst": 92, "snd": 92, "getselectorterm": 92, "sl": 93, "loc": 93, "pto": 93, "f2": 93, "classic": 93, "variad": 93, "models_": 93, "phi_1": 93, "phi_n": 93, "h_1": 93, "h_n": 93, "h_i": 93, "phi_i": 93, "phi_2": 93, "summar": 93, "sort_2": 93, "accept": 93, "indexof": 94, "dst": 94, "replace_al": 94, "prefixof": 94, "suffixof": 94, "sgl": 95, "subtl": 95, "That": [95, 98], "motiv": 95, "presenc": 95, "counter": 95, "intuit": 95, "tuple_select": 95, "indexof_r": 96, "w\u2082": 96, "u\u2081": 96, "w\u2081": 96, "shortest": 96, "u\u2081w\u2081u\u2082": 96, "u\u2081u\u2082u\u2083": 96, "u\u2081w\u2083u\u2083": 96, "w\u2083": 96, "u\u2082": 96, "u\u2082u\u2084": 96, "cba": 96, "to_low": 96, "ri": 96, "65": 96, "90": 96, "ascii": 96, "to_upp": 96, "97": 96, "122": 96, "beyond": 97, "mix": 97, "nra": 98, "nira": 98, "tan": 98, "qf_nrat": 98, "csc": 98, "sec": 98, "cot": 98, "arcco": 98, "arctan": 98, "arccsc": 98, "arccot": 98, "subject": 98, "said": 98, "inexact": 98, "demand": 98, "twopi": 98, "ysq": 98, "sinx": 98, "x_gt_pi": 98, "x_lt_tpi": 98, "ysq_lt_sinx": 98}, "objects": {"": [[10, 0, 1, "_CPPv4N4cvc54Kind3ABSE", "cvc5::ABS"], [10, 0, 1, "_CPPv4N4cvc54Kind3ADDE", "cvc5::ADD"], [10, 0, 1, "_CPPv4N4cvc54Kind3ANDE", "cvc5::AND"], [10, 0, 1, "_CPPv4N4cvc54Kind17APPLY_CONSTRUCTORE", "cvc5::APPLY_CONSTRUCTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind14APPLY_SELECTORE", "cvc5::APPLY_SELECTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind12APPLY_TESTERE", "cvc5::APPLY_TESTER"], [10, 0, 1, "_CPPv4N4cvc54Kind8APPLY_UFE", "cvc5::APPLY_UF"], [10, 0, 1, "_CPPv4N4cvc54Kind13APPLY_UPDATERE", "cvc5::APPLY_UPDATER"], [10, 0, 1, "_CPPv4N4cvc54Kind11ARCCOSECANTE", "cvc5::ARCCOSECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind9ARCCOSINEE", "cvc5::ARCCOSINE"], [10, 0, 1, "_CPPv4N4cvc54Kind12ARCCOTANGENTE", "cvc5::ARCCOTANGENT"], [10, 0, 1, "_CPPv4N4cvc54Kind9ARCSECANTE", "cvc5::ARCSECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind7ARCSINEE", "cvc5::ARCSINE"], [10, 0, 1, "_CPPv4N4cvc54Kind10ARCTANGENTE", "cvc5::ARCTANGENT"], [10, 0, 1, "_CPPv4N4cvc54Kind8BAG_CARDE", "cvc5::BAG_CARD"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_CHOOSEE", "cvc5::BAG_CHOOSE"], [10, 0, 1, "_CPPv4N4cvc54Kind9BAG_COUNTE", "cvc5::BAG_COUNT"], [10, 0, 1, "_CPPv4N4cvc54Kind21BAG_DIFFERENCE_REMOVEE", "cvc5::BAG_DIFFERENCE_REMOVE"], [10, 0, 1, "_CPPv4N4cvc54Kind23BAG_DIFFERENCE_SUBTRACTE", "cvc5::BAG_DIFFERENCE_SUBTRACT"], [10, 0, 1, "_CPPv4N4cvc54Kind21BAG_DUPLICATE_REMOVALE", "cvc5::BAG_DUPLICATE_REMOVAL"], [10, 0, 1, "_CPPv4N4cvc54Kind9BAG_EMPTYE", "cvc5::BAG_EMPTY"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_FILTERE", "cvc5::BAG_FILTER"], [10, 0, 1, "_CPPv4N4cvc54Kind8BAG_FOLDE", "cvc5::BAG_FOLD"], [10, 0, 1, "_CPPv4N4cvc54Kind12BAG_FROM_SETE", "cvc5::BAG_FROM_SET"], [10, 0, 1, "_CPPv4N4cvc54Kind13BAG_INTER_MINE", "cvc5::BAG_INTER_MIN"], [10, 0, 1, "_CPPv4N4cvc54Kind16BAG_IS_SINGLETONE", "cvc5::BAG_IS_SINGLETON"], [10, 0, 1, "_CPPv4N4cvc54Kind8BAG_MAKEE", "cvc5::BAG_MAKE"], [10, 0, 1, "_CPPv4N4cvc54Kind7BAG_MAPE", "cvc5::BAG_MAP"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_MEMBERE", "cvc5::BAG_MEMBER"], [10, 0, 1, "_CPPv4N4cvc54Kind13BAG_PARTITIONE", "cvc5::BAG_PARTITION"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_SUBBAGE", "cvc5::BAG_SUBBAG"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_TO_SETE", "cvc5::BAG_TO_SET"], [10, 0, 1, "_CPPv4N4cvc54Kind18BAG_UNION_DISJOINTE", "cvc5::BAG_UNION_DISJOINT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BAG_UNION_MAXE", "cvc5::BAG_UNION_MAX"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ADDE", "cvc5::BITVECTOR_ADD"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ANDE", "cvc5::BITVECTOR_AND"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_ASHRE", "cvc5::BITVECTOR_ASHR"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_COMPE", "cvc5::BITVECTOR_COMP"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_CONCATE", "cvc5::BITVECTOR_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind17BITVECTOR_EXTRACTE", "cvc5::BITVECTOR_EXTRACT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ITEE", "cvc5::BITVECTOR_ITE"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_LSHRE", "cvc5::BITVECTOR_LSHR"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_MULTE", "cvc5::BITVECTOR_MULT"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_NANDE", "cvc5::BITVECTOR_NAND"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_NEGE", "cvc5::BITVECTOR_NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_NORE", "cvc5::BITVECTOR_NOR"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_NOTE", "cvc5::BITVECTOR_NOT"], [10, 0, 1, "_CPPv4N4cvc54Kind12BITVECTOR_ORE", "cvc5::BITVECTOR_OR"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_REDANDE", "cvc5::BITVECTOR_REDAND"], [10, 0, 1, "_CPPv4N4cvc54Kind15BITVECTOR_REDORE", "cvc5::BITVECTOR_REDOR"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_REPEATE", "cvc5::BITVECTOR_REPEAT"], [10, 0, 1, "_CPPv4N4cvc54Kind21BITVECTOR_ROTATE_LEFTE", "cvc5::BITVECTOR_ROTATE_LEFT"], [10, 0, 1, "_CPPv4N4cvc54Kind22BITVECTOR_ROTATE_RIGHTE", "cvc5::BITVECTOR_ROTATE_RIGHT"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_SDIVE", "cvc5::BITVECTOR_SDIV"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SGEE", "cvc5::BITVECTOR_SGE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SGTE", "cvc5::BITVECTOR_SGT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SHLE", "cvc5::BITVECTOR_SHL"], [10, 0, 1, "_CPPv4N4cvc54Kind21BITVECTOR_SIGN_EXTENDE", "cvc5::BITVECTOR_SIGN_EXTEND"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SLEE", "cvc5::BITVECTOR_SLE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SLTE", "cvc5::BITVECTOR_SLT"], [10, 0, 1, "_CPPv4N4cvc54Kind15BITVECTOR_SLTBVE", "cvc5::BITVECTOR_SLTBV"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_SMODE", "cvc5::BITVECTOR_SMOD"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_SREME", "cvc5::BITVECTOR_SREM"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SUBE", "cvc5::BITVECTOR_SUB"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_TO_NATE", "cvc5::BITVECTOR_TO_NAT"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_UDIVE", "cvc5::BITVECTOR_UDIV"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_UGEE", "cvc5::BITVECTOR_UGE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_UGTE", "cvc5::BITVECTOR_UGT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ULEE", "cvc5::BITVECTOR_ULE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ULTE", "cvc5::BITVECTOR_ULT"], [10, 0, 1, "_CPPv4N4cvc54Kind15BITVECTOR_ULTBVE", "cvc5::BITVECTOR_ULTBV"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_UREME", "cvc5::BITVECTOR_UREM"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_XNORE", "cvc5::BITVECTOR_XNOR"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_XORE", "cvc5::BITVECTOR_XOR"], [10, 0, 1, "_CPPv4N4cvc54Kind21BITVECTOR_ZERO_EXTENDE", "cvc5::BITVECTOR_ZERO_EXTEND"], [10, 0, 1, "_CPPv4N4cvc54Kind22CARDINALITY_CONSTRAINTE", "cvc5::CARDINALITY_CONSTRAINT"], [10, 0, 1, "_CPPv4N4cvc54Kind8CONSTANTE", "cvc5::CONSTANT"], [10, 0, 1, "_CPPv4N4cvc54Kind11CONST_ARRAYE", "cvc5::CONST_ARRAY"], [10, 0, 1, "_CPPv4N4cvc54Kind15CONST_BITVECTORE", "cvc5::CONST_BITVECTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind13CONST_BOOLEANE", "cvc5::CONST_BOOLEAN"], [10, 0, 1, "_CPPv4N4cvc54Kind19CONST_FLOATINGPOINTE", "cvc5::CONST_FLOATINGPOINT"], [10, 0, 1, "_CPPv4N4cvc54Kind13CONST_INTEGERE", "cvc5::CONST_INTEGER"], [10, 0, 1, "_CPPv4N4cvc54Kind14CONST_RATIONALE", "cvc5::CONST_RATIONAL"], [10, 0, 1, "_CPPv4N4cvc54Kind18CONST_ROUNDINGMODEE", "cvc5::CONST_ROUNDINGMODE"], [10, 0, 1, "_CPPv4N4cvc54Kind14CONST_SEQUENCEE", "cvc5::CONST_SEQUENCE"], [10, 0, 1, "_CPPv4N4cvc54Kind12CONST_STRINGE", "cvc5::CONST_STRING"], [10, 0, 1, "_CPPv4N4cvc54Kind8COSECANTE", "cvc5::COSECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind6COSINEE", "cvc5::COSINE"], [10, 0, 1, "_CPPv4N4cvc54Kind9COTANGENTE", "cvc5::COTANGENT"], [8, 1, 1, "_CPPv4N4cvc516CVC5ApiExceptionE", "cvc5::CVC5ApiException"], [8, 2, 1, "_CPPv4N4cvc516CVC5ApiException16CVC5ApiExceptionERKNSt12stringstreamE", "cvc5::CVC5ApiException::CVC5ApiException"], [8, 2, 1, "_CPPv4N4cvc516CVC5ApiException16CVC5ApiExceptionERKNSt6stringE", "cvc5::CVC5ApiException::CVC5ApiException"], [8, 3, 1, "_CPPv4N4cvc516CVC5ApiException16CVC5ApiExceptionERKNSt6stringE", "cvc5::CVC5ApiException::CVC5ApiException::str"], [8, 3, 1, "_CPPv4N4cvc516CVC5ApiException16CVC5ApiExceptionERKNSt12stringstreamE", "cvc5::CVC5ApiException::CVC5ApiException::stream"], [8, 2, 1, "_CPPv4NK4cvc516CVC5ApiException10getMessageEv", "cvc5::CVC5ApiException::getMessage"], [8, 2, 1, "_CPPv4NK4cvc516CVC5ApiException4whatEv", "cvc5::CVC5ApiException::what"], [8, 1, 1, "_CPPv4N4cvc527CVC5ApiRecoverableExceptionE", "cvc5::CVC5ApiRecoverableException"], [8, 2, 1, "_CPPv4N4cvc527CVC5ApiRecoverableException27CVC5ApiRecoverableExceptionERKNSt12stringstreamE", "cvc5::CVC5ApiRecoverableException::CVC5ApiRecoverableException"], [8, 2, 1, "_CPPv4N4cvc527CVC5ApiRecoverableException27CVC5ApiRecoverableExceptionERKNSt6stringE", "cvc5::CVC5ApiRecoverableException::CVC5ApiRecoverableException"], [8, 3, 1, "_CPPv4N4cvc527CVC5ApiRecoverableException27CVC5ApiRecoverableExceptionERKNSt6stringE", "cvc5::CVC5ApiRecoverableException::CVC5ApiRecoverableException::str"], [8, 3, 1, "_CPPv4N4cvc527CVC5ApiRecoverableException27CVC5ApiRecoverableExceptionERKNSt12stringstreamE", "cvc5::CVC5ApiRecoverableException::CVC5ApiRecoverableException::stream"], [10, 0, 1, "_CPPv4N4cvc54Kind8DISTINCTE", "cvc5::DISTINCT"], [10, 0, 1, "_CPPv4N4cvc54Kind9DIVISIBLEE", "cvc5::DIVISIBLE"], [10, 0, 1, "_CPPv4N4cvc54Kind8DIVISIONE", "cvc5::DIVISION"], [2, 1, 1, "_CPPv4N4cvc58DatatypeE", "cvc5::Datatype"], [2, 2, 1, "_CPPv4N4cvc58Datatype8DatatypeEv", "cvc5::Datatype::Datatype"], [2, 2, 1, "_CPPv4NK4cvc58Datatype5beginEv", "cvc5::Datatype::begin"], [2, 1, 1, "_CPPv4N4cvc58Datatype14const_iteratorE", "cvc5::Datatype::const_iterator"], [2, 2, 1, "_CPPv4N4cvc58Datatype14const_iterator14const_iteratorEv", "cvc5::Datatype::const_iterator::const_iterator"], [2, 4, 1, "_CPPv4N4cvc58Datatype14const_iterator15difference_typeE", "cvc5::Datatype::const_iterator::difference_type"], [2, 4, 1, "_CPPv4N4cvc58Datatype14const_iterator17iterator_categoryE", "cvc5::Datatype::const_iterator::iterator_category"], [2, 2, 1, "_CPPv4NK4cvc58Datatype14const_iteratorneERK14const_iterator", "cvc5::Datatype::const_iterator::operator!="], [2, 3, 1, "_CPPv4NK4cvc58Datatype14const_iteratorneERK14const_iterator", "cvc5::Datatype::const_iterator::operator!=::it"], [2, 2, 1, "_CPPv4NK4cvc58Datatype14const_iteratormlEv", "cvc5::Datatype::const_iterator::operator*"], [2, 2, 1, "_CPPv4N4cvc58Datatype14const_iteratorppEi", "cvc5::Datatype::const_iterator::operator++"], [2, 2, 1, "_CPPv4N4cvc58Datatype14const_iteratorppEv", "cvc5::Datatype::const_iterator::operator++"], [2, 2, 1, "_CPPv4NK4cvc58Datatype14const_iteratorptEv", "cvc5::Datatype::const_iterator::operator-&gt;"], [2, 2, 1, "_CPPv4N4cvc58Datatype14const_iteratoraSERK14const_iterator", "cvc5::Datatype::const_iterator::operator="], [2, 3, 1, "_CPPv4N4cvc58Datatype14const_iteratoraSERK14const_iterator", "cvc5::Datatype::const_iterator::operator=::it"], [2, 2, 1, "_CPPv4NK4cvc58Datatype14const_iteratoreqERK14const_iterator", "cvc5::Datatype::const_iterator::operator=="], [2, 3, 1, "_CPPv4NK4cvc58Datatype14const_iteratoreqERK14const_iterator", "cvc5::Datatype::const_iterator::operator==::it"], [2, 4, 1, "_CPPv4N4cvc58Datatype14const_iterator7pointerE", "cvc5::Datatype::const_iterator::pointer"], [2, 4, 1, "_CPPv4N4cvc58Datatype14const_iterator9referenceE", "cvc5::Datatype::const_iterator::reference"], [2, 4, 1, "_CPPv4N4cvc58Datatype14const_iterator10value_typeE", "cvc5::Datatype::const_iterator::value_type"], [2, 2, 1, "_CPPv4NK4cvc58Datatype3endEv", "cvc5::Datatype::end"], [2, 2, 1, "_CPPv4NK4cvc58Datatype14getConstructorERKNSt6stringE", "cvc5::Datatype::getConstructor"], [2, 3, 1, "_CPPv4NK4cvc58Datatype14getConstructorERKNSt6stringE", "cvc5::Datatype::getConstructor::name"], [2, 2, 1, "_CPPv4NK4cvc58Datatype7getNameEv", "cvc5::Datatype::getName"], [2, 2, 1, "_CPPv4NK4cvc58Datatype18getNumConstructorsEv", "cvc5::Datatype::getNumConstructors"], [2, 2, 1, "_CPPv4NK4cvc58Datatype13getParametersEv", "cvc5::Datatype::getParameters"], [2, 2, 1, "_CPPv4NK4cvc58Datatype11getSelectorERKNSt6stringE", "cvc5::Datatype::getSelector"], [2, 3, 1, "_CPPv4NK4cvc58Datatype11getSelectorERKNSt6stringE", "cvc5::Datatype::getSelector::name"], [2, 2, 1, "_CPPv4NK4cvc58Datatype12isCodatatypeEv", "cvc5::Datatype::isCodatatype"], [2, 2, 1, "_CPPv4NK4cvc58Datatype8isFiniteEv", "cvc5::Datatype::isFinite"], [2, 2, 1, "_CPPv4NK4cvc58Datatype6isNullEv", "cvc5::Datatype::isNull"], [2, 2, 1, "_CPPv4NK4cvc58Datatype12isParametricEv", "cvc5::Datatype::isParametric"], [2, 2, 1, "_CPPv4NK4cvc58Datatype8isRecordEv", "cvc5::Datatype::isRecord"], [2, 2, 1, "_CPPv4NK4cvc58Datatype7isTupleEv", "cvc5::Datatype::isTuple"], [2, 2, 1, "_CPPv4NK4cvc58Datatype13isWellFoundedEv", "cvc5::Datatype::isWellFounded"], [2, 2, 1, "_CPPv4NK4cvc58DatatypeixE6size_t", "cvc5::Datatype::operator[]"], [2, 2, 1, "_CPPv4NK4cvc58DatatypeixERKNSt6stringE", "cvc5::Datatype::operator[]"], [2, 3, 1, "_CPPv4NK4cvc58DatatypeixE6size_t", "cvc5::Datatype::operator[]::idx"], [2, 3, 1, "_CPPv4NK4cvc58DatatypeixERKNSt6stringE", "cvc5::Datatype::operator[]::name"], [2, 2, 1, "_CPPv4NK4cvc58Datatype8toStringEv", "cvc5::Datatype::toString"], [2, 2, 1, "_CPPv4N4cvc58DatatypeD0Ev", "cvc5::Datatype::~Datatype"], [3, 1, 1, "_CPPv4N4cvc519DatatypeConstructorE", "cvc5::DatatypeConstructor"], [3, 2, 1, "_CPPv4N4cvc519DatatypeConstructor19DatatypeConstructorEv", "cvc5::DatatypeConstructor::DatatypeConstructor"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor5beginEv", "cvc5::DatatypeConstructor::begin"], [3, 1, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iteratorE", "cvc5::DatatypeConstructor::const_iterator"], [3, 2, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iterator14const_iteratorEv", "cvc5::DatatypeConstructor::const_iterator::const_iterator"], [3, 4, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iterator15difference_typeE", "cvc5::DatatypeConstructor::const_iterator::difference_type"], [3, 4, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iterator17iterator_categoryE", "cvc5::DatatypeConstructor::const_iterator::iterator_category"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor14const_iteratorneERK14const_iterator", "cvc5::DatatypeConstructor::const_iterator::operator!="], [3, 3, 1, "_CPPv4NK4cvc519DatatypeConstructor14const_iteratorneERK14const_iterator", "cvc5::DatatypeConstructor::const_iterator::operator!=::it"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor14const_iteratormlEv", "cvc5::DatatypeConstructor::const_iterator::operator*"], [3, 2, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iteratorppEi", "cvc5::DatatypeConstructor::const_iterator::operator++"], [3, 2, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iteratorppEv", "cvc5::DatatypeConstructor::const_iterator::operator++"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor14const_iteratorptEv", "cvc5::DatatypeConstructor::const_iterator::operator-&gt;"], [3, 2, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iteratoraSERK14const_iterator", "cvc5::DatatypeConstructor::const_iterator::operator="], [3, 3, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iteratoraSERK14const_iterator", "cvc5::DatatypeConstructor::const_iterator::operator=::it"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor14const_iteratoreqERK14const_iterator", "cvc5::DatatypeConstructor::const_iterator::operator=="], [3, 3, 1, "_CPPv4NK4cvc519DatatypeConstructor14const_iteratoreqERK14const_iterator", "cvc5::DatatypeConstructor::const_iterator::operator==::it"], [3, 4, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iterator7pointerE", "cvc5::DatatypeConstructor::const_iterator::pointer"], [3, 4, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iterator9referenceE", "cvc5::DatatypeConstructor::const_iterator::reference"], [3, 4, 1, "_CPPv4N4cvc519DatatypeConstructor14const_iterator10value_typeE", "cvc5::DatatypeConstructor::const_iterator::value_type"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor3endEv", "cvc5::DatatypeConstructor::end"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor19getInstantiatedTermERK4Sort", "cvc5::DatatypeConstructor::getInstantiatedTerm"], [3, 3, 1, "_CPPv4NK4cvc519DatatypeConstructor19getInstantiatedTermERK4Sort", "cvc5::DatatypeConstructor::getInstantiatedTerm::retSort"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor7getNameEv", "cvc5::DatatypeConstructor::getName"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor15getNumSelectorsEv", "cvc5::DatatypeConstructor::getNumSelectors"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor11getSelectorERKNSt6stringE", "cvc5::DatatypeConstructor::getSelector"], [3, 3, 1, "_CPPv4NK4cvc519DatatypeConstructor11getSelectorERKNSt6stringE", "cvc5::DatatypeConstructor::getSelector::name"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor7getTermEv", "cvc5::DatatypeConstructor::getTerm"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor13getTesterTermEv", "cvc5::DatatypeConstructor::getTesterTerm"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor6isNullEv", "cvc5::DatatypeConstructor::isNull"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructorixE6size_t", "cvc5::DatatypeConstructor::operator[]"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructorixERKNSt6stringE", "cvc5::DatatypeConstructor::operator[]"], [3, 3, 1, "_CPPv4NK4cvc519DatatypeConstructorixE6size_t", "cvc5::DatatypeConstructor::operator[]::index"], [3, 3, 1, "_CPPv4NK4cvc519DatatypeConstructorixERKNSt6stringE", "cvc5::DatatypeConstructor::operator[]::name"], [3, 2, 1, "_CPPv4NK4cvc519DatatypeConstructor8toStringEv", "cvc5::DatatypeConstructor::toString"], [3, 2, 1, "_CPPv4N4cvc519DatatypeConstructorD0Ev", "cvc5::DatatypeConstructor::~DatatypeConstructor"], [4, 1, 1, "_CPPv4N4cvc523DatatypeConstructorDeclE", "cvc5::DatatypeConstructorDecl"], [4, 2, 1, "_CPPv4N4cvc523DatatypeConstructorDecl23DatatypeConstructorDeclEv", "cvc5::DatatypeConstructorDecl::DatatypeConstructorDecl"], [4, 2, 1, "_CPPv4N4cvc523DatatypeConstructorDecl11addSelectorERKNSt6stringERK4Sort", "cvc5::DatatypeConstructorDecl::addSelector"], [4, 3, 1, "_CPPv4N4cvc523DatatypeConstructorDecl11addSelectorERKNSt6stringERK4Sort", "cvc5::DatatypeConstructorDecl::addSelector::name"], [4, 3, 1, "_CPPv4N4cvc523DatatypeConstructorDecl11addSelectorERKNSt6stringERK4Sort", "cvc5::DatatypeConstructorDecl::addSelector::sort"], [4, 2, 1, "_CPPv4N4cvc523DatatypeConstructorDecl15addSelectorSelfERKNSt6stringE", "cvc5::DatatypeConstructorDecl::addSelectorSelf"], [4, 3, 1, "_CPPv4N4cvc523DatatypeConstructorDecl15addSelectorSelfERKNSt6stringE", "cvc5::DatatypeConstructorDecl::addSelectorSelf::name"], [4, 2, 1, "_CPPv4N4cvc523DatatypeConstructorDecl21addSelectorUnresolvedERKNSt6stringERKNSt6stringE", "cvc5::DatatypeConstructorDecl::addSelectorUnresolved"], [4, 3, 1, "_CPPv4N4cvc523DatatypeConstructorDecl21addSelectorUnresolvedERKNSt6stringERKNSt6stringE", "cvc5::DatatypeConstructorDecl::addSelectorUnresolved::name"], [4, 3, 1, "_CPPv4N4cvc523DatatypeConstructorDecl21addSelectorUnresolvedERKNSt6stringERKNSt6stringE", "cvc5::DatatypeConstructorDecl::addSelectorUnresolved::unresDataypeName"], [4, 2, 1, "_CPPv4NK4cvc523DatatypeConstructorDecl6isNullEv", "cvc5::DatatypeConstructorDecl::isNull"], [4, 2, 1, "_CPPv4NK4cvc523DatatypeConstructorDecl8toStringEv", "cvc5::DatatypeConstructorDecl::toString"], [4, 2, 1, "_CPPv4N4cvc523DatatypeConstructorDeclD0Ev", "cvc5::DatatypeConstructorDecl::~DatatypeConstructorDecl"], [5, 1, 1, "_CPPv4N4cvc512DatatypeDeclE", "cvc5::DatatypeDecl"], [5, 2, 1, "_CPPv4N4cvc512DatatypeDecl12DatatypeDeclEv", "cvc5::DatatypeDecl::DatatypeDecl"], [5, 2, 1, "_CPPv4N4cvc512DatatypeDecl14addConstructorERK23DatatypeConstructorDecl", "cvc5::DatatypeDecl::addConstructor"], [5, 3, 1, "_CPPv4N4cvc512DatatypeDecl14addConstructorERK23DatatypeConstructorDecl", "cvc5::DatatypeDecl::addConstructor::ctor"], [5, 2, 1, "_CPPv4NK4cvc512DatatypeDecl7getNameEv", "cvc5::DatatypeDecl::getName"], [5, 2, 1, "_CPPv4NK4cvc512DatatypeDecl18getNumConstructorsEv", "cvc5::DatatypeDecl::getNumConstructors"], [5, 2, 1, "_CPPv4NK4cvc512DatatypeDecl6isNullEv", "cvc5::DatatypeDecl::isNull"], [5, 2, 1, "_CPPv4NK4cvc512DatatypeDecl12isParametricEv", "cvc5::DatatypeDecl::isParametric"], [5, 2, 1, "_CPPv4NK4cvc512DatatypeDecl10isResolvedEv", "cvc5::DatatypeDecl::isResolved"], [5, 2, 1, "_CPPv4NK4cvc512DatatypeDecl8toStringEv", "cvc5::DatatypeDecl::toString"], [5, 2, 1, "_CPPv4N4cvc512DatatypeDeclD0Ev", "cvc5::DatatypeDecl::~DatatypeDecl"], [6, 1, 1, "_CPPv4N4cvc516DatatypeSelectorE", "cvc5::DatatypeSelector"], [6, 2, 1, "_CPPv4N4cvc516DatatypeSelector16DatatypeSelectorEv", "cvc5::DatatypeSelector::DatatypeSelector"], [6, 2, 1, "_CPPv4NK4cvc516DatatypeSelector15getCodomainSortEv", "cvc5::DatatypeSelector::getCodomainSort"], [6, 2, 1, "_CPPv4NK4cvc516DatatypeSelector7getNameEv", "cvc5::DatatypeSelector::getName"], [6, 2, 1, "_CPPv4NK4cvc516DatatypeSelector7getTermEv", "cvc5::DatatypeSelector::getTerm"], [6, 2, 1, "_CPPv4NK4cvc516DatatypeSelector14getUpdaterTermEv", "cvc5::DatatypeSelector::getUpdaterTerm"], [6, 2, 1, "_CPPv4NK4cvc516DatatypeSelector6isNullEv", "cvc5::DatatypeSelector::isNull"], [6, 2, 1, "_CPPv4NK4cvc516DatatypeSelector8toStringEv", "cvc5::DatatypeSelector::toString"], [6, 2, 1, "_CPPv4N4cvc516DatatypeSelectorD0Ev", "cvc5::DatatypeSelector::~DatatypeSelector"], [7, 1, 1, "_CPPv4N4cvc513DriverOptionsE", "cvc5::DriverOptions"], [7, 2, 1, "_CPPv4NK4cvc513DriverOptions3errEv", "cvc5::DriverOptions::err"], [7, 2, 1, "_CPPv4NK4cvc513DriverOptions2inEv", "cvc5::DriverOptions::in"], [7, 2, 1, "_CPPv4NK4cvc513DriverOptions3outEv", "cvc5::DriverOptions::out"], [10, 0, 1, "_CPPv4N4cvc54Kind5EQUALE", "cvc5::EQUAL"], [10, 0, 1, "_CPPv4N4cvc54Kind8EQ_RANGEE", "cvc5::EQ_RANGE"], [10, 0, 1, "_CPPv4N4cvc54Kind6EXISTSE", "cvc5::EXISTS"], [10, 0, 1, "_CPPv4N4cvc54Kind11EXPONENTIALE", "cvc5::EXPONENTIAL"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_ABSE", "cvc5::FLOATINGPOINT_ABS"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_ADDE", "cvc5::FLOATINGPOINT_ADD"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_DIVE", "cvc5::FLOATINGPOINT_DIV"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_EQE", "cvc5::FLOATINGPOINT_EQ"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_FMAE", "cvc5::FLOATINGPOINT_FMA"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_FPE", "cvc5::FLOATINGPOINT_FP"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_GEQE", "cvc5::FLOATINGPOINT_GEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_GTE", "cvc5::FLOATINGPOINT_GT"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_INFE", "cvc5::FLOATINGPOINT_IS_INF"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_NANE", "cvc5::FLOATINGPOINT_IS_NAN"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_NEGE", "cvc5::FLOATINGPOINT_IS_NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind23FLOATINGPOINT_IS_NORMALE", "cvc5::FLOATINGPOINT_IS_NORMAL"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_POSE", "cvc5::FLOATINGPOINT_IS_POS"], [10, 0, 1, "_CPPv4N4cvc54Kind26FLOATINGPOINT_IS_SUBNORMALE", "cvc5::FLOATINGPOINT_IS_SUBNORMAL"], [10, 0, 1, "_CPPv4N4cvc54Kind21FLOATINGPOINT_IS_ZEROE", "cvc5::FLOATINGPOINT_IS_ZERO"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_LEQE", "cvc5::FLOATINGPOINT_LEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_LTE", "cvc5::FLOATINGPOINT_LT"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_MAXE", "cvc5::FLOATINGPOINT_MAX"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_MINE", "cvc5::FLOATINGPOINT_MIN"], [10, 0, 1, "_CPPv4N4cvc54Kind18FLOATINGPOINT_MULTE", "cvc5::FLOATINGPOINT_MULT"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_NEGE", "cvc5::FLOATINGPOINT_NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_REME", "cvc5::FLOATINGPOINT_REM"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_RTIE", "cvc5::FLOATINGPOINT_RTI"], [10, 0, 1, "_CPPv4N4cvc54Kind18FLOATINGPOINT_SQRTE", "cvc5::FLOATINGPOINT_SQRT"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_SUBE", "cvc5::FLOATINGPOINT_SUB"], [10, 0, 1, "_CPPv4N4cvc54Kind27FLOATINGPOINT_TO_FP_FROM_FPE", "cvc5::FLOATINGPOINT_TO_FP_FROM_FP"], [10, 0, 1, "_CPPv4N4cvc54Kind32FLOATINGPOINT_TO_FP_FROM_IEEE_BVE", "cvc5::FLOATINGPOINT_TO_FP_FROM_IEEE_BV"], [10, 0, 1, "_CPPv4N4cvc54Kind29FLOATINGPOINT_TO_FP_FROM_REALE", "cvc5::FLOATINGPOINT_TO_FP_FROM_REAL"], [10, 0, 1, "_CPPv4N4cvc54Kind28FLOATINGPOINT_TO_FP_FROM_SBVE", "cvc5::FLOATINGPOINT_TO_FP_FROM_SBV"], [10, 0, 1, "_CPPv4N4cvc54Kind28FLOATINGPOINT_TO_FP_FROM_UBVE", "cvc5::FLOATINGPOINT_TO_FP_FROM_UBV"], [10, 0, 1, "_CPPv4N4cvc54Kind21FLOATINGPOINT_TO_REALE", "cvc5::FLOATINGPOINT_TO_REAL"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_TO_SBVE", "cvc5::FLOATINGPOINT_TO_SBV"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_TO_UBVE", "cvc5::FLOATINGPOINT_TO_UBV"], [10, 0, 1, "_CPPv4N4cvc54Kind6FORALLE", "cvc5::FORALL"], [10, 0, 1, "_CPPv4N4cvc54Kind3GEQE", "cvc5::GEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind2GTE", "cvc5::GT"], [9, 1, 1, "_CPPv4N4cvc57GrammarE", "cvc5::Grammar"], [9, 2, 1, "_CPPv4N4cvc57Grammar7GrammarEv", "cvc5::Grammar::Grammar"], [9, 2, 1, "_CPPv4N4cvc57Grammar14addAnyConstantERK4Term", "cvc5::Grammar::addAnyConstant"], [9, 3, 1, "_CPPv4N4cvc57Grammar14addAnyConstantERK4Term", "cvc5::Grammar::addAnyConstant::ntSymbol"], [9, 2, 1, "_CPPv4N4cvc57Grammar14addAnyVariableERK4Term", "cvc5::Grammar::addAnyVariable"], [9, 3, 1, "_CPPv4N4cvc57Grammar14addAnyVariableERK4Term", "cvc5::Grammar::addAnyVariable::ntSymbol"], [9, 2, 1, "_CPPv4N4cvc57Grammar7addRuleERK4TermRK4Term", "cvc5::Grammar::addRule"], [9, 3, 1, "_CPPv4N4cvc57Grammar7addRuleERK4TermRK4Term", "cvc5::Grammar::addRule::ntSymbol"], [9, 3, 1, "_CPPv4N4cvc57Grammar7addRuleERK4TermRK4Term", "cvc5::Grammar::addRule::rule"], [9, 2, 1, "_CPPv4N4cvc57Grammar8addRulesERK4TermRKNSt6vectorI4TermEE", "cvc5::Grammar::addRules"], [9, 3, 1, "_CPPv4N4cvc57Grammar8addRulesERK4TermRKNSt6vectorI4TermEE", "cvc5::Grammar::addRules::ntSymbol"], [9, 3, 1, "_CPPv4N4cvc57Grammar8addRulesERK4TermRKNSt6vectorI4TermEE", "cvc5::Grammar::addRules::rules"], [9, 2, 1, "_CPPv4NK4cvc57Grammar8toStringEv", "cvc5::Grammar::toString"], [10, 0, 1, "_CPPv4N4cvc54Kind8HO_APPLYE", "cvc5::HO_APPLY"], [10, 0, 1, "_CPPv4N4cvc54Kind4IANDE", "cvc5::IAND"], [10, 0, 1, "_CPPv4N4cvc54Kind7IMPLIESE", "cvc5::IMPLIES"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation10INCOMPLETEE", "cvc5::INCOMPLETE"], [10, 0, 1, "_CPPv4N4cvc54Kind16INST_ADD_TO_POOLE", "cvc5::INST_ADD_TO_POOL"], [10, 0, 1, "_CPPv4N4cvc54Kind14INST_ATTRIBUTEE", "cvc5::INST_ATTRIBUTE"], [10, 0, 1, "_CPPv4N4cvc54Kind15INST_NO_PATTERNE", "cvc5::INST_NO_PATTERN"], [10, 0, 1, "_CPPv4N4cvc54Kind12INST_PATTERNE", "cvc5::INST_PATTERN"], [10, 0, 1, "_CPPv4N4cvc54Kind17INST_PATTERN_LISTE", "cvc5::INST_PATTERN_LIST"], [10, 0, 1, "_CPPv4N4cvc54Kind9INST_POOLE", "cvc5::INST_POOL"], [10, 0, 1, "_CPPv4N4cvc54Kind13INTERNAL_KINDE", "cvc5::INTERNAL_KIND"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation11INTERRUPTEDE", "cvc5::INTERRUPTED"], [10, 0, 1, "_CPPv4N4cvc54Kind13INTS_DIVISIONE", "cvc5::INTS_DIVISION"], [10, 0, 1, "_CPPv4N4cvc54Kind12INTS_MODULUSE", "cvc5::INTS_MODULUS"], [10, 0, 1, "_CPPv4N4cvc54Kind16INT_TO_BITVECTORE", "cvc5::INT_TO_BITVECTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind10IS_INTEGERE", "cvc5::IS_INTEGER"], [10, 0, 1, "_CPPv4N4cvc54Kind3ITEE", "cvc5::ITE"], [10, 5, 1, "_CPPv4N4cvc54KindE", "cvc5::Kind"], [10, 0, 1, "_CPPv4N4cvc54Kind3ABSE", "cvc5::Kind::ABS"], [10, 0, 1, "_CPPv4N4cvc54Kind3ADDE", "cvc5::Kind::ADD"], [10, 0, 1, "_CPPv4N4cvc54Kind3ANDE", "cvc5::Kind::AND"], [10, 0, 1, "_CPPv4N4cvc54Kind17APPLY_CONSTRUCTORE", "cvc5::Kind::APPLY_CONSTRUCTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind14APPLY_SELECTORE", "cvc5::Kind::APPLY_SELECTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind12APPLY_TESTERE", "cvc5::Kind::APPLY_TESTER"], [10, 0, 1, "_CPPv4N4cvc54Kind8APPLY_UFE", "cvc5::Kind::APPLY_UF"], [10, 0, 1, "_CPPv4N4cvc54Kind13APPLY_UPDATERE", "cvc5::Kind::APPLY_UPDATER"], [10, 0, 1, "_CPPv4N4cvc54Kind11ARCCOSECANTE", "cvc5::Kind::ARCCOSECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind9ARCCOSINEE", "cvc5::Kind::ARCCOSINE"], [10, 0, 1, "_CPPv4N4cvc54Kind12ARCCOTANGENTE", "cvc5::Kind::ARCCOTANGENT"], [10, 0, 1, "_CPPv4N4cvc54Kind9ARCSECANTE", "cvc5::Kind::ARCSECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind7ARCSINEE", "cvc5::Kind::ARCSINE"], [10, 0, 1, "_CPPv4N4cvc54Kind10ARCTANGENTE", "cvc5::Kind::ARCTANGENT"], [10, 0, 1, "_CPPv4N4cvc54Kind8BAG_CARDE", "cvc5::Kind::BAG_CARD"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_CHOOSEE", "cvc5::Kind::BAG_CHOOSE"], [10, 0, 1, "_CPPv4N4cvc54Kind9BAG_COUNTE", "cvc5::Kind::BAG_COUNT"], [10, 0, 1, "_CPPv4N4cvc54Kind21BAG_DIFFERENCE_REMOVEE", "cvc5::Kind::BAG_DIFFERENCE_REMOVE"], [10, 0, 1, "_CPPv4N4cvc54Kind23BAG_DIFFERENCE_SUBTRACTE", "cvc5::Kind::BAG_DIFFERENCE_SUBTRACT"], [10, 0, 1, "_CPPv4N4cvc54Kind21BAG_DUPLICATE_REMOVALE", "cvc5::Kind::BAG_DUPLICATE_REMOVAL"], [10, 0, 1, "_CPPv4N4cvc54Kind9BAG_EMPTYE", "cvc5::Kind::BAG_EMPTY"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_FILTERE", "cvc5::Kind::BAG_FILTER"], [10, 0, 1, "_CPPv4N4cvc54Kind8BAG_FOLDE", "cvc5::Kind::BAG_FOLD"], [10, 0, 1, "_CPPv4N4cvc54Kind12BAG_FROM_SETE", "cvc5::Kind::BAG_FROM_SET"], [10, 0, 1, "_CPPv4N4cvc54Kind13BAG_INTER_MINE", "cvc5::Kind::BAG_INTER_MIN"], [10, 0, 1, "_CPPv4N4cvc54Kind16BAG_IS_SINGLETONE", "cvc5::Kind::BAG_IS_SINGLETON"], [10, 0, 1, "_CPPv4N4cvc54Kind8BAG_MAKEE", "cvc5::Kind::BAG_MAKE"], [10, 0, 1, "_CPPv4N4cvc54Kind7BAG_MAPE", "cvc5::Kind::BAG_MAP"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_MEMBERE", "cvc5::Kind::BAG_MEMBER"], [10, 0, 1, "_CPPv4N4cvc54Kind13BAG_PARTITIONE", "cvc5::Kind::BAG_PARTITION"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_SUBBAGE", "cvc5::Kind::BAG_SUBBAG"], [10, 0, 1, "_CPPv4N4cvc54Kind10BAG_TO_SETE", "cvc5::Kind::BAG_TO_SET"], [10, 0, 1, "_CPPv4N4cvc54Kind18BAG_UNION_DISJOINTE", "cvc5::Kind::BAG_UNION_DISJOINT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BAG_UNION_MAXE", "cvc5::Kind::BAG_UNION_MAX"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ADDE", "cvc5::Kind::BITVECTOR_ADD"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ANDE", "cvc5::Kind::BITVECTOR_AND"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_ASHRE", "cvc5::Kind::BITVECTOR_ASHR"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_COMPE", "cvc5::Kind::BITVECTOR_COMP"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_CONCATE", "cvc5::Kind::BITVECTOR_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind17BITVECTOR_EXTRACTE", "cvc5::Kind::BITVECTOR_EXTRACT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ITEE", "cvc5::Kind::BITVECTOR_ITE"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_LSHRE", "cvc5::Kind::BITVECTOR_LSHR"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_MULTE", "cvc5::Kind::BITVECTOR_MULT"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_NANDE", "cvc5::Kind::BITVECTOR_NAND"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_NEGE", "cvc5::Kind::BITVECTOR_NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_NORE", "cvc5::Kind::BITVECTOR_NOR"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_NOTE", "cvc5::Kind::BITVECTOR_NOT"], [10, 0, 1, "_CPPv4N4cvc54Kind12BITVECTOR_ORE", "cvc5::Kind::BITVECTOR_OR"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_REDANDE", "cvc5::Kind::BITVECTOR_REDAND"], [10, 0, 1, "_CPPv4N4cvc54Kind15BITVECTOR_REDORE", "cvc5::Kind::BITVECTOR_REDOR"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_REPEATE", "cvc5::Kind::BITVECTOR_REPEAT"], [10, 0, 1, "_CPPv4N4cvc54Kind21BITVECTOR_ROTATE_LEFTE", "cvc5::Kind::BITVECTOR_ROTATE_LEFT"], [10, 0, 1, "_CPPv4N4cvc54Kind22BITVECTOR_ROTATE_RIGHTE", "cvc5::Kind::BITVECTOR_ROTATE_RIGHT"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_SDIVE", "cvc5::Kind::BITVECTOR_SDIV"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SGEE", "cvc5::Kind::BITVECTOR_SGE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SGTE", "cvc5::Kind::BITVECTOR_SGT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SHLE", "cvc5::Kind::BITVECTOR_SHL"], [10, 0, 1, "_CPPv4N4cvc54Kind21BITVECTOR_SIGN_EXTENDE", "cvc5::Kind::BITVECTOR_SIGN_EXTEND"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SLEE", "cvc5::Kind::BITVECTOR_SLE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SLTE", "cvc5::Kind::BITVECTOR_SLT"], [10, 0, 1, "_CPPv4N4cvc54Kind15BITVECTOR_SLTBVE", "cvc5::Kind::BITVECTOR_SLTBV"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_SMODE", "cvc5::Kind::BITVECTOR_SMOD"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_SREME", "cvc5::Kind::BITVECTOR_SREM"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_SUBE", "cvc5::Kind::BITVECTOR_SUB"], [10, 0, 1, "_CPPv4N4cvc54Kind16BITVECTOR_TO_NATE", "cvc5::Kind::BITVECTOR_TO_NAT"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_UDIVE", "cvc5::Kind::BITVECTOR_UDIV"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_UGEE", "cvc5::Kind::BITVECTOR_UGE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_UGTE", "cvc5::Kind::BITVECTOR_UGT"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ULEE", "cvc5::Kind::BITVECTOR_ULE"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_ULTE", "cvc5::Kind::BITVECTOR_ULT"], [10, 0, 1, "_CPPv4N4cvc54Kind15BITVECTOR_ULTBVE", "cvc5::Kind::BITVECTOR_ULTBV"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_UREME", "cvc5::Kind::BITVECTOR_UREM"], [10, 0, 1, "_CPPv4N4cvc54Kind14BITVECTOR_XNORE", "cvc5::Kind::BITVECTOR_XNOR"], [10, 0, 1, "_CPPv4N4cvc54Kind13BITVECTOR_XORE", "cvc5::Kind::BITVECTOR_XOR"], [10, 0, 1, "_CPPv4N4cvc54Kind21BITVECTOR_ZERO_EXTENDE", "cvc5::Kind::BITVECTOR_ZERO_EXTEND"], [10, 0, 1, "_CPPv4N4cvc54Kind22CARDINALITY_CONSTRAINTE", "cvc5::Kind::CARDINALITY_CONSTRAINT"], [10, 0, 1, "_CPPv4N4cvc54Kind8CONSTANTE", "cvc5::Kind::CONSTANT"], [10, 0, 1, "_CPPv4N4cvc54Kind11CONST_ARRAYE", "cvc5::Kind::CONST_ARRAY"], [10, 0, 1, "_CPPv4N4cvc54Kind15CONST_BITVECTORE", "cvc5::Kind::CONST_BITVECTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind13CONST_BOOLEANE", "cvc5::Kind::CONST_BOOLEAN"], [10, 0, 1, "_CPPv4N4cvc54Kind19CONST_FLOATINGPOINTE", "cvc5::Kind::CONST_FLOATINGPOINT"], [10, 0, 1, "_CPPv4N4cvc54Kind13CONST_INTEGERE", "cvc5::Kind::CONST_INTEGER"], [10, 0, 1, "_CPPv4N4cvc54Kind14CONST_RATIONALE", "cvc5::Kind::CONST_RATIONAL"], [10, 0, 1, "_CPPv4N4cvc54Kind18CONST_ROUNDINGMODEE", "cvc5::Kind::CONST_ROUNDINGMODE"], [10, 0, 1, "_CPPv4N4cvc54Kind14CONST_SEQUENCEE", "cvc5::Kind::CONST_SEQUENCE"], [10, 0, 1, "_CPPv4N4cvc54Kind12CONST_STRINGE", "cvc5::Kind::CONST_STRING"], [10, 0, 1, "_CPPv4N4cvc54Kind8COSECANTE", "cvc5::Kind::COSECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind6COSINEE", "cvc5::Kind::COSINE"], [10, 0, 1, "_CPPv4N4cvc54Kind9COTANGENTE", "cvc5::Kind::COTANGENT"], [10, 0, 1, "_CPPv4N4cvc54Kind8DISTINCTE", "cvc5::Kind::DISTINCT"], [10, 0, 1, "_CPPv4N4cvc54Kind9DIVISIBLEE", "cvc5::Kind::DIVISIBLE"], [10, 0, 1, "_CPPv4N4cvc54Kind8DIVISIONE", "cvc5::Kind::DIVISION"], [10, 0, 1, "_CPPv4N4cvc54Kind5EQUALE", "cvc5::Kind::EQUAL"], [10, 0, 1, "_CPPv4N4cvc54Kind8EQ_RANGEE", "cvc5::Kind::EQ_RANGE"], [10, 0, 1, "_CPPv4N4cvc54Kind6EXISTSE", "cvc5::Kind::EXISTS"], [10, 0, 1, "_CPPv4N4cvc54Kind11EXPONENTIALE", "cvc5::Kind::EXPONENTIAL"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_ABSE", "cvc5::Kind::FLOATINGPOINT_ABS"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_ADDE", "cvc5::Kind::FLOATINGPOINT_ADD"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_DIVE", "cvc5::Kind::FLOATINGPOINT_DIV"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_EQE", "cvc5::Kind::FLOATINGPOINT_EQ"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_FMAE", "cvc5::Kind::FLOATINGPOINT_FMA"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_FPE", "cvc5::Kind::FLOATINGPOINT_FP"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_GEQE", "cvc5::Kind::FLOATINGPOINT_GEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_GTE", "cvc5::Kind::FLOATINGPOINT_GT"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_INFE", "cvc5::Kind::FLOATINGPOINT_IS_INF"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_NANE", "cvc5::Kind::FLOATINGPOINT_IS_NAN"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_NEGE", "cvc5::Kind::FLOATINGPOINT_IS_NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind23FLOATINGPOINT_IS_NORMALE", "cvc5::Kind::FLOATINGPOINT_IS_NORMAL"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_IS_POSE", "cvc5::Kind::FLOATINGPOINT_IS_POS"], [10, 0, 1, "_CPPv4N4cvc54Kind26FLOATINGPOINT_IS_SUBNORMALE", "cvc5::Kind::FLOATINGPOINT_IS_SUBNORMAL"], [10, 0, 1, "_CPPv4N4cvc54Kind21FLOATINGPOINT_IS_ZEROE", "cvc5::Kind::FLOATINGPOINT_IS_ZERO"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_LEQE", "cvc5::Kind::FLOATINGPOINT_LEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind16FLOATINGPOINT_LTE", "cvc5::Kind::FLOATINGPOINT_LT"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_MAXE", "cvc5::Kind::FLOATINGPOINT_MAX"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_MINE", "cvc5::Kind::FLOATINGPOINT_MIN"], [10, 0, 1, "_CPPv4N4cvc54Kind18FLOATINGPOINT_MULTE", "cvc5::Kind::FLOATINGPOINT_MULT"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_NEGE", "cvc5::Kind::FLOATINGPOINT_NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_REME", "cvc5::Kind::FLOATINGPOINT_REM"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_RTIE", "cvc5::Kind::FLOATINGPOINT_RTI"], [10, 0, 1, "_CPPv4N4cvc54Kind18FLOATINGPOINT_SQRTE", "cvc5::Kind::FLOATINGPOINT_SQRT"], [10, 0, 1, "_CPPv4N4cvc54Kind17FLOATINGPOINT_SUBE", "cvc5::Kind::FLOATINGPOINT_SUB"], [10, 0, 1, "_CPPv4N4cvc54Kind27FLOATINGPOINT_TO_FP_FROM_FPE", "cvc5::Kind::FLOATINGPOINT_TO_FP_FROM_FP"], [10, 0, 1, "_CPPv4N4cvc54Kind32FLOATINGPOINT_TO_FP_FROM_IEEE_BVE", "cvc5::Kind::FLOATINGPOINT_TO_FP_FROM_IEEE_BV"], [10, 0, 1, "_CPPv4N4cvc54Kind29FLOATINGPOINT_TO_FP_FROM_REALE", "cvc5::Kind::FLOATINGPOINT_TO_FP_FROM_REAL"], [10, 0, 1, "_CPPv4N4cvc54Kind28FLOATINGPOINT_TO_FP_FROM_SBVE", "cvc5::Kind::FLOATINGPOINT_TO_FP_FROM_SBV"], [10, 0, 1, "_CPPv4N4cvc54Kind28FLOATINGPOINT_TO_FP_FROM_UBVE", "cvc5::Kind::FLOATINGPOINT_TO_FP_FROM_UBV"], [10, 0, 1, "_CPPv4N4cvc54Kind21FLOATINGPOINT_TO_REALE", "cvc5::Kind::FLOATINGPOINT_TO_REAL"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_TO_SBVE", "cvc5::Kind::FLOATINGPOINT_TO_SBV"], [10, 0, 1, "_CPPv4N4cvc54Kind20FLOATINGPOINT_TO_UBVE", "cvc5::Kind::FLOATINGPOINT_TO_UBV"], [10, 0, 1, "_CPPv4N4cvc54Kind6FORALLE", "cvc5::Kind::FORALL"], [10, 0, 1, "_CPPv4N4cvc54Kind3GEQE", "cvc5::Kind::GEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind2GTE", "cvc5::Kind::GT"], [10, 0, 1, "_CPPv4N4cvc54Kind8HO_APPLYE", "cvc5::Kind::HO_APPLY"], [10, 0, 1, "_CPPv4N4cvc54Kind4IANDE", "cvc5::Kind::IAND"], [10, 0, 1, "_CPPv4N4cvc54Kind7IMPLIESE", "cvc5::Kind::IMPLIES"], [10, 0, 1, "_CPPv4N4cvc54Kind16INST_ADD_TO_POOLE", "cvc5::Kind::INST_ADD_TO_POOL"], [10, 0, 1, "_CPPv4N4cvc54Kind14INST_ATTRIBUTEE", "cvc5::Kind::INST_ATTRIBUTE"], [10, 0, 1, "_CPPv4N4cvc54Kind15INST_NO_PATTERNE", "cvc5::Kind::INST_NO_PATTERN"], [10, 0, 1, "_CPPv4N4cvc54Kind12INST_PATTERNE", "cvc5::Kind::INST_PATTERN"], [10, 0, 1, "_CPPv4N4cvc54Kind17INST_PATTERN_LISTE", "cvc5::Kind::INST_PATTERN_LIST"], [10, 0, 1, "_CPPv4N4cvc54Kind9INST_POOLE", "cvc5::Kind::INST_POOL"], [10, 0, 1, "_CPPv4N4cvc54Kind13INTERNAL_KINDE", "cvc5::Kind::INTERNAL_KIND"], [10, 0, 1, "_CPPv4N4cvc54Kind13INTS_DIVISIONE", "cvc5::Kind::INTS_DIVISION"], [10, 0, 1, "_CPPv4N4cvc54Kind12INTS_MODULUSE", "cvc5::Kind::INTS_MODULUS"], [10, 0, 1, "_CPPv4N4cvc54Kind16INT_TO_BITVECTORE", "cvc5::Kind::INT_TO_BITVECTOR"], [10, 0, 1, "_CPPv4N4cvc54Kind10IS_INTEGERE", "cvc5::Kind::IS_INTEGER"], [10, 0, 1, "_CPPv4N4cvc54Kind3ITEE", "cvc5::Kind::ITE"], [10, 0, 1, "_CPPv4N4cvc54Kind6LAMBDAE", "cvc5::Kind::LAMBDA"], [10, 0, 1, "_CPPv4N4cvc54Kind9LAST_KINDE", "cvc5::Kind::LAST_KIND"], [10, 0, 1, "_CPPv4N4cvc54Kind3LEQE", "cvc5::Kind::LEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind2LTE", "cvc5::Kind::LT"], [10, 0, 1, "_CPPv4N4cvc54Kind5MATCHE", "cvc5::Kind::MATCH"], [10, 0, 1, "_CPPv4N4cvc54Kind15MATCH_BIND_CASEE", "cvc5::Kind::MATCH_BIND_CASE"], [10, 0, 1, "_CPPv4N4cvc54Kind10MATCH_CASEE", "cvc5::Kind::MATCH_CASE"], [10, 0, 1, "_CPPv4N4cvc54Kind4MULTE", "cvc5::Kind::MULT"], [10, 0, 1, "_CPPv4N4cvc54Kind3NEGE", "cvc5::Kind::NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind3NOTE", "cvc5::Kind::NOT"], [10, 0, 1, "_CPPv4N4cvc54Kind9NULL_TERME", "cvc5::Kind::NULL_TERM"], [10, 0, 1, "_CPPv4N4cvc54Kind2ORE", "cvc5::Kind::OR"], [10, 0, 1, "_CPPv4N4cvc54Kind2PIE", "cvc5::Kind::PI"], [10, 0, 1, "_CPPv4N4cvc54Kind3POWE", "cvc5::Kind::POW"], [10, 0, 1, "_CPPv4N4cvc54Kind4POW2E", "cvc5::Kind::POW2"], [10, 0, 1, "_CPPv4N4cvc54Kind10REGEXP_ALLE", "cvc5::Kind::REGEXP_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind14REGEXP_ALLCHARE", "cvc5::Kind::REGEXP_ALLCHAR"], [10, 0, 1, "_CPPv4N4cvc54Kind17REGEXP_COMPLEMENTE", "cvc5::Kind::REGEXP_COMPLEMENT"], [10, 0, 1, "_CPPv4N4cvc54Kind13REGEXP_CONCATE", "cvc5::Kind::REGEXP_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_DIFFE", "cvc5::Kind::REGEXP_DIFF"], [10, 0, 1, "_CPPv4N4cvc54Kind12REGEXP_INTERE", "cvc5::Kind::REGEXP_INTER"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_LOOPE", "cvc5::Kind::REGEXP_LOOP"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_NONEE", "cvc5::Kind::REGEXP_NONE"], [10, 0, 1, "_CPPv4N4cvc54Kind10REGEXP_OPTE", "cvc5::Kind::REGEXP_OPT"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_PLUSE", "cvc5::Kind::REGEXP_PLUS"], [10, 0, 1, "_CPPv4N4cvc54Kind12REGEXP_RANGEE", "cvc5::Kind::REGEXP_RANGE"], [10, 0, 1, "_CPPv4N4cvc54Kind13REGEXP_REPEATE", "cvc5::Kind::REGEXP_REPEAT"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_STARE", "cvc5::Kind::REGEXP_STAR"], [10, 0, 1, "_CPPv4N4cvc54Kind12REGEXP_UNIONE", "cvc5::Kind::REGEXP_UNION"], [10, 0, 1, "_CPPv4N4cvc54Kind18RELATION_AGGREGATEE", "cvc5::Kind::RELATION_AGGREGATE"], [10, 0, 1, "_CPPv4N4cvc54Kind14RELATION_GROUPE", "cvc5::Kind::RELATION_GROUP"], [10, 0, 1, "_CPPv4N4cvc54Kind13RELATION_IDENE", "cvc5::Kind::RELATION_IDEN"], [10, 0, 1, "_CPPv4N4cvc54Kind13RELATION_JOINE", "cvc5::Kind::RELATION_JOIN"], [10, 0, 1, "_CPPv4N4cvc54Kind19RELATION_JOIN_IMAGEE", "cvc5::Kind::RELATION_JOIN_IMAGE"], [10, 0, 1, "_CPPv4N4cvc54Kind16RELATION_PRODUCTE", "cvc5::Kind::RELATION_PRODUCT"], [10, 0, 1, "_CPPv4N4cvc54Kind16RELATION_PROJECTE", "cvc5::Kind::RELATION_PROJECT"], [10, 0, 1, "_CPPv4N4cvc54Kind17RELATION_TCLOSUREE", "cvc5::Kind::RELATION_TCLOSURE"], [10, 0, 1, "_CPPv4N4cvc54Kind18RELATION_TRANSPOSEE", "cvc5::Kind::RELATION_TRANSPOSE"], [10, 0, 1, "_CPPv4N4cvc54Kind6SECANTE", "cvc5::Kind::SECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind6SELECTE", "cvc5::Kind::SELECT"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEP_EMPE", "cvc5::Kind::SEP_EMP"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEP_NILE", "cvc5::Kind::SEP_NIL"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEP_PTOE", "cvc5::Kind::SEP_PTO"], [10, 0, 1, "_CPPv4N4cvc54Kind8SEP_STARE", "cvc5::Kind::SEP_STAR"], [10, 0, 1, "_CPPv4N4cvc54Kind8SEP_WANDE", "cvc5::Kind::SEP_WAND"], [10, 0, 1, "_CPPv4N4cvc54Kind6SEQ_ATE", "cvc5::Kind::SEQ_AT"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_CONCATE", "cvc5::Kind::SEQ_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind12SEQ_CONTAINSE", "cvc5::Kind::SEQ_CONTAINS"], [10, 0, 1, "_CPPv4N4cvc54Kind11SEQ_EXTRACTE", "cvc5::Kind::SEQ_EXTRACT"], [10, 0, 1, "_CPPv4N4cvc54Kind11SEQ_INDEXOFE", "cvc5::Kind::SEQ_INDEXOF"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_LENGTHE", "cvc5::Kind::SEQ_LENGTH"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEQ_NTHE", "cvc5::Kind::SEQ_NTH"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_PREFIXE", "cvc5::Kind::SEQ_PREFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind11SEQ_REPLACEE", "cvc5::Kind::SEQ_REPLACE"], [10, 0, 1, "_CPPv4N4cvc54Kind15SEQ_REPLACE_ALLE", "cvc5::Kind::SEQ_REPLACE_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEQ_REVE", "cvc5::Kind::SEQ_REV"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_SUFFIXE", "cvc5::Kind::SEQ_SUFFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind8SEQ_UNITE", "cvc5::Kind::SEQ_UNIT"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_UPDATEE", "cvc5::Kind::SEQ_UPDATE"], [10, 0, 1, "_CPPv4N4cvc54Kind8SET_CARDE", "cvc5::Kind::SET_CARD"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_CHOOSEE", "cvc5::Kind::SET_CHOOSE"], [10, 0, 1, "_CPPv4N4cvc54Kind14SET_COMPLEMENTE", "cvc5::Kind::SET_COMPLEMENT"], [10, 0, 1, "_CPPv4N4cvc54Kind17SET_COMPREHENSIONE", "cvc5::Kind::SET_COMPREHENSION"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_EMPTYE", "cvc5::Kind::SET_EMPTY"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_FILTERE", "cvc5::Kind::SET_FILTER"], [10, 0, 1, "_CPPv4N4cvc54Kind8SET_FOLDE", "cvc5::Kind::SET_FOLD"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_INSERTE", "cvc5::Kind::SET_INSERT"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_INTERE", "cvc5::Kind::SET_INTER"], [10, 0, 1, "_CPPv4N4cvc54Kind16SET_IS_SINGLETONE", "cvc5::Kind::SET_IS_SINGLETON"], [10, 0, 1, "_CPPv4N4cvc54Kind7SET_MAPE", "cvc5::Kind::SET_MAP"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_MEMBERE", "cvc5::Kind::SET_MEMBER"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_MINUSE", "cvc5::Kind::SET_MINUS"], [10, 0, 1, "_CPPv4N4cvc54Kind13SET_SINGLETONE", "cvc5::Kind::SET_SINGLETON"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_SUBSETE", "cvc5::Kind::SET_SUBSET"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_UNIONE", "cvc5::Kind::SET_UNION"], [10, 0, 1, "_CPPv4N4cvc54Kind12SET_UNIVERSEE", "cvc5::Kind::SET_UNIVERSE"], [10, 0, 1, "_CPPv4N4cvc54Kind5SEXPRE", "cvc5::Kind::SEXPR"], [10, 0, 1, "_CPPv4N4cvc54Kind4SINEE", "cvc5::Kind::SINE"], [10, 0, 1, "_CPPv4N4cvc54Kind18SKOLEM_ADD_TO_POOLE", "cvc5::Kind::SKOLEM_ADD_TO_POOL"], [10, 0, 1, "_CPPv4N4cvc54Kind4SQRTE", "cvc5::Kind::SQRT"], [10, 0, 1, "_CPPv4N4cvc54Kind5STOREE", "cvc5::Kind::STORE"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_CHARATE", "cvc5::Kind::STRING_CHARAT"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_CONCATE", "cvc5::Kind::STRING_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_CONTAINSE", "cvc5::Kind::STRING_CONTAINS"], [10, 0, 1, "_CPPv4N4cvc54Kind16STRING_FROM_CODEE", "cvc5::Kind::STRING_FROM_CODE"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_FROM_INTE", "cvc5::Kind::STRING_FROM_INT"], [10, 0, 1, "_CPPv4N4cvc54Kind14STRING_INDEXOFE", "cvc5::Kind::STRING_INDEXOF"], [10, 0, 1, "_CPPv4N4cvc54Kind17STRING_INDEXOF_REE", "cvc5::Kind::STRING_INDEXOF_RE"], [10, 0, 1, "_CPPv4N4cvc54Kind16STRING_IN_REGEXPE", "cvc5::Kind::STRING_IN_REGEXP"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_IS_DIGITE", "cvc5::Kind::STRING_IS_DIGIT"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_LENGTHE", "cvc5::Kind::STRING_LENGTH"], [10, 0, 1, "_CPPv4N4cvc54Kind10STRING_LEQE", "cvc5::Kind::STRING_LEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind9STRING_LTE", "cvc5::Kind::STRING_LT"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_PREFIXE", "cvc5::Kind::STRING_PREFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind14STRING_REPLACEE", "cvc5::Kind::STRING_REPLACE"], [10, 0, 1, "_CPPv4N4cvc54Kind18STRING_REPLACE_ALLE", "cvc5::Kind::STRING_REPLACE_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind17STRING_REPLACE_REE", "cvc5::Kind::STRING_REPLACE_RE"], [10, 0, 1, "_CPPv4N4cvc54Kind21STRING_REPLACE_RE_ALLE", "cvc5::Kind::STRING_REPLACE_RE_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind10STRING_REVE", "cvc5::Kind::STRING_REV"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_SUBSTRE", "cvc5::Kind::STRING_SUBSTR"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_SUFFIXE", "cvc5::Kind::STRING_SUFFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind14STRING_TO_CODEE", "cvc5::Kind::STRING_TO_CODE"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_TO_INTE", "cvc5::Kind::STRING_TO_INT"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_TO_LOWERE", "cvc5::Kind::STRING_TO_LOWER"], [10, 0, 1, "_CPPv4N4cvc54Kind16STRING_TO_REGEXPE", "cvc5::Kind::STRING_TO_REGEXP"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_TO_UPPERE", "cvc5::Kind::STRING_TO_UPPER"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_UPDATEE", "cvc5::Kind::STRING_UPDATE"], [10, 0, 1, "_CPPv4N4cvc54Kind3SUBE", "cvc5::Kind::SUB"], [10, 0, 1, "_CPPv4N4cvc54Kind15TABLE_AGGREGATEE", "cvc5::Kind::TABLE_AGGREGATE"], [10, 0, 1, "_CPPv4N4cvc54Kind11TABLE_GROUPE", "cvc5::Kind::TABLE_GROUP"], [10, 0, 1, "_CPPv4N4cvc54Kind10TABLE_JOINE", "cvc5::Kind::TABLE_JOIN"], [10, 0, 1, "_CPPv4N4cvc54Kind13TABLE_PRODUCTE", "cvc5::Kind::TABLE_PRODUCT"], [10, 0, 1, "_CPPv4N4cvc54Kind13TABLE_PROJECTE", "cvc5::Kind::TABLE_PROJECT"], [10, 0, 1, "_CPPv4N4cvc54Kind7TANGENTE", "cvc5::Kind::TANGENT"], [10, 0, 1, "_CPPv4N4cvc54Kind10TO_INTEGERE", "cvc5::Kind::TO_INTEGER"], [10, 0, 1, "_CPPv4N4cvc54Kind7TO_REALE", "cvc5::Kind::TO_REAL"], [10, 0, 1, "_CPPv4N4cvc54Kind13TUPLE_PROJECTE", "cvc5::Kind::TUPLE_PROJECT"], [10, 0, 1, "_CPPv4N4cvc54Kind14UNDEFINED_KINDE", "cvc5::Kind::UNDEFINED_KIND"], [10, 0, 1, "_CPPv4N4cvc54Kind24UNINTERPRETED_SORT_VALUEE", "cvc5::Kind::UNINTERPRETED_SORT_VALUE"], [10, 0, 1, "_CPPv4N4cvc54Kind8VARIABLEE", "cvc5::Kind::VARIABLE"], [10, 0, 1, "_CPPv4N4cvc54Kind13VARIABLE_LISTE", "cvc5::Kind::VARIABLE_LIST"], [10, 0, 1, "_CPPv4N4cvc54Kind7WITNESSE", "cvc5::Kind::WITNESS"], [10, 0, 1, "_CPPv4N4cvc54Kind3XORE", "cvc5::Kind::XOR"], [10, 0, 1, "_CPPv4N4cvc54Kind6LAMBDAE", "cvc5::LAMBDA"], [10, 0, 1, "_CPPv4N4cvc54Kind9LAST_KINDE", "cvc5::LAST_KIND"], [10, 0, 1, "_CPPv4N4cvc54Kind3LEQE", "cvc5::LEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind2LTE", "cvc5::LT"], [10, 0, 1, "_CPPv4N4cvc54Kind5MATCHE", "cvc5::MATCH"], [10, 0, 1, "_CPPv4N4cvc54Kind15MATCH_BIND_CASEE", "cvc5::MATCH_BIND_CASE"], [10, 0, 1, "_CPPv4N4cvc54Kind10MATCH_CASEE", "cvc5::MATCH_CASE"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation6MEMOUTE", "cvc5::MEMOUT"], [10, 0, 1, "_CPPv4N4cvc54Kind4MULTE", "cvc5::MULT"], [10, 0, 1, "_CPPv4N4cvc54Kind3NEGE", "cvc5::NEG"], [10, 0, 1, "_CPPv4N4cvc54Kind3NOTE", "cvc5::NOT"], [10, 0, 1, "_CPPv4N4cvc54Kind9NULL_TERME", "cvc5::NULL_TERM"], [10, 0, 1, "_CPPv4N4cvc54Kind2ORE", "cvc5::OR"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation5OTHERE", "cvc5::OTHER"], [12, 1, 1, "_CPPv4N4cvc52OpE", "cvc5::Op"], [12, 2, 1, "_CPPv4N4cvc52Op2OpEv", "cvc5::Op::Op"], [12, 2, 1, "_CPPv4NK4cvc52Op7getKindEv", "cvc5::Op::getKind"], [12, 2, 1, "_CPPv4NK4cvc52Op13getNumIndicesEv", "cvc5::Op::getNumIndices"], [12, 2, 1, "_CPPv4NK4cvc52Op9isIndexedEv", "cvc5::Op::isIndexed"], [12, 2, 1, "_CPPv4NK4cvc52Op6isNullEv", "cvc5::Op::isNull"], [12, 2, 1, "_CPPv4NK4cvc52OpneERK2Op", "cvc5::Op::operator!="], [12, 3, 1, "_CPPv4NK4cvc52OpneERK2Op", "cvc5::Op::operator!=::t"], [12, 2, 1, "_CPPv4NK4cvc52OpeqERK2Op", "cvc5::Op::operator=="], [12, 3, 1, "_CPPv4NK4cvc52OpeqERK2Op", "cvc5::Op::operator==::t"], [12, 2, 1, "_CPPv4NK4cvc52OpixE6size_t", "cvc5::Op::operator[]"], [12, 3, 1, "_CPPv4NK4cvc52OpixE6size_t", "cvc5::Op::operator[]::i"], [12, 2, 1, "_CPPv4NK4cvc52Op8toStringEv", "cvc5::Op::toString"], [12, 2, 1, "_CPPv4N4cvc52OpD0Ev", "cvc5::Op::~Op"], [13, 1, 1, "_CPPv4N4cvc510OptionInfoE", "cvc5::OptionInfo"], [13, 1, 1, "_CPPv4N4cvc510OptionInfo8ModeInfoE", "cvc5::OptionInfo::ModeInfo"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo8ModeInfo12currentValueE", "cvc5::OptionInfo::ModeInfo::currentValue"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo8ModeInfo12defaultValueE", "cvc5::OptionInfo::ModeInfo::defaultValue"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo8ModeInfo5modesE", "cvc5::OptionInfo::ModeInfo::modes"], [13, 1, 1, "_CPPv4I0EN4cvc510OptionInfo10NumberInfoE", "cvc5::OptionInfo::NumberInfo"], [13, 7, 1, "_CPPv4I0EN4cvc510OptionInfo10NumberInfoE", "cvc5::OptionInfo::NumberInfo::T"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo10NumberInfo12currentValueE", "cvc5::OptionInfo::NumberInfo::currentValue"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo10NumberInfo12defaultValueE", "cvc5::OptionInfo::NumberInfo::defaultValue"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo10NumberInfo7maximumE", "cvc5::OptionInfo::NumberInfo::maximum"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo10NumberInfo7minimumE", "cvc5::OptionInfo::NumberInfo::minimum"], [13, 4, 1, "_CPPv4N4cvc510OptionInfo17OptionInfoVariantE", "cvc5::OptionInfo::OptionInfoVariant"], [13, 1, 1, "_CPPv4I0EN4cvc510OptionInfo9ValueInfoE", "cvc5::OptionInfo::ValueInfo"], [13, 7, 1, "_CPPv4I0EN4cvc510OptionInfo9ValueInfoE", "cvc5::OptionInfo::ValueInfo::T"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo9ValueInfo12currentValueE", "cvc5::OptionInfo::ValueInfo::currentValue"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo9ValueInfo12defaultValueE", "cvc5::OptionInfo::ValueInfo::defaultValue"], [13, 1, 1, "_CPPv4N4cvc510OptionInfo8VoidInfoE", "cvc5::OptionInfo::VoidInfo"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo7aliasesE", "cvc5::OptionInfo::aliases"], [13, 2, 1, "_CPPv4NK4cvc510OptionInfo9boolValueEv", "cvc5::OptionInfo::boolValue"], [13, 2, 1, "_CPPv4NK4cvc510OptionInfo11doubleValueEv", "cvc5::OptionInfo::doubleValue"], [13, 2, 1, "_CPPv4NK4cvc510OptionInfo8intValueEv", "cvc5::OptionInfo::intValue"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo4nameE", "cvc5::OptionInfo::name"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo9setByUserE", "cvc5::OptionInfo::setByUser"], [13, 2, 1, "_CPPv4NK4cvc510OptionInfo11stringValueEv", "cvc5::OptionInfo::stringValue"], [13, 2, 1, "_CPPv4NK4cvc510OptionInfo9uintValueEv", "cvc5::OptionInfo::uintValue"], [13, 6, 1, "_CPPv4N4cvc510OptionInfo9valueInfoE", "cvc5::OptionInfo::valueInfo"], [10, 0, 1, "_CPPv4N4cvc54Kind2PIE", "cvc5::PI"], [10, 0, 1, "_CPPv4N4cvc54Kind3POWE", "cvc5::POW"], [10, 0, 1, "_CPPv4N4cvc54Kind4POW2E", "cvc5::POW2"], [10, 0, 1, "_CPPv4N4cvc54Kind10REGEXP_ALLE", "cvc5::REGEXP_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind14REGEXP_ALLCHARE", "cvc5::REGEXP_ALLCHAR"], [10, 0, 1, "_CPPv4N4cvc54Kind17REGEXP_COMPLEMENTE", "cvc5::REGEXP_COMPLEMENT"], [10, 0, 1, "_CPPv4N4cvc54Kind13REGEXP_CONCATE", "cvc5::REGEXP_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_DIFFE", "cvc5::REGEXP_DIFF"], [10, 0, 1, "_CPPv4N4cvc54Kind12REGEXP_INTERE", "cvc5::REGEXP_INTER"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_LOOPE", "cvc5::REGEXP_LOOP"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_NONEE", "cvc5::REGEXP_NONE"], [10, 0, 1, "_CPPv4N4cvc54Kind10REGEXP_OPTE", "cvc5::REGEXP_OPT"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_PLUSE", "cvc5::REGEXP_PLUS"], [10, 0, 1, "_CPPv4N4cvc54Kind12REGEXP_RANGEE", "cvc5::REGEXP_RANGE"], [10, 0, 1, "_CPPv4N4cvc54Kind13REGEXP_REPEATE", "cvc5::REGEXP_REPEAT"], [10, 0, 1, "_CPPv4N4cvc54Kind11REGEXP_STARE", "cvc5::REGEXP_STAR"], [10, 0, 1, "_CPPv4N4cvc54Kind12REGEXP_UNIONE", "cvc5::REGEXP_UNION"], [10, 0, 1, "_CPPv4N4cvc54Kind18RELATION_AGGREGATEE", "cvc5::RELATION_AGGREGATE"], [10, 0, 1, "_CPPv4N4cvc54Kind14RELATION_GROUPE", "cvc5::RELATION_GROUP"], [10, 0, 1, "_CPPv4N4cvc54Kind13RELATION_IDENE", "cvc5::RELATION_IDEN"], [10, 0, 1, "_CPPv4N4cvc54Kind13RELATION_JOINE", "cvc5::RELATION_JOIN"], [10, 0, 1, "_CPPv4N4cvc54Kind19RELATION_JOIN_IMAGEE", "cvc5::RELATION_JOIN_IMAGE"], [10, 0, 1, "_CPPv4N4cvc54Kind16RELATION_PRODUCTE", "cvc5::RELATION_PRODUCT"], [10, 0, 1, "_CPPv4N4cvc54Kind16RELATION_PROJECTE", "cvc5::RELATION_PROJECT"], [10, 0, 1, "_CPPv4N4cvc54Kind17RELATION_TCLOSUREE", "cvc5::RELATION_TCLOSURE"], [10, 0, 1, "_CPPv4N4cvc54Kind18RELATION_TRANSPOSEE", "cvc5::RELATION_TRANSPOSE"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation19REQUIRES_FULL_CHECKE", "cvc5::REQUIRES_FULL_CHECK"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation11RESOURCEOUTE", "cvc5::RESOURCEOUT"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode26ROUND_NEAREST_TIES_TO_AWAYE", "cvc5::ROUND_NEAREST_TIES_TO_AWAY"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode26ROUND_NEAREST_TIES_TO_EVENE", "cvc5::ROUND_NEAREST_TIES_TO_EVEN"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode21ROUND_TOWARD_NEGATIVEE", "cvc5::ROUND_TOWARD_NEGATIVE"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode21ROUND_TOWARD_POSITIVEE", "cvc5::ROUND_TOWARD_POSITIVE"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode17ROUND_TOWARD_ZEROE", "cvc5::ROUND_TOWARD_ZERO"], [15, 1, 1, "_CPPv4N4cvc56ResultE", "cvc5::Result"], [15, 2, 1, "_CPPv4N4cvc56Result6ResultEv", "cvc5::Result::Result"], [15, 2, 1, "_CPPv4NK4cvc56Result21getUnknownExplanationEv", "cvc5::Result::getUnknownExplanation"], [15, 2, 1, "_CPPv4NK4cvc56Result6isNullEv", "cvc5::Result::isNull"], [15, 2, 1, "_CPPv4NK4cvc56Result5isSatEv", "cvc5::Result::isSat"], [15, 2, 1, "_CPPv4NK4cvc56Result9isUnknownEv", "cvc5::Result::isUnknown"], [15, 2, 1, "_CPPv4NK4cvc56Result7isUnsatEv", "cvc5::Result::isUnsat"], [15, 2, 1, "_CPPv4NK4cvc56ResultneERK6Result", "cvc5::Result::operator!="], [15, 3, 1, "_CPPv4NK4cvc56ResultneERK6Result", "cvc5::Result::operator!=::r"], [15, 2, 1, "_CPPv4NK4cvc56ResulteqERK6Result", "cvc5::Result::operator=="], [15, 3, 1, "_CPPv4NK4cvc56ResulteqERK6Result", "cvc5::Result::operator==::r"], [15, 2, 1, "_CPPv4NK4cvc56Result8toStringEv", "cvc5::Result::toString"], [16, 5, 1, "_CPPv4N4cvc512RoundingModeE", "cvc5::RoundingMode"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode26ROUND_NEAREST_TIES_TO_AWAYE", "cvc5::RoundingMode::ROUND_NEAREST_TIES_TO_AWAY"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode26ROUND_NEAREST_TIES_TO_EVENE", "cvc5::RoundingMode::ROUND_NEAREST_TIES_TO_EVEN"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode21ROUND_TOWARD_NEGATIVEE", "cvc5::RoundingMode::ROUND_TOWARD_NEGATIVE"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode21ROUND_TOWARD_POSITIVEE", "cvc5::RoundingMode::ROUND_TOWARD_POSITIVE"], [16, 0, 1, "_CPPv4N4cvc512RoundingMode17ROUND_TOWARD_ZEROE", "cvc5::RoundingMode::ROUND_TOWARD_ZERO"], [10, 0, 1, "_CPPv4N4cvc54Kind6SECANTE", "cvc5::SECANT"], [10, 0, 1, "_CPPv4N4cvc54Kind6SELECTE", "cvc5::SELECT"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEP_EMPE", "cvc5::SEP_EMP"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEP_NILE", "cvc5::SEP_NIL"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEP_PTOE", "cvc5::SEP_PTO"], [10, 0, 1, "_CPPv4N4cvc54Kind8SEP_STARE", "cvc5::SEP_STAR"], [10, 0, 1, "_CPPv4N4cvc54Kind8SEP_WANDE", "cvc5::SEP_WAND"], [10, 0, 1, "_CPPv4N4cvc54Kind6SEQ_ATE", "cvc5::SEQ_AT"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_CONCATE", "cvc5::SEQ_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind12SEQ_CONTAINSE", "cvc5::SEQ_CONTAINS"], [10, 0, 1, "_CPPv4N4cvc54Kind11SEQ_EXTRACTE", "cvc5::SEQ_EXTRACT"], [10, 0, 1, "_CPPv4N4cvc54Kind11SEQ_INDEXOFE", "cvc5::SEQ_INDEXOF"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_LENGTHE", "cvc5::SEQ_LENGTH"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEQ_NTHE", "cvc5::SEQ_NTH"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_PREFIXE", "cvc5::SEQ_PREFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind11SEQ_REPLACEE", "cvc5::SEQ_REPLACE"], [10, 0, 1, "_CPPv4N4cvc54Kind15SEQ_REPLACE_ALLE", "cvc5::SEQ_REPLACE_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind7SEQ_REVE", "cvc5::SEQ_REV"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_SUFFIXE", "cvc5::SEQ_SUFFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind8SEQ_UNITE", "cvc5::SEQ_UNIT"], [10, 0, 1, "_CPPv4N4cvc54Kind10SEQ_UPDATEE", "cvc5::SEQ_UPDATE"], [10, 0, 1, "_CPPv4N4cvc54Kind8SET_CARDE", "cvc5::SET_CARD"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_CHOOSEE", "cvc5::SET_CHOOSE"], [10, 0, 1, "_CPPv4N4cvc54Kind14SET_COMPLEMENTE", "cvc5::SET_COMPLEMENT"], [10, 0, 1, "_CPPv4N4cvc54Kind17SET_COMPREHENSIONE", "cvc5::SET_COMPREHENSION"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_EMPTYE", "cvc5::SET_EMPTY"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_FILTERE", "cvc5::SET_FILTER"], [10, 0, 1, "_CPPv4N4cvc54Kind8SET_FOLDE", "cvc5::SET_FOLD"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_INSERTE", "cvc5::SET_INSERT"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_INTERE", "cvc5::SET_INTER"], [10, 0, 1, "_CPPv4N4cvc54Kind16SET_IS_SINGLETONE", "cvc5::SET_IS_SINGLETON"], [10, 0, 1, "_CPPv4N4cvc54Kind7SET_MAPE", "cvc5::SET_MAP"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_MEMBERE", "cvc5::SET_MEMBER"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_MINUSE", "cvc5::SET_MINUS"], [10, 0, 1, "_CPPv4N4cvc54Kind13SET_SINGLETONE", "cvc5::SET_SINGLETON"], [10, 0, 1, "_CPPv4N4cvc54Kind10SET_SUBSETE", "cvc5::SET_SUBSET"], [10, 0, 1, "_CPPv4N4cvc54Kind9SET_UNIONE", "cvc5::SET_UNION"], [10, 0, 1, "_CPPv4N4cvc54Kind12SET_UNIVERSEE", "cvc5::SET_UNIVERSE"], [10, 0, 1, "_CPPv4N4cvc54Kind5SEXPRE", "cvc5::SEXPR"], [10, 0, 1, "_CPPv4N4cvc54Kind4SINEE", "cvc5::SINE"], [10, 0, 1, "_CPPv4N4cvc54Kind18SKOLEM_ADD_TO_POOLE", "cvc5::SKOLEM_ADD_TO_POOL"], [10, 0, 1, "_CPPv4N4cvc54Kind4SQRTE", "cvc5::SQRT"], [10, 0, 1, "_CPPv4N4cvc54Kind5STOREE", "cvc5::STORE"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_CHARATE", "cvc5::STRING_CHARAT"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_CONCATE", "cvc5::STRING_CONCAT"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_CONTAINSE", "cvc5::STRING_CONTAINS"], [10, 0, 1, "_CPPv4N4cvc54Kind16STRING_FROM_CODEE", "cvc5::STRING_FROM_CODE"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_FROM_INTE", "cvc5::STRING_FROM_INT"], [10, 0, 1, "_CPPv4N4cvc54Kind14STRING_INDEXOFE", "cvc5::STRING_INDEXOF"], [10, 0, 1, "_CPPv4N4cvc54Kind17STRING_INDEXOF_REE", "cvc5::STRING_INDEXOF_RE"], [10, 0, 1, "_CPPv4N4cvc54Kind16STRING_IN_REGEXPE", "cvc5::STRING_IN_REGEXP"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_IS_DIGITE", "cvc5::STRING_IS_DIGIT"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_LENGTHE", "cvc5::STRING_LENGTH"], [10, 0, 1, "_CPPv4N4cvc54Kind10STRING_LEQE", "cvc5::STRING_LEQ"], [10, 0, 1, "_CPPv4N4cvc54Kind9STRING_LTE", "cvc5::STRING_LT"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_PREFIXE", "cvc5::STRING_PREFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind14STRING_REPLACEE", "cvc5::STRING_REPLACE"], [10, 0, 1, "_CPPv4N4cvc54Kind18STRING_REPLACE_ALLE", "cvc5::STRING_REPLACE_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind17STRING_REPLACE_REE", "cvc5::STRING_REPLACE_RE"], [10, 0, 1, "_CPPv4N4cvc54Kind21STRING_REPLACE_RE_ALLE", "cvc5::STRING_REPLACE_RE_ALL"], [10, 0, 1, "_CPPv4N4cvc54Kind10STRING_REVE", "cvc5::STRING_REV"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_SUBSTRE", "cvc5::STRING_SUBSTR"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_SUFFIXE", "cvc5::STRING_SUFFIX"], [10, 0, 1, "_CPPv4N4cvc54Kind14STRING_TO_CODEE", "cvc5::STRING_TO_CODE"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_TO_INTE", "cvc5::STRING_TO_INT"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_TO_LOWERE", "cvc5::STRING_TO_LOWER"], [10, 0, 1, "_CPPv4N4cvc54Kind16STRING_TO_REGEXPE", "cvc5::STRING_TO_REGEXP"], [10, 0, 1, "_CPPv4N4cvc54Kind15STRING_TO_UPPERE", "cvc5::STRING_TO_UPPER"], [10, 0, 1, "_CPPv4N4cvc54Kind13STRING_UPDATEE", "cvc5::STRING_UPDATE"], [10, 0, 1, "_CPPv4N4cvc54Kind3SUBE", "cvc5::SUB"], [17, 1, 1, "_CPPv4N4cvc56SolverE", "cvc5::Solver"], [17, 2, 1, "_CPPv4N4cvc56Solver6SolverERK6Solver", "cvc5::Solver::Solver"], [17, 2, 1, "_CPPv4N4cvc56Solver6SolverEv", "cvc5::Solver::Solver"], [17, 2, 1, "_CPPv4NK4cvc56Solver14addSygusAssumeERK4Term", "cvc5::Solver::addSygusAssume"], [17, 3, 1, "_CPPv4NK4cvc56Solver14addSygusAssumeERK4Term", "cvc5::Solver::addSygusAssume::term"], [17, 2, 1, "_CPPv4NK4cvc56Solver18addSygusConstraintERK4Term", "cvc5::Solver::addSygusConstraint"], [17, 3, 1, "_CPPv4NK4cvc56Solver18addSygusConstraintERK4Term", "cvc5::Solver::addSygusConstraint::term"], [17, 2, 1, "_CPPv4NK4cvc56Solver21addSygusInvConstraintE4Term4Term4Term4Term", "cvc5::Solver::addSygusInvConstraint"], [17, 3, 1, "_CPPv4NK4cvc56Solver21addSygusInvConstraintE4Term4Term4Term4Term", "cvc5::Solver::addSygusInvConstraint::inv"], [17, 3, 1, "_CPPv4NK4cvc56Solver21addSygusInvConstraintE4Term4Term4Term4Term", "cvc5::Solver::addSygusInvConstraint::post"], [17, 3, 1, "_CPPv4NK4cvc56Solver21addSygusInvConstraintE4Term4Term4Term4Term", "cvc5::Solver::addSygusInvConstraint::pre"], [17, 3, 1, "_CPPv4NK4cvc56Solver21addSygusInvConstraintE4Term4Term4Term4Term", "cvc5::Solver::addSygusInvConstraint::trans"], [17, 2, 1, "_CPPv4NK4cvc56Solver13assertFormulaERK4Term", "cvc5::Solver::assertFormula"], [17, 3, 1, "_CPPv4NK4cvc56Solver13assertFormulaERK4Term", "cvc5::Solver::assertFormula::term"], [17, 2, 1, "_CPPv4NK4cvc56Solver10blockModelEN5modes15BlockModelsModeE", "cvc5::Solver::blockModel"], [17, 3, 1, "_CPPv4NK4cvc56Solver10blockModelEN5modes15BlockModelsModeE", "cvc5::Solver::blockModel::mode"], [17, 2, 1, "_CPPv4NK4cvc56Solver16blockModelValuesERKNSt6vectorI4TermEE", "cvc5::Solver::blockModelValues"], [17, 3, 1, "_CPPv4NK4cvc56Solver16blockModelValuesERKNSt6vectorI4TermEE", "cvc5::Solver::blockModelValues::terms"], [17, 2, 1, "_CPPv4NK4cvc56Solver8checkSatEv", "cvc5::Solver::checkSat"], [17, 2, 1, "_CPPv4NK4cvc56Solver16checkSatAssumingERK4Term", "cvc5::Solver::checkSatAssuming"], [17, 2, 1, "_CPPv4NK4cvc56Solver16checkSatAssumingERKNSt6vectorI4TermEE", "cvc5::Solver::checkSatAssuming"], [17, 3, 1, "_CPPv4NK4cvc56Solver16checkSatAssumingERK4Term", "cvc5::Solver::checkSatAssuming::assumption"], [17, 3, 1, "_CPPv4NK4cvc56Solver16checkSatAssumingERKNSt6vectorI4TermEE", "cvc5::Solver::checkSatAssuming::assumptions"], [17, 2, 1, "_CPPv4NK4cvc56Solver10checkSynthEv", "cvc5::Solver::checkSynth"], [17, 2, 1, "_CPPv4NK4cvc56Solver14checkSynthNextEv", "cvc5::Solver::checkSynthNext"], [17, 2, 1, "_CPPv4NK4cvc56Solver15declareDatatypeERKNSt6stringERKNSt6vectorI23DatatypeConstructorDeclEE", "cvc5::Solver::declareDatatype"], [17, 3, 1, "_CPPv4NK4cvc56Solver15declareDatatypeERKNSt6stringERKNSt6vectorI23DatatypeConstructorDeclEE", "cvc5::Solver::declareDatatype::ctors"], [17, 3, 1, "_CPPv4NK4cvc56Solver15declareDatatypeERKNSt6stringERKNSt6vectorI23DatatypeConstructorDeclEE", "cvc5::Solver::declareDatatype::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver10declareFunERKNSt6stringERKNSt6vectorI4SortEERK4Sort", "cvc5::Solver::declareFun"], [17, 3, 1, "_CPPv4NK4cvc56Solver10declareFunERKNSt6stringERKNSt6vectorI4SortEERK4Sort", "cvc5::Solver::declareFun::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver10declareFunERKNSt6stringERKNSt6vectorI4SortEERK4Sort", "cvc5::Solver::declareFun::sorts"], [17, 3, 1, "_CPPv4NK4cvc56Solver10declareFunERKNSt6stringERKNSt6vectorI4SortEERK4Sort", "cvc5::Solver::declareFun::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver16declareOracleFunERKNSt6stringERKNSt6vectorI4SortEERK4SortNSt8functionIF4TermRKNSt6vectorI4TermEEEEE", "cvc5::Solver::declareOracleFun"], [17, 3, 1, "_CPPv4NK4cvc56Solver16declareOracleFunERKNSt6stringERKNSt6vectorI4SortEERK4SortNSt8functionIF4TermRKNSt6vectorI4TermEEEEE", "cvc5::Solver::declareOracleFun::fn"], [17, 3, 1, "_CPPv4NK4cvc56Solver16declareOracleFunERKNSt6stringERKNSt6vectorI4SortEERK4SortNSt8functionIF4TermRKNSt6vectorI4TermEEEEE", "cvc5::Solver::declareOracleFun::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver16declareOracleFunERKNSt6stringERKNSt6vectorI4SortEERK4SortNSt8functionIF4TermRKNSt6vectorI4TermEEEEE", "cvc5::Solver::declareOracleFun::sorts"], [17, 3, 1, "_CPPv4NK4cvc56Solver16declareOracleFunERKNSt6stringERKNSt6vectorI4SortEERK4SortNSt8functionIF4TermRKNSt6vectorI4TermEEEEE", "cvc5::Solver::declareOracleFun::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver11declarePoolERKNSt6stringERK4SortRKNSt6vectorI4TermEE", "cvc5::Solver::declarePool"], [17, 3, 1, "_CPPv4NK4cvc56Solver11declarePoolERKNSt6stringERK4SortRKNSt6vectorI4TermEE", "cvc5::Solver::declarePool::initValue"], [17, 3, 1, "_CPPv4NK4cvc56Solver11declarePoolERKNSt6stringERK4SortRKNSt6vectorI4TermEE", "cvc5::Solver::declarePool::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver11declarePoolERKNSt6stringERK4SortRKNSt6vectorI4TermEE", "cvc5::Solver::declarePool::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver14declareSepHeapERK4SortRK4Sort", "cvc5::Solver::declareSepHeap"], [17, 3, 1, "_CPPv4NK4cvc56Solver14declareSepHeapERK4SortRK4Sort", "cvc5::Solver::declareSepHeap::dataSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver14declareSepHeapERK4SortRK4Sort", "cvc5::Solver::declareSepHeap::locSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver11declareSortERKNSt6stringE8uint32_t", "cvc5::Solver::declareSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver11declareSortERKNSt6stringE8uint32_t", "cvc5::Solver::declareSort::arity"], [17, 3, 1, "_CPPv4NK4cvc56Solver11declareSortERKNSt6stringE8uint32_t", "cvc5::Solver::declareSort::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver15declareSygusVarERKNSt6stringERK4Sort", "cvc5::Solver::declareSygusVar"], [17, 3, 1, "_CPPv4NK4cvc56Solver15declareSygusVarERKNSt6stringERK4Sort", "cvc5::Solver::declareSygusVar::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver15declareSygusVarERKNSt6stringERK4Sort", "cvc5::Solver::declareSygusVar::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver9defineFunERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFun"], [17, 3, 1, "_CPPv4NK4cvc56Solver9defineFunERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFun::bound_vars"], [17, 3, 1, "_CPPv4NK4cvc56Solver9defineFunERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFun::global"], [17, 3, 1, "_CPPv4NK4cvc56Solver9defineFunERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFun::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver9defineFunERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFun::symbol"], [17, 3, 1, "_CPPv4NK4cvc56Solver9defineFunERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFun::term"], [17, 2, 1, "_CPPv4NK4cvc56Solver12defineFunRecERK4TermRKNSt6vectorI4TermEERK4Termb", "cvc5::Solver::defineFunRec"], [17, 2, 1, "_CPPv4NK4cvc56Solver12defineFunRecERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFunRec"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERK4TermRKNSt6vectorI4TermEERK4Termb", "cvc5::Solver::defineFunRec::bound_vars"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFunRec::bound_vars"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERK4TermRKNSt6vectorI4TermEERK4Termb", "cvc5::Solver::defineFunRec::fun"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERK4TermRKNSt6vectorI4TermEERK4Termb", "cvc5::Solver::defineFunRec::global"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFunRec::global"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFunRec::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFunRec::symbol"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERK4TermRKNSt6vectorI4TermEERK4Termb", "cvc5::Solver::defineFunRec::term"], [17, 3, 1, "_CPPv4NK4cvc56Solver12defineFunRecERKNSt6stringERKNSt6vectorI4TermEERK4SortRK4Termb", "cvc5::Solver::defineFunRec::term"], [17, 2, 1, "_CPPv4NK4cvc56Solver13defineFunsRecERKNSt6vectorI4TermEERKNSt6vectorINSt6vectorI4TermEEEERKNSt6vectorI4TermEEb", "cvc5::Solver::defineFunsRec"], [17, 3, 1, "_CPPv4NK4cvc56Solver13defineFunsRecERKNSt6vectorI4TermEERKNSt6vectorINSt6vectorI4TermEEEERKNSt6vectorI4TermEEb", "cvc5::Solver::defineFunsRec::bound_vars"], [17, 3, 1, "_CPPv4NK4cvc56Solver13defineFunsRecERKNSt6vectorI4TermEERKNSt6vectorINSt6vectorI4TermEEEERKNSt6vectorI4TermEEb", "cvc5::Solver::defineFunsRec::funs"], [17, 3, 1, "_CPPv4NK4cvc56Solver13defineFunsRecERKNSt6vectorI4TermEERKNSt6vectorINSt6vectorI4TermEEEERKNSt6vectorI4TermEEb", "cvc5::Solver::defineFunsRec::global"], [17, 3, 1, "_CPPv4NK4cvc56Solver13defineFunsRecERKNSt6vectorI4TermEERKNSt6vectorINSt6vectorI4TermEEEERKNSt6vectorI4TermEEb", "cvc5::Solver::defineFunsRec::terms"], [17, 2, 1, "_CPPv4NK4cvc56Solver9getAbductERK4Term", "cvc5::Solver::getAbduct"], [17, 2, 1, "_CPPv4NK4cvc56Solver9getAbductERK4TermR7Grammar", "cvc5::Solver::getAbduct"], [17, 3, 1, "_CPPv4NK4cvc56Solver9getAbductERK4Term", "cvc5::Solver::getAbduct::conj"], [17, 3, 1, "_CPPv4NK4cvc56Solver9getAbductERK4TermR7Grammar", "cvc5::Solver::getAbduct::conj"], [17, 3, 1, "_CPPv4NK4cvc56Solver9getAbductERK4TermR7Grammar", "cvc5::Solver::getAbduct::grammar"], [17, 2, 1, "_CPPv4NK4cvc56Solver13getAbductNextEv", "cvc5::Solver::getAbductNext"], [17, 2, 1, "_CPPv4NK4cvc56Solver13getAssertionsEv", "cvc5::Solver::getAssertions"], [17, 2, 1, "_CPPv4NK4cvc56Solver14getBooleanSortEv", "cvc5::Solver::getBooleanSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver13getDifficultyEv", "cvc5::Solver::getDifficulty"], [17, 2, 1, "_CPPv4NK4cvc56Solver16getDriverOptionsEv", "cvc5::Solver::getDriverOptions"], [17, 2, 1, "_CPPv4NK4cvc56Solver7getInfoERKNSt6stringE", "cvc5::Solver::getInfo"], [17, 3, 1, "_CPPv4NK4cvc56Solver7getInfoERKNSt6stringE", "cvc5::Solver::getInfo::flag"], [17, 2, 1, "_CPPv4NK4cvc56Solver17getInstantiationsEv", "cvc5::Solver::getInstantiations"], [17, 2, 1, "_CPPv4NK4cvc56Solver14getIntegerSortEv", "cvc5::Solver::getIntegerSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver14getInterpolantERK4Term", "cvc5::Solver::getInterpolant"], [17, 2, 1, "_CPPv4NK4cvc56Solver14getInterpolantERK4TermR7Grammar", "cvc5::Solver::getInterpolant"], [17, 3, 1, "_CPPv4NK4cvc56Solver14getInterpolantERK4Term", "cvc5::Solver::getInterpolant::conj"], [17, 3, 1, "_CPPv4NK4cvc56Solver14getInterpolantERK4TermR7Grammar", "cvc5::Solver::getInterpolant::conj"], [17, 3, 1, "_CPPv4NK4cvc56Solver14getInterpolantERK4TermR7Grammar", "cvc5::Solver::getInterpolant::grammar"], [17, 2, 1, "_CPPv4NK4cvc56Solver18getInterpolantNextEv", "cvc5::Solver::getInterpolantNext"], [17, 2, 1, "_CPPv4NK4cvc56Solver18getLearnedLiteralsEN5modes14LearnedLitTypeE", "cvc5::Solver::getLearnedLiterals"], [17, 3, 1, "_CPPv4NK4cvc56Solver18getLearnedLiteralsEN5modes14LearnedLitTypeE", "cvc5::Solver::getLearnedLiterals::t"], [17, 2, 1, "_CPPv4NK4cvc56Solver8getModelERKNSt6vectorI4SortEERKNSt6vectorI4TermEE", "cvc5::Solver::getModel"], [17, 3, 1, "_CPPv4NK4cvc56Solver8getModelERKNSt6vectorI4SortEERKNSt6vectorI4TermEE", "cvc5::Solver::getModel::sorts"], [17, 3, 1, "_CPPv4NK4cvc56Solver8getModelERKNSt6vectorI4SortEERKNSt6vectorI4TermEE", "cvc5::Solver::getModel::vars"], [17, 2, 1, "_CPPv4NK4cvc56Solver22getModelDomainElementsERK4Sort", "cvc5::Solver::getModelDomainElements"], [17, 3, 1, "_CPPv4NK4cvc56Solver22getModelDomainElementsERK4Sort", "cvc5::Solver::getModelDomainElements::s"], [17, 2, 1, "_CPPv4NK4cvc56Solver11getNullSortEv", "cvc5::Solver::getNullSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver9getOptionERKNSt6stringE", "cvc5::Solver::getOption"], [17, 3, 1, "_CPPv4NK4cvc56Solver9getOptionERKNSt6stringE", "cvc5::Solver::getOption::option"], [17, 2, 1, "_CPPv4NK4cvc56Solver13getOptionInfoERKNSt6stringE", "cvc5::Solver::getOptionInfo"], [17, 3, 1, "_CPPv4NK4cvc56Solver13getOptionInfoERKNSt6stringE", "cvc5::Solver::getOptionInfo::option"], [17, 2, 1, "_CPPv4NK4cvc56Solver14getOptionNamesEv", "cvc5::Solver::getOptionNames"], [17, 2, 1, "_CPPv4NK4cvc56Solver9getOutputERKNSt6stringE", "cvc5::Solver::getOutput"], [17, 3, 1, "_CPPv4NK4cvc56Solver9getOutputERKNSt6stringE", "cvc5::Solver::getOutput::tag"], [17, 2, 1, "_CPPv4NK4cvc56Solver8getProofEN5modes14ProofComponentE", "cvc5::Solver::getProof"], [17, 3, 1, "_CPPv4NK4cvc56Solver8getProofEN5modes14ProofComponentE", "cvc5::Solver::getProof::c"], [17, 2, 1, "_CPPv4NK4cvc56Solver24getQuantifierEliminationERK4Term", "cvc5::Solver::getQuantifierElimination"], [17, 3, 1, "_CPPv4NK4cvc56Solver24getQuantifierEliminationERK4Term", "cvc5::Solver::getQuantifierElimination::q"], [17, 2, 1, "_CPPv4NK4cvc56Solver32getQuantifierEliminationDisjunctERK4Term", "cvc5::Solver::getQuantifierEliminationDisjunct"], [17, 3, 1, "_CPPv4NK4cvc56Solver32getQuantifierEliminationDisjunctERK4Term", "cvc5::Solver::getQuantifierEliminationDisjunct::q"], [17, 2, 1, "_CPPv4NK4cvc56Solver11getRealSortEv", "cvc5::Solver::getRealSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver13getRegExpSortEv", "cvc5::Solver::getRegExpSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver19getRoundingModeSortEv", "cvc5::Solver::getRoundingModeSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver13getStatisticsEv", "cvc5::Solver::getStatistics"], [17, 2, 1, "_CPPv4NK4cvc56Solver13getStringSortEv", "cvc5::Solver::getStringSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver16getSynthSolutionE4Term", "cvc5::Solver::getSynthSolution"], [17, 3, 1, "_CPPv4NK4cvc56Solver16getSynthSolutionE4Term", "cvc5::Solver::getSynthSolution::term"], [17, 2, 1, "_CPPv4NK4cvc56Solver17getSynthSolutionsERKNSt6vectorI4TermEE", "cvc5::Solver::getSynthSolutions"], [17, 3, 1, "_CPPv4NK4cvc56Solver17getSynthSolutionsERKNSt6vectorI4TermEE", "cvc5::Solver::getSynthSolutions::terms"], [17, 2, 1, "_CPPv4NK4cvc56Solver19getUnsatAssumptionsEv", "cvc5::Solver::getUnsatAssumptions"], [17, 2, 1, "_CPPv4NK4cvc56Solver12getUnsatCoreEv", "cvc5::Solver::getUnsatCore"], [17, 2, 1, "_CPPv4NK4cvc56Solver8getValueERK4Term", "cvc5::Solver::getValue"], [17, 2, 1, "_CPPv4NK4cvc56Solver8getValueERKNSt6vectorI4TermEE", "cvc5::Solver::getValue"], [17, 3, 1, "_CPPv4NK4cvc56Solver8getValueERK4Term", "cvc5::Solver::getValue::term"], [17, 3, 1, "_CPPv4NK4cvc56Solver8getValueERKNSt6vectorI4TermEE", "cvc5::Solver::getValue::terms"], [17, 2, 1, "_CPPv4NK4cvc56Solver15getValueSepHeapEv", "cvc5::Solver::getValueSepHeap"], [17, 2, 1, "_CPPv4NK4cvc56Solver14getValueSepNilEv", "cvc5::Solver::getValueSepNil"], [17, 2, 1, "_CPPv4NK4cvc56Solver17isModelCoreSymbolERK4Term", "cvc5::Solver::isModelCoreSymbol"], [17, 3, 1, "_CPPv4NK4cvc56Solver17isModelCoreSymbolERK4Term", "cvc5::Solver::isModelCoreSymbol::v"], [17, 2, 1, "_CPPv4NK4cvc56Solver10isOutputOnERKNSt6stringE", "cvc5::Solver::isOutputOn"], [17, 3, 1, "_CPPv4NK4cvc56Solver10isOutputOnERKNSt6stringE", "cvc5::Solver::isOutputOn::tag"], [17, 2, 1, "_CPPv4NK4cvc56Solver11mkArraySortERK4SortRK4Sort", "cvc5::Solver::mkArraySort"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkArraySortERK4SortRK4Sort", "cvc5::Solver::mkArraySort::elemSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkArraySortERK4SortRK4Sort", "cvc5::Solver::mkArraySort::indexSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver9mkBagSortERK4Sort", "cvc5::Solver::mkBagSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver9mkBagSortERK4Sort", "cvc5::Solver::mkBagSort::elemSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver11mkBitVectorE8uint32_t8uint64_t", "cvc5::Solver::mkBitVector"], [17, 2, 1, "_CPPv4NK4cvc56Solver11mkBitVectorE8uint32_tRKNSt6stringE8uint32_t", "cvc5::Solver::mkBitVector"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkBitVectorE8uint32_tRKNSt6stringE8uint32_t", "cvc5::Solver::mkBitVector::base"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkBitVectorE8uint32_tRKNSt6stringE8uint32_t", "cvc5::Solver::mkBitVector::s"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkBitVectorE8uint32_t8uint64_t", "cvc5::Solver::mkBitVector::size"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkBitVectorE8uint32_tRKNSt6stringE8uint32_t", "cvc5::Solver::mkBitVector::size"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkBitVectorE8uint32_t8uint64_t", "cvc5::Solver::mkBitVector::val"], [17, 2, 1, "_CPPv4NK4cvc56Solver15mkBitVectorSortE8uint32_t", "cvc5::Solver::mkBitVectorSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver15mkBitVectorSortE8uint32_t", "cvc5::Solver::mkBitVectorSort::size"], [17, 2, 1, "_CPPv4NK4cvc56Solver9mkBooleanEb", "cvc5::Solver::mkBoolean"], [17, 3, 1, "_CPPv4NK4cvc56Solver9mkBooleanEb", "cvc5::Solver::mkBoolean::val"], [17, 2, 1, "_CPPv4NK4cvc56Solver23mkCardinalityConstraintERK4Sort8uint32_t", "cvc5::Solver::mkCardinalityConstraint"], [17, 3, 1, "_CPPv4NK4cvc56Solver23mkCardinalityConstraintERK4Sort8uint32_t", "cvc5::Solver::mkCardinalityConstraint::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver23mkCardinalityConstraintERK4Sort8uint32_t", "cvc5::Solver::mkCardinalityConstraint::upperBound"], [17, 2, 1, "_CPPv4NK4cvc56Solver7mkConstERK4SortRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkConst"], [17, 3, 1, "_CPPv4NK4cvc56Solver7mkConstERK4SortRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkConst::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver7mkConstERK4SortRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkConst::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver12mkConstArrayERK4SortRK4Term", "cvc5::Solver::mkConstArray"], [17, 3, 1, "_CPPv4NK4cvc56Solver12mkConstArrayERK4SortRK4Term", "cvc5::Solver::mkConstArray::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver12mkConstArrayERK4SortRK4Term", "cvc5::Solver::mkConstArray::val"], [17, 2, 1, "_CPPv4N4cvc56Solver25mkDatatypeConstructorDeclERKNSt6stringE", "cvc5::Solver::mkDatatypeConstructorDecl"], [17, 3, 1, "_CPPv4N4cvc56Solver25mkDatatypeConstructorDeclERKNSt6stringE", "cvc5::Solver::mkDatatypeConstructorDecl::name"], [17, 2, 1, "_CPPv4N4cvc56Solver14mkDatatypeDeclERKNSt6stringERKNSt6vectorI4SortEEb", "cvc5::Solver::mkDatatypeDecl"], [17, 2, 1, "_CPPv4N4cvc56Solver14mkDatatypeDeclERKNSt6stringEb", "cvc5::Solver::mkDatatypeDecl"], [17, 3, 1, "_CPPv4N4cvc56Solver14mkDatatypeDeclERKNSt6stringERKNSt6vectorI4SortEEb", "cvc5::Solver::mkDatatypeDecl::isCoDatatype"], [17, 3, 1, "_CPPv4N4cvc56Solver14mkDatatypeDeclERKNSt6stringEb", "cvc5::Solver::mkDatatypeDecl::isCoDatatype"], [17, 3, 1, "_CPPv4N4cvc56Solver14mkDatatypeDeclERKNSt6stringERKNSt6vectorI4SortEEb", "cvc5::Solver::mkDatatypeDecl::name"], [17, 3, 1, "_CPPv4N4cvc56Solver14mkDatatypeDeclERKNSt6stringEb", "cvc5::Solver::mkDatatypeDecl::name"], [17, 3, 1, "_CPPv4N4cvc56Solver14mkDatatypeDeclERKNSt6stringERKNSt6vectorI4SortEEb", "cvc5::Solver::mkDatatypeDecl::params"], [17, 2, 1, "_CPPv4NK4cvc56Solver14mkDatatypeSortERK12DatatypeDecl", "cvc5::Solver::mkDatatypeSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver14mkDatatypeSortERK12DatatypeDecl", "cvc5::Solver::mkDatatypeSort::dtypedecl"], [17, 2, 1, "_CPPv4NK4cvc56Solver15mkDatatypeSortsERKNSt6vectorI12DatatypeDeclEE", "cvc5::Solver::mkDatatypeSorts"], [17, 3, 1, "_CPPv4NK4cvc56Solver15mkDatatypeSortsERKNSt6vectorI12DatatypeDeclEE", "cvc5::Solver::mkDatatypeSorts::dtypedecls"], [17, 2, 1, "_CPPv4NK4cvc56Solver10mkEmptyBagERK4Sort", "cvc5::Solver::mkEmptyBag"], [17, 3, 1, "_CPPv4NK4cvc56Solver10mkEmptyBagERK4Sort", "cvc5::Solver::mkEmptyBag::sort"], [17, 2, 1, "_CPPv4NK4cvc56Solver15mkEmptySequenceERK4Sort", "cvc5::Solver::mkEmptySequence"], [17, 3, 1, "_CPPv4NK4cvc56Solver15mkEmptySequenceERK4Sort", "cvc5::Solver::mkEmptySequence::sort"], [17, 2, 1, "_CPPv4NK4cvc56Solver10mkEmptySetERK4Sort", "cvc5::Solver::mkEmptySet"], [17, 3, 1, "_CPPv4NK4cvc56Solver10mkEmptySetERK4Sort", "cvc5::Solver::mkEmptySet::sort"], [17, 2, 1, "_CPPv4NK4cvc56Solver7mkFalseEv", "cvc5::Solver::mkFalse"], [17, 2, 1, "_CPPv4NK4cvc56Solver15mkFloatingPointE8uint32_t8uint32_t4Term", "cvc5::Solver::mkFloatingPoint"], [17, 3, 1, "_CPPv4NK4cvc56Solver15mkFloatingPointE8uint32_t8uint32_t4Term", "cvc5::Solver::mkFloatingPoint::exp"], [17, 3, 1, "_CPPv4NK4cvc56Solver15mkFloatingPointE8uint32_t8uint32_t4Term", "cvc5::Solver::mkFloatingPoint::sig"], [17, 3, 1, "_CPPv4NK4cvc56Solver15mkFloatingPointE8uint32_t8uint32_t4Term", "cvc5::Solver::mkFloatingPoint::val"], [17, 2, 1, "_CPPv4NK4cvc56Solver18mkFloatingPointNaNE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNaN"], [17, 3, 1, "_CPPv4NK4cvc56Solver18mkFloatingPointNaNE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNaN::exp"], [17, 3, 1, "_CPPv4NK4cvc56Solver18mkFloatingPointNaNE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNaN::sig"], [17, 2, 1, "_CPPv4NK4cvc56Solver21mkFloatingPointNegInfE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNegInf"], [17, 3, 1, "_CPPv4NK4cvc56Solver21mkFloatingPointNegInfE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNegInf::exp"], [17, 3, 1, "_CPPv4NK4cvc56Solver21mkFloatingPointNegInfE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNegInf::sig"], [17, 2, 1, "_CPPv4NK4cvc56Solver22mkFloatingPointNegZeroE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNegZero"], [17, 3, 1, "_CPPv4NK4cvc56Solver22mkFloatingPointNegZeroE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNegZero::exp"], [17, 3, 1, "_CPPv4NK4cvc56Solver22mkFloatingPointNegZeroE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointNegZero::sig"], [17, 2, 1, "_CPPv4NK4cvc56Solver21mkFloatingPointPosInfE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointPosInf"], [17, 3, 1, "_CPPv4NK4cvc56Solver21mkFloatingPointPosInfE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointPosInf::exp"], [17, 3, 1, "_CPPv4NK4cvc56Solver21mkFloatingPointPosInfE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointPosInf::sig"], [17, 2, 1, "_CPPv4NK4cvc56Solver22mkFloatingPointPosZeroE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointPosZero"], [17, 3, 1, "_CPPv4NK4cvc56Solver22mkFloatingPointPosZeroE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointPosZero::exp"], [17, 3, 1, "_CPPv4NK4cvc56Solver22mkFloatingPointPosZeroE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointPosZero::sig"], [17, 2, 1, "_CPPv4NK4cvc56Solver19mkFloatingPointSortE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver19mkFloatingPointSortE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointSort::exp"], [17, 3, 1, "_CPPv4NK4cvc56Solver19mkFloatingPointSortE8uint32_t8uint32_t", "cvc5::Solver::mkFloatingPointSort::sig"], [17, 2, 1, "_CPPv4NK4cvc56Solver14mkFunctionSortERKNSt6vectorI4SortEERK4Sort", "cvc5::Solver::mkFunctionSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver14mkFunctionSortERKNSt6vectorI4SortEERK4Sort", "cvc5::Solver::mkFunctionSort::codomain"], [17, 3, 1, "_CPPv4NK4cvc56Solver14mkFunctionSortERKNSt6vectorI4SortEERK4Sort", "cvc5::Solver::mkFunctionSort::sorts"], [17, 2, 1, "_CPPv4NK4cvc56Solver9mkGrammarERKNSt6vectorI4TermEERKNSt6vectorI4TermEE", "cvc5::Solver::mkGrammar"], [17, 3, 1, "_CPPv4NK4cvc56Solver9mkGrammarERKNSt6vectorI4TermEERKNSt6vectorI4TermEE", "cvc5::Solver::mkGrammar::boundVars"], [17, 3, 1, "_CPPv4NK4cvc56Solver9mkGrammarERKNSt6vectorI4TermEERKNSt6vectorI4TermEE", "cvc5::Solver::mkGrammar::ntSymbols"], [17, 2, 1, "_CPPv4NK4cvc56Solver9mkIntegerE7int64_t", "cvc5::Solver::mkInteger"], [17, 2, 1, "_CPPv4NK4cvc56Solver9mkIntegerERKNSt6stringE", "cvc5::Solver::mkInteger"], [17, 3, 1, "_CPPv4NK4cvc56Solver9mkIntegerERKNSt6stringE", "cvc5::Solver::mkInteger::s"], [17, 3, 1, "_CPPv4NK4cvc56Solver9mkIntegerE7int64_t", "cvc5::Solver::mkInteger::val"], [17, 2, 1, "_CPPv4NK4cvc56Solver4mkOpE4KindRKNSt6stringE", "cvc5::Solver::mkOp"], [17, 2, 1, "_CPPv4NK4cvc56Solver4mkOpE4KindRKNSt6vectorI8uint32_tEE", "cvc5::Solver::mkOp"], [17, 3, 1, "_CPPv4NK4cvc56Solver4mkOpE4KindRKNSt6stringE", "cvc5::Solver::mkOp::arg"], [17, 3, 1, "_CPPv4NK4cvc56Solver4mkOpE4KindRKNSt6vectorI8uint32_tEE", "cvc5::Solver::mkOp::args"], [17, 3, 1, "_CPPv4NK4cvc56Solver4mkOpE4KindRKNSt6stringE", "cvc5::Solver::mkOp::kind"], [17, 3, 1, "_CPPv4NK4cvc56Solver4mkOpE4KindRKNSt6vectorI8uint32_tEE", "cvc5::Solver::mkOp::kind"], [17, 2, 1, "_CPPv4NK4cvc56Solver11mkParamSortERKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkParamSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkParamSortERKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkParamSort::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver4mkPiEv", "cvc5::Solver::mkPi"], [17, 2, 1, "_CPPv4NK4cvc56Solver15mkPredicateSortERKNSt6vectorI4SortEE", "cvc5::Solver::mkPredicateSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver15mkPredicateSortERKNSt6vectorI4SortEE", "cvc5::Solver::mkPredicateSort::sorts"], [17, 2, 1, "_CPPv4NK4cvc56Solver6mkRealE7int64_t", "cvc5::Solver::mkReal"], [17, 2, 1, "_CPPv4NK4cvc56Solver6mkRealE7int64_t7int64_t", "cvc5::Solver::mkReal"], [17, 2, 1, "_CPPv4NK4cvc56Solver6mkRealERKNSt6stringE", "cvc5::Solver::mkReal"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkRealE7int64_t7int64_t", "cvc5::Solver::mkReal::den"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkRealE7int64_t7int64_t", "cvc5::Solver::mkReal::num"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkRealERKNSt6stringE", "cvc5::Solver::mkReal::s"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkRealE7int64_t", "cvc5::Solver::mkReal::val"], [17, 2, 1, "_CPPv4NK4cvc56Solver12mkRecordSortERKNSt6vectorINSt4pairINSt6stringE4SortEEEE", "cvc5::Solver::mkRecordSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver12mkRecordSortERKNSt6vectorINSt4pairINSt6stringE4SortEEEE", "cvc5::Solver::mkRecordSort::fields"], [17, 2, 1, "_CPPv4NK4cvc56Solver11mkRegexpAllEv", "cvc5::Solver::mkRegexpAll"], [17, 2, 1, "_CPPv4NK4cvc56Solver15mkRegexpAllcharEv", "cvc5::Solver::mkRegexpAllchar"], [17, 2, 1, "_CPPv4NK4cvc56Solver12mkRegexpNoneEv", "cvc5::Solver::mkRegexpNone"], [17, 2, 1, "_CPPv4NK4cvc56Solver14mkRoundingModeE12RoundingMode", "cvc5::Solver::mkRoundingMode"], [17, 3, 1, "_CPPv4NK4cvc56Solver14mkRoundingModeE12RoundingMode", "cvc5::Solver::mkRoundingMode::rm"], [17, 2, 1, "_CPPv4NK4cvc56Solver8mkSepEmpEv", "cvc5::Solver::mkSepEmp"], [17, 2, 1, "_CPPv4NK4cvc56Solver8mkSepNilERK4Sort", "cvc5::Solver::mkSepNil"], [17, 3, 1, "_CPPv4NK4cvc56Solver8mkSepNilERK4Sort", "cvc5::Solver::mkSepNil::sort"], [17, 2, 1, "_CPPv4NK4cvc56Solver14mkSequenceSortERK4Sort", "cvc5::Solver::mkSequenceSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver14mkSequenceSortERK4Sort", "cvc5::Solver::mkSequenceSort::elemSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver9mkSetSortERK4Sort", "cvc5::Solver::mkSetSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver9mkSetSortERK4Sort", "cvc5::Solver::mkSetSort::elemSort"], [17, 2, 1, "_CPPv4NK4cvc56Solver8mkStringERKNSt6stringEb", "cvc5::Solver::mkString"], [17, 2, 1, "_CPPv4NK4cvc56Solver8mkStringERKNSt7wstringE", "cvc5::Solver::mkString"], [17, 3, 1, "_CPPv4NK4cvc56Solver8mkStringERKNSt6stringEb", "cvc5::Solver::mkString::s"], [17, 3, 1, "_CPPv4NK4cvc56Solver8mkStringERKNSt7wstringE", "cvc5::Solver::mkString::s"], [17, 3, 1, "_CPPv4NK4cvc56Solver8mkStringERKNSt6stringEb", "cvc5::Solver::mkString::useEscSequences"], [17, 2, 1, "_CPPv4NK4cvc56Solver6mkTermE4KindRKNSt6vectorI4TermEE", "cvc5::Solver::mkTerm"], [17, 2, 1, "_CPPv4NK4cvc56Solver6mkTermERK2OpRKNSt6vectorI4TermEE", "cvc5::Solver::mkTerm"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkTermE4KindRKNSt6vectorI4TermEE", "cvc5::Solver::mkTerm::children"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkTermERK2OpRKNSt6vectorI4TermEE", "cvc5::Solver::mkTerm::children"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkTermE4KindRKNSt6vectorI4TermEE", "cvc5::Solver::mkTerm::kind"], [17, 3, 1, "_CPPv4NK4cvc56Solver6mkTermERK2OpRKNSt6vectorI4TermEE", "cvc5::Solver::mkTerm::op"], [17, 2, 1, "_CPPv4NK4cvc56Solver6mkTrueEv", "cvc5::Solver::mkTrue"], [17, 2, 1, "_CPPv4NK4cvc56Solver7mkTupleERKNSt6vectorI4SortEERKNSt6vectorI4TermEE", "cvc5::Solver::mkTuple"], [17, 3, 1, "_CPPv4NK4cvc56Solver7mkTupleERKNSt6vectorI4SortEERKNSt6vectorI4TermEE", "cvc5::Solver::mkTuple::sorts"], [17, 3, 1, "_CPPv4NK4cvc56Solver7mkTupleERKNSt6vectorI4SortEERKNSt6vectorI4TermEE", "cvc5::Solver::mkTuple::terms"], [17, 2, 1, "_CPPv4NK4cvc56Solver11mkTupleSortERKNSt6vectorI4SortEE", "cvc5::Solver::mkTupleSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver11mkTupleSortERKNSt6vectorI4SortEE", "cvc5::Solver::mkTupleSort::sorts"], [17, 2, 1, "_CPPv4NK4cvc56Solver19mkUninterpretedSortERKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkUninterpretedSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver19mkUninterpretedSortERKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkUninterpretedSort::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver34mkUninterpretedSortConstructorSortE6size_tRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkUninterpretedSortConstructorSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver34mkUninterpretedSortConstructorSortE6size_tRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkUninterpretedSortConstructorSort::arity"], [17, 3, 1, "_CPPv4NK4cvc56Solver34mkUninterpretedSortConstructorSortE6size_tRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkUninterpretedSortConstructorSort::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver13mkUniverseSetERK4Sort", "cvc5::Solver::mkUniverseSet"], [17, 3, 1, "_CPPv4NK4cvc56Solver13mkUniverseSetERK4Sort", "cvc5::Solver::mkUniverseSet::sort"], [17, 2, 1, "_CPPv4NK4cvc56Solver24mkUnresolvedDatatypeSortERKNSt6stringE6size_t", "cvc5::Solver::mkUnresolvedDatatypeSort"], [17, 3, 1, "_CPPv4NK4cvc56Solver24mkUnresolvedDatatypeSortERKNSt6stringE6size_t", "cvc5::Solver::mkUnresolvedDatatypeSort::arity"], [17, 3, 1, "_CPPv4NK4cvc56Solver24mkUnresolvedDatatypeSortERKNSt6stringE6size_t", "cvc5::Solver::mkUnresolvedDatatypeSort::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver5mkVarERK4SortRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkVar"], [17, 3, 1, "_CPPv4NK4cvc56Solver5mkVarERK4SortRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkVar::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver5mkVarERK4SortRKNSt8optionalINSt6stringEEE", "cvc5::Solver::mkVar::symbol"], [17, 2, 1, "_CPPv4N4cvc56SolveraSERK6Solver", "cvc5::Solver::operator="], [17, 2, 1, "_CPPv4NK4cvc56Solver3popE8uint32_t", "cvc5::Solver::pop"], [17, 3, 1, "_CPPv4NK4cvc56Solver3popE8uint32_t", "cvc5::Solver::pop::nscopes"], [17, 2, 1, "_CPPv4NK4cvc56Solver19printStatisticsSafeEi", "cvc5::Solver::printStatisticsSafe"], [17, 3, 1, "_CPPv4NK4cvc56Solver19printStatisticsSafeEi", "cvc5::Solver::printStatisticsSafe::fd"], [17, 2, 1, "_CPPv4NK4cvc56Solver4pushE8uint32_t", "cvc5::Solver::push"], [17, 3, 1, "_CPPv4NK4cvc56Solver4pushE8uint32_t", "cvc5::Solver::push::nscopes"], [17, 2, 1, "_CPPv4NK4cvc56Solver15resetAssertionsEv", "cvc5::Solver::resetAssertions"], [17, 2, 1, "_CPPv4NK4cvc56Solver7setInfoERKNSt6stringERKNSt6stringE", "cvc5::Solver::setInfo"], [17, 3, 1, "_CPPv4NK4cvc56Solver7setInfoERKNSt6stringERKNSt6stringE", "cvc5::Solver::setInfo::keyword"], [17, 3, 1, "_CPPv4NK4cvc56Solver7setInfoERKNSt6stringERKNSt6stringE", "cvc5::Solver::setInfo::value"], [17, 2, 1, "_CPPv4NK4cvc56Solver8setLogicERKNSt6stringE", "cvc5::Solver::setLogic"], [17, 3, 1, "_CPPv4NK4cvc56Solver8setLogicERKNSt6stringE", "cvc5::Solver::setLogic::logic"], [17, 2, 1, "_CPPv4NK4cvc56Solver9setOptionERKNSt6stringERKNSt6stringE", "cvc5::Solver::setOption"], [17, 3, 1, "_CPPv4NK4cvc56Solver9setOptionERKNSt6stringERKNSt6stringE", "cvc5::Solver::setOption::option"], [17, 3, 1, "_CPPv4NK4cvc56Solver9setOptionERKNSt6stringERKNSt6stringE", "cvc5::Solver::setOption::value"], [17, 2, 1, "_CPPv4N4cvc56Solver8simplifyERK4Term", "cvc5::Solver::simplify"], [17, 3, 1, "_CPPv4N4cvc56Solver8simplifyERK4Term", "cvc5::Solver::simplify::t"], [17, 2, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEE4SortR7Grammar", "cvc5::Solver::synthFun"], [17, 2, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEERK4Sort", "cvc5::Solver::synthFun"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEE4SortR7Grammar", "cvc5::Solver::synthFun::boundVars"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEERK4Sort", "cvc5::Solver::synthFun::boundVars"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEE4SortR7Grammar", "cvc5::Solver::synthFun::grammar"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEE4SortR7Grammar", "cvc5::Solver::synthFun::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEERK4Sort", "cvc5::Solver::synthFun::sort"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEE4SortR7Grammar", "cvc5::Solver::synthFun::symbol"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthFunERKNSt6stringERKNSt6vectorI4TermEERK4Sort", "cvc5::Solver::synthFun::symbol"], [17, 2, 1, "_CPPv4NK4cvc56Solver8synthInvERKNSt6stringERKNSt6vectorI4TermEE", "cvc5::Solver::synthInv"], [17, 2, 1, "_CPPv4NK4cvc56Solver8synthInvERKNSt6stringERKNSt6vectorI4TermEER7Grammar", "cvc5::Solver::synthInv"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthInvERKNSt6stringERKNSt6vectorI4TermEE", "cvc5::Solver::synthInv::boundVars"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthInvERKNSt6stringERKNSt6vectorI4TermEER7Grammar", "cvc5::Solver::synthInv::boundVars"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthInvERKNSt6stringERKNSt6vectorI4TermEER7Grammar", "cvc5::Solver::synthInv::grammar"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthInvERKNSt6stringERKNSt6vectorI4TermEE", "cvc5::Solver::synthInv::symbol"], [17, 3, 1, "_CPPv4NK4cvc56Solver8synthInvERKNSt6stringERKNSt6vectorI4TermEER7Grammar", "cvc5::Solver::synthInv::symbol"], [17, 2, 1, "_CPPv4N4cvc56SolverD0Ev", "cvc5::Solver::~Solver"], [18, 1, 1, "_CPPv4N4cvc54SortE", "cvc5::Sort"], [18, 2, 1, "_CPPv4N4cvc54Sort4SortEv", "cvc5::Sort::Sort"], [18, 2, 1, "_CPPv4NK4cvc54Sort19getArrayElementSortEv", "cvc5::Sort::getArrayElementSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort17getArrayIndexSortEv", "cvc5::Sort::getArrayIndexSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort17getBagElementSortEv", "cvc5::Sort::getBagElementSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort16getBitVectorSizeEv", "cvc5::Sort::getBitVectorSize"], [18, 2, 1, "_CPPv4NK4cvc54Sort11getDatatypeEv", "cvc5::Sort::getDatatype"], [18, 2, 1, "_CPPv4NK4cvc54Sort16getDatatypeArityEv", "cvc5::Sort::getDatatypeArity"], [18, 2, 1, "_CPPv4NK4cvc54Sort27getDatatypeConstructorArityEv", "cvc5::Sort::getDatatypeConstructorArity"], [18, 2, 1, "_CPPv4NK4cvc54Sort34getDatatypeConstructorCodomainSortEv", "cvc5::Sort::getDatatypeConstructorCodomainSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort33getDatatypeConstructorDomainSortsEv", "cvc5::Sort::getDatatypeConstructorDomainSorts"], [18, 2, 1, "_CPPv4NK4cvc54Sort31getDatatypeSelectorCodomainSortEv", "cvc5::Sort::getDatatypeSelectorCodomainSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort29getDatatypeSelectorDomainSortEv", "cvc5::Sort::getDatatypeSelectorDomainSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort29getDatatypeTesterCodomainSortEv", "cvc5::Sort::getDatatypeTesterCodomainSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort27getDatatypeTesterDomainSortEv", "cvc5::Sort::getDatatypeTesterDomainSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort28getFloatingPointExponentSizeEv", "cvc5::Sort::getFloatingPointExponentSize"], [18, 2, 1, "_CPPv4NK4cvc54Sort31getFloatingPointSignificandSizeEv", "cvc5::Sort::getFloatingPointSignificandSize"], [18, 2, 1, "_CPPv4NK4cvc54Sort16getFunctionArityEv", "cvc5::Sort::getFunctionArity"], [18, 2, 1, "_CPPv4NK4cvc54Sort23getFunctionCodomainSortEv", "cvc5::Sort::getFunctionCodomainSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort22getFunctionDomainSortsEv", "cvc5::Sort::getFunctionDomainSorts"], [18, 2, 1, "_CPPv4NK4cvc54Sort25getInstantiatedParametersEv", "cvc5::Sort::getInstantiatedParameters"], [18, 2, 1, "_CPPv4NK4cvc54Sort22getSequenceElementSortEv", "cvc5::Sort::getSequenceElementSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort17getSetElementSortEv", "cvc5::Sort::getSetElementSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort9getSymbolEv", "cvc5::Sort::getSymbol"], [18, 2, 1, "_CPPv4NK4cvc54Sort14getTupleLengthEv", "cvc5::Sort::getTupleLength"], [18, 2, 1, "_CPPv4NK4cvc54Sort13getTupleSortsEv", "cvc5::Sort::getTupleSorts"], [18, 2, 1, "_CPPv4NK4cvc54Sort31getUninterpretedSortConstructorEv", "cvc5::Sort::getUninterpretedSortConstructor"], [18, 2, 1, "_CPPv4NK4cvc54Sort36getUninterpretedSortConstructorArityEv", "cvc5::Sort::getUninterpretedSortConstructorArity"], [18, 2, 1, "_CPPv4NK4cvc54Sort9hasSymbolEv", "cvc5::Sort::hasSymbol"], [18, 2, 1, "_CPPv4NK4cvc54Sort11instantiateERKNSt6vectorI4SortEE", "cvc5::Sort::instantiate"], [18, 3, 1, "_CPPv4NK4cvc54Sort11instantiateERKNSt6vectorI4SortEE", "cvc5::Sort::instantiate::params"], [18, 2, 1, "_CPPv4NK4cvc54Sort7isArrayEv", "cvc5::Sort::isArray"], [18, 2, 1, "_CPPv4NK4cvc54Sort5isBagEv", "cvc5::Sort::isBag"], [18, 2, 1, "_CPPv4NK4cvc54Sort11isBitVectorEv", "cvc5::Sort::isBitVector"], [18, 2, 1, "_CPPv4NK4cvc54Sort9isBooleanEv", "cvc5::Sort::isBoolean"], [18, 2, 1, "_CPPv4NK4cvc54Sort10isDatatypeEv", "cvc5::Sort::isDatatype"], [18, 2, 1, "_CPPv4NK4cvc54Sort21isDatatypeConstructorEv", "cvc5::Sort::isDatatypeConstructor"], [18, 2, 1, "_CPPv4NK4cvc54Sort18isDatatypeSelectorEv", "cvc5::Sort::isDatatypeSelector"], [18, 2, 1, "_CPPv4NK4cvc54Sort16isDatatypeTesterEv", "cvc5::Sort::isDatatypeTester"], [18, 2, 1, "_CPPv4NK4cvc54Sort17isDatatypeUpdaterEv", "cvc5::Sort::isDatatypeUpdater"], [18, 2, 1, "_CPPv4NK4cvc54Sort15isFloatingPointEv", "cvc5::Sort::isFloatingPoint"], [18, 2, 1, "_CPPv4NK4cvc54Sort10isFunctionEv", "cvc5::Sort::isFunction"], [18, 2, 1, "_CPPv4NK4cvc54Sort14isInstantiatedEv", "cvc5::Sort::isInstantiated"], [18, 2, 1, "_CPPv4NK4cvc54Sort9isIntegerEv", "cvc5::Sort::isInteger"], [18, 2, 1, "_CPPv4NK4cvc54Sort6isNullEv", "cvc5::Sort::isNull"], [18, 2, 1, "_CPPv4NK4cvc54Sort11isPredicateEv", "cvc5::Sort::isPredicate"], [18, 2, 1, "_CPPv4NK4cvc54Sort6isRealEv", "cvc5::Sort::isReal"], [18, 2, 1, "_CPPv4NK4cvc54Sort8isRecordEv", "cvc5::Sort::isRecord"], [18, 2, 1, "_CPPv4NK4cvc54Sort8isRegExpEv", "cvc5::Sort::isRegExp"], [18, 2, 1, "_CPPv4NK4cvc54Sort14isRoundingModeEv", "cvc5::Sort::isRoundingMode"], [18, 2, 1, "_CPPv4NK4cvc54Sort10isSequenceEv", "cvc5::Sort::isSequence"], [18, 2, 1, "_CPPv4NK4cvc54Sort5isSetEv", "cvc5::Sort::isSet"], [18, 2, 1, "_CPPv4NK4cvc54Sort8isStringEv", "cvc5::Sort::isString"], [18, 2, 1, "_CPPv4NK4cvc54Sort7isTupleEv", "cvc5::Sort::isTuple"], [18, 2, 1, "_CPPv4NK4cvc54Sort19isUninterpretedSortEv", "cvc5::Sort::isUninterpretedSort"], [18, 2, 1, "_CPPv4NK4cvc54Sort30isUninterpretedSortConstructorEv", "cvc5::Sort::isUninterpretedSortConstructor"], [18, 2, 1, "_CPPv4NK4cvc54SortneERK4Sort", "cvc5::Sort::operator!="], [18, 3, 1, "_CPPv4NK4cvc54SortneERK4Sort", "cvc5::Sort::operator!=::s"], [18, 2, 1, "_CPPv4NK4cvc54SortltERK4Sort", "cvc5::Sort::operator&lt;"], [18, 3, 1, "_CPPv4NK4cvc54SortltERK4Sort", "cvc5::Sort::operator&lt;::s"], [18, 2, 1, "_CPPv4NK4cvc54SortleERK4Sort", "cvc5::Sort::operator&lt;="], [18, 3, 1, "_CPPv4NK4cvc54SortleERK4Sort", "cvc5::Sort::operator&lt;=::s"], [18, 2, 1, "_CPPv4NK4cvc54SorteqERK4Sort", "cvc5::Sort::operator=="], [18, 3, 1, "_CPPv4NK4cvc54SorteqERK4Sort", "cvc5::Sort::operator==::s"], [18, 2, 1, "_CPPv4NK4cvc54SortgtERK4Sort", "cvc5::Sort::operator&gt;"], [18, 3, 1, "_CPPv4NK4cvc54SortgtERK4Sort", "cvc5::Sort::operator&gt;::s"], [18, 2, 1, "_CPPv4NK4cvc54SortgeERK4Sort", "cvc5::Sort::operator&gt;="], [18, 3, 1, "_CPPv4NK4cvc54SortgeERK4Sort", "cvc5::Sort::operator&gt;=::s"], [18, 2, 1, "_CPPv4NK4cvc54Sort10substituteERK4SortRK4Sort", "cvc5::Sort::substitute"], [18, 2, 1, "_CPPv4NK4cvc54Sort10substituteERKNSt6vectorI4SortEERKNSt6vectorI4SortEE", "cvc5::Sort::substitute"], [18, 3, 1, "_CPPv4NK4cvc54Sort10substituteERK4SortRK4Sort", "cvc5::Sort::substitute::replacement"], [18, 3, 1, "_CPPv4NK4cvc54Sort10substituteERKNSt6vectorI4SortEERKNSt6vectorI4SortEE", "cvc5::Sort::substitute::replacements"], [18, 3, 1, "_CPPv4NK4cvc54Sort10substituteERK4SortRK4Sort", "cvc5::Sort::substitute::sort"], [18, 3, 1, "_CPPv4NK4cvc54Sort10substituteERKNSt6vectorI4SortEERKNSt6vectorI4SortEE", "cvc5::Sort::substitute::sorts"], [18, 2, 1, "_CPPv4NK4cvc54Sort8toStreamERNSt7ostreamE", "cvc5::Sort::toStream"], [18, 3, 1, "_CPPv4NK4cvc54Sort8toStreamERNSt7ostreamE", "cvc5::Sort::toStream::out"], [18, 2, 1, "_CPPv4NK4cvc54Sort8toStringEv", "cvc5::Sort::toString"], [18, 2, 1, "_CPPv4N4cvc54SortD0Ev", "cvc5::Sort::~Sort"], [19, 1, 1, "_CPPv4N4cvc54StatE", "cvc5::Stat"], [19, 4, 1, "_CPPv4N4cvc54Stat13HistogramDataE", "cvc5::Stat::HistogramData"], [19, 2, 1, "_CPPv4N4cvc54Stat4StatERK4Stat", "cvc5::Stat::Stat"], [19, 2, 1, "_CPPv4N4cvc54Stat4StatEv", "cvc5::Stat::Stat"], [19, 3, 1, "_CPPv4N4cvc54Stat4StatERK4Stat", "cvc5::Stat::Stat::s"], [19, 2, 1, "_CPPv4NK4cvc54Stat9getDoubleEv", "cvc5::Stat::getDouble"], [19, 2, 1, "_CPPv4NK4cvc54Stat12getHistogramEv", "cvc5::Stat::getHistogram"], [19, 2, 1, "_CPPv4NK4cvc54Stat6getIntEv", "cvc5::Stat::getInt"], [19, 2, 1, "_CPPv4NK4cvc54Stat9getStringEv", "cvc5::Stat::getString"], [19, 2, 1, "_CPPv4NK4cvc54Stat9isDefaultEv", "cvc5::Stat::isDefault"], [19, 2, 1, "_CPPv4NK4cvc54Stat8isDoubleEv", "cvc5::Stat::isDouble"], [19, 2, 1, "_CPPv4NK4cvc54Stat11isHistogramEv", "cvc5::Stat::isHistogram"], [19, 2, 1, "_CPPv4NK4cvc54Stat5isIntEv", "cvc5::Stat::isInt"], [19, 2, 1, "_CPPv4NK4cvc54Stat10isInternalEv", "cvc5::Stat::isInternal"], [19, 2, 1, "_CPPv4NK4cvc54Stat8isStringEv", "cvc5::Stat::isString"], [19, 2, 1, "_CPPv4N4cvc54StatlsERNSt7ostreamERK4Stat", "cvc5::Stat::operator&lt;&lt;"], [19, 3, 1, "_CPPv4N4cvc54StatlsERNSt7ostreamERK4Stat", "cvc5::Stat::operator&lt;&lt;::os"], [19, 3, 1, "_CPPv4N4cvc54StatlsERNSt7ostreamERK4Stat", "cvc5::Stat::operator&lt;&lt;::sv"], [19, 2, 1, "_CPPv4N4cvc54StataSERK4Stat", "cvc5::Stat::operator="], [19, 3, 1, "_CPPv4N4cvc54StataSERK4Stat", "cvc5::Stat::operator=::s"], [19, 2, 1, "_CPPv4N4cvc54StatD0Ev", "cvc5::Stat::~Stat"], [19, 1, 1, "_CPPv4N4cvc510StatisticsE", "cvc5::Statistics"], [19, 2, 1, "_CPPv4NK4cvc510Statistics5beginEbb", "cvc5::Statistics::begin"], [19, 3, 1, "_CPPv4NK4cvc510Statistics5beginEbb", "cvc5::Statistics::begin::defaulted"], [19, 3, 1, "_CPPv4NK4cvc510Statistics5beginEbb", "cvc5::Statistics::begin::internal"], [19, 2, 1, "_CPPv4NK4cvc510Statistics3endEv", "cvc5::Statistics::end"], [19, 2, 1, "_CPPv4N4cvc510Statistics3getERKNSt6stringE", "cvc5::Statistics::get"], [19, 3, 1, "_CPPv4N4cvc510Statistics3getERKNSt6stringE", "cvc5::Statistics::get::name"], [20, 1, 1, "_CPPv4N4cvc511SynthResultE", "cvc5::SynthResult"], [20, 2, 1, "_CPPv4N4cvc511SynthResult11SynthResultEv", "cvc5::SynthResult::SynthResult"], [20, 2, 1, "_CPPv4NK4cvc511SynthResult13hasNoSolutionEv", "cvc5::SynthResult::hasNoSolution"], [20, 2, 1, "_CPPv4NK4cvc511SynthResult11hasSolutionEv", "cvc5::SynthResult::hasSolution"], [20, 2, 1, "_CPPv4NK4cvc511SynthResult6isNullEv", "cvc5::SynthResult::isNull"], [20, 2, 1, "_CPPv4NK4cvc511SynthResult9isUnknownEv", "cvc5::SynthResult::isUnknown"], [20, 2, 1, "_CPPv4NK4cvc511SynthResult8toStringEv", "cvc5::SynthResult::toString"], [10, 0, 1, "_CPPv4N4cvc54Kind15TABLE_AGGREGATEE", "cvc5::TABLE_AGGREGATE"], [10, 0, 1, "_CPPv4N4cvc54Kind11TABLE_GROUPE", "cvc5::TABLE_GROUP"], [10, 0, 1, "_CPPv4N4cvc54Kind10TABLE_JOINE", "cvc5::TABLE_JOIN"], [10, 0, 1, "_CPPv4N4cvc54Kind13TABLE_PRODUCTE", "cvc5::TABLE_PRODUCT"], [10, 0, 1, "_CPPv4N4cvc54Kind13TABLE_PROJECTE", "cvc5::TABLE_PROJECT"], [10, 0, 1, "_CPPv4N4cvc54Kind7TANGENTE", "cvc5::TANGENT"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation7TIMEOUTE", "cvc5::TIMEOUT"], [10, 0, 1, "_CPPv4N4cvc54Kind10TO_INTEGERE", "cvc5::TO_INTEGER"], [10, 0, 1, "_CPPv4N4cvc54Kind7TO_REALE", "cvc5::TO_REAL"], [10, 0, 1, "_CPPv4N4cvc54Kind13TUPLE_PROJECTE", "cvc5::TUPLE_PROJECT"], [21, 1, 1, "_CPPv4N4cvc54TermE", "cvc5::Term"], [21, 2, 1, "_CPPv4N4cvc54Term4TermEv", "cvc5::Term::Term"], [21, 2, 1, "_CPPv4NK4cvc54Term7andTermERK4Term", "cvc5::Term::andTerm"], [21, 3, 1, "_CPPv4NK4cvc54Term7andTermERK4Term", "cvc5::Term::andTerm::t"], [21, 2, 1, "_CPPv4NK4cvc54Term5beginEv", "cvc5::Term::begin"], [21, 1, 1, "_CPPv4N4cvc54Term14const_iteratorE", "cvc5::Term::const_iterator"], [21, 2, 1, "_CPPv4N4cvc54Term14const_iterator14const_iteratorEPN8internal11NodeManagerERKNSt10shared_ptrIN8internal4NodeEEE8uint32_t", "cvc5::Term::const_iterator::const_iterator"], [21, 2, 1, "_CPPv4N4cvc54Term14const_iterator14const_iteratorERK14const_iterator", "cvc5::Term::const_iterator::const_iterator"], [21, 2, 1, "_CPPv4N4cvc54Term14const_iterator14const_iteratorEv", "cvc5::Term::const_iterator::const_iterator"], [21, 3, 1, "_CPPv4N4cvc54Term14const_iterator14const_iteratorEPN8internal11NodeManagerERKNSt10shared_ptrIN8internal4NodeEEE8uint32_t", "cvc5::Term::const_iterator::const_iterator::e"], [21, 3, 1, "_CPPv4N4cvc54Term14const_iterator14const_iteratorERK14const_iterator", "cvc5::Term::const_iterator::const_iterator::it"], [21, 3, 1, "_CPPv4N4cvc54Term14const_iterator14const_iteratorEPN8internal11NodeManagerERKNSt10shared_ptrIN8internal4NodeEEE8uint32_t", "cvc5::Term::const_iterator::const_iterator::nm"], [21, 3, 1, "_CPPv4N4cvc54Term14const_iterator14const_iteratorEPN8internal11NodeManagerERKNSt10shared_ptrIN8internal4NodeEEE8uint32_t", "cvc5::Term::const_iterator::const_iterator::p"], [21, 4, 1, "_CPPv4N4cvc54Term14const_iterator15difference_typeE", "cvc5::Term::const_iterator::difference_type"], [21, 4, 1, "_CPPv4N4cvc54Term14const_iterator17iterator_categoryE", "cvc5::Term::const_iterator::iterator_category"], [21, 2, 1, "_CPPv4NK4cvc54Term14const_iteratorneERK14const_iterator", "cvc5::Term::const_iterator::operator!="], [21, 3, 1, "_CPPv4NK4cvc54Term14const_iteratorneERK14const_iterator", "cvc5::Term::const_iterator::operator!=::it"], [21, 2, 1, "_CPPv4NK4cvc54Term14const_iteratormlEv", "cvc5::Term::const_iterator::operator*"], [21, 2, 1, "_CPPv4N4cvc54Term14const_iteratorppEi", "cvc5::Term::const_iterator::operator++"], [21, 2, 1, "_CPPv4N4cvc54Term14const_iteratorppEv", "cvc5::Term::const_iterator::operator++"], [21, 2, 1, "_CPPv4N4cvc54Term14const_iteratoraSERK14const_iterator", "cvc5::Term::const_iterator::operator="], [21, 3, 1, "_CPPv4N4cvc54Term14const_iteratoraSERK14const_iterator", "cvc5::Term::const_iterator::operator=::it"], [21, 2, 1, "_CPPv4NK4cvc54Term14const_iteratoreqERK14const_iterator", "cvc5::Term::const_iterator::operator=="], [21, 3, 1, "_CPPv4NK4cvc54Term14const_iteratoreqERK14const_iterator", "cvc5::Term::const_iterator::operator==::it"], [21, 4, 1, "_CPPv4N4cvc54Term14const_iterator7pointerE", "cvc5::Term::const_iterator::pointer"], [21, 4, 1, "_CPPv4N4cvc54Term14const_iterator9referenceE", "cvc5::Term::const_iterator::reference"], [21, 4, 1, "_CPPv4N4cvc54Term14const_iterator10value_typeE", "cvc5::Term::const_iterator::value_type"], [21, 2, 1, "_CPPv4NK4cvc54Term3endEv", "cvc5::Term::end"], [21, 2, 1, "_CPPv4NK4cvc54Term6eqTermERK4Term", "cvc5::Term::eqTerm"], [21, 3, 1, "_CPPv4NK4cvc54Term6eqTermERK4Term", "cvc5::Term::eqTerm::t"], [21, 2, 1, "_CPPv4NK4cvc54Term17getBitVectorValueE8uint32_t", "cvc5::Term::getBitVectorValue"], [21, 3, 1, "_CPPv4NK4cvc54Term17getBitVectorValueE8uint32_t", "cvc5::Term::getBitVectorValue::base"], [21, 2, 1, "_CPPv4NK4cvc54Term15getBooleanValueEv", "cvc5::Term::getBooleanValue"], [21, 2, 1, "_CPPv4NK4cvc54Term24getCardinalityConstraintEv", "cvc5::Term::getCardinalityConstraint"], [21, 2, 1, "_CPPv4NK4cvc54Term17getConstArrayBaseEv", "cvc5::Term::getConstArrayBase"], [21, 2, 1, "_CPPv4NK4cvc54Term21getFloatingPointValueEv", "cvc5::Term::getFloatingPointValue"], [21, 2, 1, "_CPPv4NK4cvc54Term5getIdEv", "cvc5::Term::getId"], [21, 2, 1, "_CPPv4NK4cvc54Term13getInt32ValueEv", "cvc5::Term::getInt32Value"], [21, 2, 1, "_CPPv4NK4cvc54Term13getInt64ValueEv", "cvc5::Term::getInt64Value"], [21, 2, 1, "_CPPv4NK4cvc54Term15getIntegerValueEv", "cvc5::Term::getIntegerValue"], [21, 2, 1, "_CPPv4NK4cvc54Term7getKindEv", "cvc5::Term::getKind"], [21, 2, 1, "_CPPv4NK4cvc54Term14getNumChildrenEv", "cvc5::Term::getNumChildren"], [21, 2, 1, "_CPPv4NK4cvc54Term5getOpEv", "cvc5::Term::getOp"], [21, 2, 1, "_CPPv4NK4cvc54Term14getReal32ValueEv", "cvc5::Term::getReal32Value"], [21, 2, 1, "_CPPv4NK4cvc54Term14getReal64ValueEv", "cvc5::Term::getReal64Value"], [21, 2, 1, "_CPPv4NK4cvc54Term25getRealOrIntegerValueSignEv", "cvc5::Term::getRealOrIntegerValueSign"], [21, 2, 1, "_CPPv4NK4cvc54Term12getRealValueEv", "cvc5::Term::getRealValue"], [21, 2, 1, "_CPPv4NK4cvc54Term20getRoundingModeValueEv", "cvc5::Term::getRoundingModeValue"], [21, 2, 1, "_CPPv4NK4cvc54Term16getSequenceValueEv", "cvc5::Term::getSequenceValue"], [21, 2, 1, "_CPPv4NK4cvc54Term11getSetValueEv", "cvc5::Term::getSetValue"], [21, 2, 1, "_CPPv4NK4cvc54Term7getSortEv", "cvc5::Term::getSort"], [21, 2, 1, "_CPPv4NK4cvc54Term14getStringValueEv", "cvc5::Term::getStringValue"], [21, 2, 1, "_CPPv4NK4cvc54Term9getSymbolEv", "cvc5::Term::getSymbol"], [21, 2, 1, "_CPPv4NK4cvc54Term13getTupleValueEv", "cvc5::Term::getTupleValue"], [21, 2, 1, "_CPPv4NK4cvc54Term14getUInt32ValueEv", "cvc5::Term::getUInt32Value"], [21, 2, 1, "_CPPv4NK4cvc54Term14getUInt64ValueEv", "cvc5::Term::getUInt64Value"], [21, 2, 1, "_CPPv4NK4cvc54Term25getUninterpretedSortValueEv", "cvc5::Term::getUninterpretedSortValue"], [21, 2, 1, "_CPPv4NK4cvc54Term5hasOpEv", "cvc5::Term::hasOp"], [21, 2, 1, "_CPPv4NK4cvc54Term9hasSymbolEv", "cvc5::Term::hasSymbol"], [21, 2, 1, "_CPPv4NK4cvc54Term7impTermERK4Term", "cvc5::Term::impTerm"], [21, 3, 1, "_CPPv4NK4cvc54Term7impTermERK4Term", "cvc5::Term::impTerm::t"], [21, 2, 1, "_CPPv4NK4cvc54Term16isBitVectorValueEv", "cvc5::Term::isBitVectorValue"], [21, 2, 1, "_CPPv4NK4cvc54Term14isBooleanValueEv", "cvc5::Term::isBooleanValue"], [21, 2, 1, "_CPPv4NK4cvc54Term23isCardinalityConstraintEv", "cvc5::Term::isCardinalityConstraint"], [21, 2, 1, "_CPPv4NK4cvc54Term12isConstArrayEv", "cvc5::Term::isConstArray"], [21, 2, 1, "_CPPv4NK4cvc54Term18isFloatingPointNaNEv", "cvc5::Term::isFloatingPointNaN"], [21, 2, 1, "_CPPv4NK4cvc54Term21isFloatingPointNegInfEv", "cvc5::Term::isFloatingPointNegInf"], [21, 2, 1, "_CPPv4NK4cvc54Term22isFloatingPointNegZeroEv", "cvc5::Term::isFloatingPointNegZero"], [21, 2, 1, "_CPPv4NK4cvc54Term21isFloatingPointPosInfEv", "cvc5::Term::isFloatingPointPosInf"], [21, 2, 1, "_CPPv4NK4cvc54Term22isFloatingPointPosZeroEv", "cvc5::Term::isFloatingPointPosZero"], [21, 2, 1, "_CPPv4NK4cvc54Term20isFloatingPointValueEv", "cvc5::Term::isFloatingPointValue"], [21, 2, 1, "_CPPv4NK4cvc54Term12isInt32ValueEv", "cvc5::Term::isInt32Value"], [21, 2, 1, "_CPPv4NK4cvc54Term12isInt64ValueEv", "cvc5::Term::isInt64Value"], [21, 2, 1, "_CPPv4NK4cvc54Term14isIntegerValueEv", "cvc5::Term::isIntegerValue"], [21, 2, 1, "_CPPv4NK4cvc54Term6isNullEv", "cvc5::Term::isNull"], [21, 2, 1, "_CPPv4NK4cvc54Term13isReal32ValueEv", "cvc5::Term::isReal32Value"], [21, 2, 1, "_CPPv4NK4cvc54Term13isReal64ValueEv", "cvc5::Term::isReal64Value"], [21, 2, 1, "_CPPv4NK4cvc54Term11isRealValueEv", "cvc5::Term::isRealValue"], [21, 2, 1, "_CPPv4NK4cvc54Term19isRoundingModeValueEv", "cvc5::Term::isRoundingModeValue"], [21, 2, 1, "_CPPv4NK4cvc54Term15isSequenceValueEv", "cvc5::Term::isSequenceValue"], [21, 2, 1, "_CPPv4NK4cvc54Term10isSetValueEv", "cvc5::Term::isSetValue"], [21, 2, 1, "_CPPv4NK4cvc54Term13isStringValueEv", "cvc5::Term::isStringValue"], [21, 2, 1, "_CPPv4NK4cvc54Term12isTupleValueEv", "cvc5::Term::isTupleValue"], [21, 2, 1, "_CPPv4NK4cvc54Term13isUInt32ValueEv", "cvc5::Term::isUInt32Value"], [21, 2, 1, "_CPPv4NK4cvc54Term13isUInt64ValueEv", "cvc5::Term::isUInt64Value"], [21, 2, 1, "_CPPv4NK4cvc54Term24isUninterpretedSortValueEv", "cvc5::Term::isUninterpretedSortValue"], [21, 2, 1, "_CPPv4NK4cvc54Term7iteTermERK4TermRK4Term", "cvc5::Term::iteTerm"], [21, 3, 1, "_CPPv4NK4cvc54Term7iteTermERK4TermRK4Term", "cvc5::Term::iteTerm::else_t"], [21, 3, 1, "_CPPv4NK4cvc54Term7iteTermERK4TermRK4Term", "cvc5::Term::iteTerm::then_t"], [21, 2, 1, "_CPPv4NK4cvc54Term7notTermEv", "cvc5::Term::notTerm"], [21, 2, 1, "_CPPv4NK4cvc54TermneERK4Term", "cvc5::Term::operator!="], [21, 3, 1, "_CPPv4NK4cvc54TermneERK4Term", "cvc5::Term::operator!=::t"], [21, 2, 1, "_CPPv4NK4cvc54TermltERK4Term", "cvc5::Term::operator&lt;"], [21, 3, 1, "_CPPv4NK4cvc54TermltERK4Term", "cvc5::Term::operator&lt;::t"], [21, 2, 1, "_CPPv4NK4cvc54TermleERK4Term", "cvc5::Term::operator&lt;="], [21, 3, 1, "_CPPv4NK4cvc54TermleERK4Term", "cvc5::Term::operator&lt;=::t"], [21, 2, 1, "_CPPv4NK4cvc54TermeqERK4Term", "cvc5::Term::operator=="], [21, 3, 1, "_CPPv4NK4cvc54TermeqERK4Term", "cvc5::Term::operator==::t"], [21, 2, 1, "_CPPv4NK4cvc54TermgtERK4Term", "cvc5::Term::operator&gt;"], [21, 3, 1, "_CPPv4NK4cvc54TermgtERK4Term", "cvc5::Term::operator&gt;::t"], [21, 2, 1, "_CPPv4NK4cvc54TermgeERK4Term", "cvc5::Term::operator&gt;="], [21, 3, 1, "_CPPv4NK4cvc54TermgeERK4Term", "cvc5::Term::operator&gt;=::t"], [21, 2, 1, "_CPPv4NK4cvc54TermixE6size_t", "cvc5::Term::operator[]"], [21, 3, 1, "_CPPv4NK4cvc54TermixE6size_t", "cvc5::Term::operator[]::index"], [21, 2, 1, "_CPPv4NK4cvc54Term6orTermERK4Term", "cvc5::Term::orTerm"], [21, 3, 1, "_CPPv4NK4cvc54Term6orTermERK4Term", "cvc5::Term::orTerm::t"], [21, 2, 1, "_CPPv4NK4cvc54Term10substituteERK4TermRK4Term", "cvc5::Term::substitute"], [21, 2, 1, "_CPPv4NK4cvc54Term10substituteERKNSt6vectorI4TermEERKNSt6vectorI4TermEE", "cvc5::Term::substitute"], [21, 3, 1, "_CPPv4NK4cvc54Term10substituteERK4TermRK4Term", "cvc5::Term::substitute::replacement"], [21, 3, 1, "_CPPv4NK4cvc54Term10substituteERKNSt6vectorI4TermEERKNSt6vectorI4TermEE", "cvc5::Term::substitute::replacements"], [21, 3, 1, "_CPPv4NK4cvc54Term10substituteERK4TermRK4Term", "cvc5::Term::substitute::term"], [21, 3, 1, "_CPPv4NK4cvc54Term10substituteERKNSt6vectorI4TermEERKNSt6vectorI4TermEE", "cvc5::Term::substitute::terms"], [21, 2, 1, "_CPPv4NK4cvc54Term8toStringEv", "cvc5::Term::toString"], [21, 2, 1, "_CPPv4NK4cvc54Term7xorTermERK4Term", "cvc5::Term::xorTerm"], [21, 3, 1, "_CPPv4NK4cvc54Term7xorTermERK4Term", "cvc5::Term::xorTerm::t"], [21, 2, 1, "_CPPv4N4cvc54TermD0Ev", "cvc5::Term::~Term"], [10, 0, 1, "_CPPv4N4cvc54Kind14UNDEFINED_KINDE", "cvc5::UNDEFINED_KIND"], [10, 0, 1, "_CPPv4N4cvc54Kind24UNINTERPRETED_SORT_VALUEE", "cvc5::UNINTERPRETED_SORT_VALUE"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation14UNKNOWN_REASONE", "cvc5::UNKNOWN_REASON"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation11UNSUPPORTEDE", "cvc5::UNSUPPORTED"], [22, 5, 1, "_CPPv4N4cvc518UnknownExplanationE", "cvc5::UnknownExplanation"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation10INCOMPLETEE", "cvc5::UnknownExplanation::INCOMPLETE"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation11INTERRUPTEDE", "cvc5::UnknownExplanation::INTERRUPTED"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation6MEMOUTE", "cvc5::UnknownExplanation::MEMOUT"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation5OTHERE", "cvc5::UnknownExplanation::OTHER"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation19REQUIRES_FULL_CHECKE", "cvc5::UnknownExplanation::REQUIRES_FULL_CHECK"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation11RESOURCEOUTE", "cvc5::UnknownExplanation::RESOURCEOUT"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation7TIMEOUTE", "cvc5::UnknownExplanation::TIMEOUT"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation14UNKNOWN_REASONE", "cvc5::UnknownExplanation::UNKNOWN_REASON"], [22, 0, 1, "_CPPv4N4cvc518UnknownExplanation11UNSUPPORTEDE", "cvc5::UnknownExplanation::UNSUPPORTED"], [10, 0, 1, "_CPPv4N4cvc54Kind8VARIABLEE", "cvc5::VARIABLE"], [10, 0, 1, "_CPPv4N4cvc54Kind13VARIABLE_LISTE", "cvc5::VARIABLE_LIST"], [10, 0, 1, "_CPPv4N4cvc54Kind7WITNESSE", "cvc5::WITNESS"], [10, 0, 1, "_CPPv4N4cvc54Kind3XORE", "cvc5::XOR"], [86, 5, 1, "_CPPv4N4cvc58internal6PfRuleE", "cvc5::internal::PfRule"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11ALETHE_RULEE", "cvc5::internal::PfRule::ALETHE_RULE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11ALPHA_EQUIVE", "cvc5::internal::PfRule::ALPHA_EQUIV"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule8AND_ELIME", "cvc5::internal::PfRule::AND_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9AND_INTROE", "cvc5::internal::PfRule::AND_INTRO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10ANNOTATIONE", "cvc5::internal::PfRule::ANNOTATION"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14ARITH_MULT_NEGE", "cvc5::internal::PfRule::ARITH_MULT_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14ARITH_MULT_POSE", "cvc5::internal::PfRule::ARITH_MULT_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule15ARITH_MULT_SIGNE", "cvc5::internal::PfRule::ARITH_MULT_SIGN"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule18ARITH_MULT_TANGENTE", "cvc5::internal::PfRule::ARITH_MULT_TANGENT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule24ARITH_NL_COVERING_DIRECTE", "cvc5::internal::PfRule::ARITH_NL_COVERING_DIRECT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule27ARITH_NL_COVERING_RECURSIVEE", "cvc5::internal::PfRule::ARITH_NL_COVERING_RECURSIVE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule19ARITH_OP_ELIM_AXIOME", "cvc5::internal::PfRule::ARITH_OP_ELIM_AXIOM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule15ARITH_POLY_NORME", "cvc5::internal::PfRule::ARITH_POLY_NORM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12ARITH_SUM_UBE", "cvc5::internal::PfRule::ARITH_SUM_UB"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule32ARITH_TRANS_EXP_APPROX_ABOVE_NEGE", "cvc5::internal::PfRule::ARITH_TRANS_EXP_APPROX_ABOVE_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule32ARITH_TRANS_EXP_APPROX_ABOVE_POSE", "cvc5::internal::PfRule::ARITH_TRANS_EXP_APPROX_ABOVE_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule28ARITH_TRANS_EXP_APPROX_BELOWE", "cvc5::internal::PfRule::ARITH_TRANS_EXP_APPROX_BELOW"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule19ARITH_TRANS_EXP_NEGE", "cvc5::internal::PfRule::ARITH_TRANS_EXP_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule26ARITH_TRANS_EXP_POSITIVITYE", "cvc5::internal::PfRule::ARITH_TRANS_EXP_POSITIVITY"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule25ARITH_TRANS_EXP_SUPER_LINE", "cvc5::internal::PfRule::ARITH_TRANS_EXP_SUPER_LIN"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule20ARITH_TRANS_EXP_ZEROE", "cvc5::internal::PfRule::ARITH_TRANS_EXP_ZERO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14ARITH_TRANS_PIE", "cvc5::internal::PfRule::ARITH_TRANS_PI"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule33ARITH_TRANS_SINE_APPROX_ABOVE_NEGE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_APPROX_ABOVE_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule33ARITH_TRANS_SINE_APPROX_ABOVE_POSE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_APPROX_ABOVE_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule33ARITH_TRANS_SINE_APPROX_BELOW_NEGE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_APPROX_BELOW_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule33ARITH_TRANS_SINE_APPROX_BELOW_POSE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_APPROX_BELOW_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule23ARITH_TRANS_SINE_BOUNDSE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_BOUNDS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule22ARITH_TRANS_SINE_SHIFTE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_SHIFT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule25ARITH_TRANS_SINE_SYMMETRYE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_SYMMETRY"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule27ARITH_TRANS_SINE_TANGENT_PIE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_TANGENT_PI"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule29ARITH_TRANS_SINE_TANGENT_ZEROE", "cvc5::internal::PfRule::ARITH_TRANS_SINE_TANGENT_ZERO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16ARITH_TRICHOTOMYE", "cvc5::internal::PfRule::ARITH_TRICHOTOMY"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule22ARRAYS_EQ_RANGE_EXPANDE", "cvc5::internal::PfRule::ARRAYS_EQ_RANGE_EXPAND"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10ARRAYS_EXTE", "cvc5::internal::PfRule::ARRAYS_EXT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule22ARRAYS_READ_OVER_WRITEE", "cvc5::internal::PfRule::ARRAYS_READ_OVER_WRITE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule24ARRAYS_READ_OVER_WRITE_1E", "cvc5::internal::PfRule::ARRAYS_READ_OVER_WRITE_1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule29ARRAYS_READ_OVER_WRITE_CONTRAE", "cvc5::internal::PfRule::ARRAYS_READ_OVER_WRITE_CONTRA"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule6ASSUMEE", "cvc5::internal::PfRule::ASSUME"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11BV_BITBLASTE", "cvc5::internal::PfRule::BV_BITBLAST"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16BV_BITBLAST_STEPE", "cvc5::internal::PfRule::BV_BITBLAST_STEP"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13BV_EAGER_ATOME", "cvc5::internal::PfRule::BV_EAGER_ATOM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16CHAIN_RESOLUTIONE", "cvc5::internal::PfRule::CHAIN_RESOLUTION"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11CNF_AND_NEGE", "cvc5::internal::PfRule::CNF_AND_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11CNF_AND_POSE", "cvc5::internal::PfRule::CNF_AND_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14CNF_EQUIV_NEG1E", "cvc5::internal::PfRule::CNF_EQUIV_NEG1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14CNF_EQUIV_NEG2E", "cvc5::internal::PfRule::CNF_EQUIV_NEG2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14CNF_EQUIV_POS1E", "cvc5::internal::PfRule::CNF_EQUIV_POS1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14CNF_EQUIV_POS2E", "cvc5::internal::PfRule::CNF_EQUIV_POS2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16CNF_IMPLIES_NEG1E", "cvc5::internal::PfRule::CNF_IMPLIES_NEG1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16CNF_IMPLIES_NEG2E", "cvc5::internal::PfRule::CNF_IMPLIES_NEG2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule15CNF_IMPLIES_POSE", "cvc5::internal::PfRule::CNF_IMPLIES_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_ITE_NEG1E", "cvc5::internal::PfRule::CNF_ITE_NEG1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_ITE_NEG2E", "cvc5::internal::PfRule::CNF_ITE_NEG2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_ITE_NEG3E", "cvc5::internal::PfRule::CNF_ITE_NEG3"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_ITE_POS1E", "cvc5::internal::PfRule::CNF_ITE_POS1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_ITE_POS2E", "cvc5::internal::PfRule::CNF_ITE_POS2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_ITE_POS3E", "cvc5::internal::PfRule::CNF_ITE_POS3"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10CNF_OR_NEGE", "cvc5::internal::PfRule::CNF_OR_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10CNF_OR_POSE", "cvc5::internal::PfRule::CNF_OR_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_XOR_NEG1E", "cvc5::internal::PfRule::CNF_XOR_NEG1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_XOR_NEG2E", "cvc5::internal::PfRule::CNF_XOR_NEG2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_XOR_POS1E", "cvc5::internal::PfRule::CNF_XOR_POS1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CNF_XOR_POS2E", "cvc5::internal::PfRule::CNF_XOR_POS2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule15CONCAT_CONFLICTE", "cvc5::internal::PfRule::CONCAT_CONFLICT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CONCAT_CPROPE", "cvc5::internal::PfRule::CONCAT_CPROP"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13CONCAT_CSPLITE", "cvc5::internal::PfRule::CONCAT_CSPLIT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9CONCAT_EQE", "cvc5::internal::PfRule::CONCAT_EQ"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CONCAT_LPROPE", "cvc5::internal::PfRule::CONCAT_LPROP"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CONCAT_SPLITE", "cvc5::internal::PfRule::CONCAT_SPLIT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12CONCAT_UNIFYE", "cvc5::internal::PfRule::CONCAT_UNIFY"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule4CONGE", "cvc5::internal::PfRule::CONG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule6CONTRAE", "cvc5::internal::PfRule::CONTRA"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule8DT_CLASHE", "cvc5::internal::PfRule::DT_CLASH"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11DT_COLLAPSEE", "cvc5::internal::PfRule::DT_COLLAPSE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule7DT_INSTE", "cvc5::internal::PfRule::DT_INST"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule8DT_SPLITE", "cvc5::internal::PfRule::DT_SPLIT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule7DT_UNIFE", "cvc5::internal::PfRule::DT_UNIF"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11EQUIV_ELIM1E", "cvc5::internal::PfRule::EQUIV_ELIM1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11EQUIV_ELIM2E", "cvc5::internal::PfRule::EQUIV_ELIM2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10EQ_RESOLVEE", "cvc5::internal::PfRule::EQ_RESOLVE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule8EVALUATEE", "cvc5::internal::PfRule::EVALUATE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9FACTORINGE", "cvc5::internal::PfRule::FACTORING"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10FALSE_ELIME", "cvc5::internal::PfRule::FALSE_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11FALSE_INTROE", "cvc5::internal::PfRule::FALSE_INTRO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13HO_APP_ENCODEE", "cvc5::internal::PfRule::HO_APP_ENCODE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule7HO_CONGE", "cvc5::internal::PfRule::HO_CONG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12IMPLIES_ELIME", "cvc5::internal::PfRule::IMPLIES_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11INSTANTIATEE", "cvc5::internal::PfRule::INSTANTIATE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12INT_TIGHT_LBE", "cvc5::internal::PfRule::INT_TIGHT_LB"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12INT_TIGHT_UBE", "cvc5::internal::PfRule::INT_TIGHT_UB"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9ITE_ELIM1E", "cvc5::internal::PfRule::ITE_ELIM1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9ITE_ELIM2E", "cvc5::internal::PfRule::ITE_ELIM2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9LFSC_RULEE", "cvc5::internal::PfRule::LFSC_RULE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule24MACRO_ARITH_SCALE_SUM_UBE", "cvc5::internal::PfRule::MACRO_ARITH_SCALE_SUM_UB"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16MACRO_RESOLUTIONE", "cvc5::internal::PfRule::MACRO_RESOLUTION"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule22MACRO_RESOLUTION_TRUSTE", "cvc5::internal::PfRule::MACRO_RESOLUTION_TRUST"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule17MACRO_SR_EQ_INTROE", "cvc5::internal::PfRule::MACRO_SR_EQ_INTRO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule18MACRO_SR_PRED_ELIME", "cvc5::internal::PfRule::MACRO_SR_PRED_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule19MACRO_SR_PRED_INTROE", "cvc5::internal::PfRule::MACRO_SR_PRED_INTRO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule23MACRO_SR_PRED_TRANSFORME", "cvc5::internal::PfRule::MACRO_SR_PRED_TRANSFORM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12MODUS_PONENSE", "cvc5::internal::PfRule::MODUS_PONENS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule7NOT_ANDE", "cvc5::internal::PfRule::NOT_AND"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule15NOT_EQUIV_ELIM1E", "cvc5::internal::PfRule::NOT_EQUIV_ELIM1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule15NOT_EQUIV_ELIM2E", "cvc5::internal::PfRule::NOT_EQUIV_ELIM2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule17NOT_IMPLIES_ELIM1E", "cvc5::internal::PfRule::NOT_IMPLIES_ELIM1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule17NOT_IMPLIES_ELIM2E", "cvc5::internal::PfRule::NOT_IMPLIES_ELIM2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13NOT_ITE_ELIM1E", "cvc5::internal::PfRule::NOT_ITE_ELIM1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13NOT_ITE_ELIM2E", "cvc5::internal::PfRule::NOT_ITE_ELIM2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12NOT_NOT_ELIME", "cvc5::internal::PfRule::NOT_NOT_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule11NOT_OR_ELIME", "cvc5::internal::PfRule::NOT_OR_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13NOT_XOR_ELIM1E", "cvc5::internal::PfRule::NOT_XOR_ELIM1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13NOT_XOR_ELIM2E", "cvc5::internal::PfRule::NOT_XOR_ELIM2"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10PREPROCESSE", "cvc5::internal::PfRule::PREPROCESS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16PREPROCESS_LEMMAE", "cvc5::internal::PfRule::PREPROCESS_LEMMA"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule22QUANTIFIERS_PREPROCESSE", "cvc5::internal::PfRule::QUANTIFIERS_PREPROCESS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule4REFLE", "cvc5::internal::PfRule::REFL"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule25REMOVE_TERM_FORMULA_AXIOME", "cvc5::internal::PfRule::REMOVE_TERM_FORMULA_AXIOM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10REORDERINGE", "cvc5::internal::PfRule::REORDERING"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10RESOLUTIONE", "cvc5::internal::PfRule::RESOLUTION"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule7REWRITEE", "cvc5::internal::PfRule::REWRITE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule7RE_ELIME", "cvc5::internal::PfRule::RE_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule8RE_INTERE", "cvc5::internal::PfRule::RE_INTER"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13RE_UNFOLD_NEGE", "cvc5::internal::PfRule::RE_UNFOLD_NEG"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule26RE_UNFOLD_NEG_CONCAT_FIXEDE", "cvc5::internal::PfRule::RE_UNFOLD_NEG_CONCAT_FIXED"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13RE_UNFOLD_POSE", "cvc5::internal::PfRule::RE_UNFOLD_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14SAT_REFUTATIONE", "cvc5::internal::PfRule::SAT_REFUTATION"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule5SCOPEE", "cvc5::internal::PfRule::SCOPE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9SKOLEMIZEE", "cvc5::internal::PfRule::SKOLEMIZE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12SKOLEM_INTROE", "cvc5::internal::PfRule::SKOLEM_INTRO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule5SPLITE", "cvc5::internal::PfRule::SPLIT"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule15STRING_CODE_INJE", "cvc5::internal::PfRule::STRING_CODE_INJ"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16STRING_DECOMPOSEE", "cvc5::internal::PfRule::STRING_DECOMPOSE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule22STRING_EAGER_REDUCTIONE", "cvc5::internal::PfRule::STRING_EAGER_REDUCTION"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16STRING_INFERENCEE", "cvc5::internal::PfRule::STRING_INFERENCE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule23STRING_LENGTH_NON_EMPTYE", "cvc5::internal::PfRule::STRING_LENGTH_NON_EMPTY"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule17STRING_LENGTH_POSE", "cvc5::internal::PfRule::STRING_LENGTH_POS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16STRING_REDUCTIONE", "cvc5::internal::PfRule::STRING_REDUCTION"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule19STRING_SEQ_UNIT_INJE", "cvc5::internal::PfRule::STRING_SEQ_UNIT_INJ"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule4SUBSE", "cvc5::internal::PfRule::SUBS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule4SYMME", "cvc5::internal::PfRule::SYMM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule17THEORY_EXPAND_DEFE", "cvc5::internal::PfRule::THEORY_EXPAND_DEF"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule16THEORY_INFERENCEE", "cvc5::internal::PfRule::THEORY_INFERENCE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule12THEORY_LEMMAE", "cvc5::internal::PfRule::THEORY_LEMMA"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule17THEORY_PREPROCESSE", "cvc5::internal::PfRule::THEORY_PREPROCESS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule23THEORY_PREPROCESS_LEMMAE", "cvc5::internal::PfRule::THEORY_PREPROCESS_LEMMA"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14THEORY_REWRITEE", "cvc5::internal::PfRule::THEORY_REWRITE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule5TRANSE", "cvc5::internal::PfRule::TRANS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9TRUE_ELIME", "cvc5::internal::PfRule::TRUE_ELIM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10TRUE_INTROE", "cvc5::internal::PfRule::TRUE_INTRO"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13TRUST_REWRITEE", "cvc5::internal::PfRule::TRUST_REWRITE"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule10TRUST_SUBSE", "cvc5::internal::PfRule::TRUST_SUBS"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13TRUST_SUBS_EQE", "cvc5::internal::PfRule::TRUST_SUBS_EQ"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule14TRUST_SUBS_MAPE", "cvc5::internal::PfRule::TRUST_SUBS_MAP"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule7UNKNOWNE", "cvc5::internal::PfRule::UNKNOWN"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule13WITNESS_AXIOME", "cvc5::internal::PfRule::WITNESS_AXIOM"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9XOR_ELIM1E", "cvc5::internal::PfRule::XOR_ELIM1"], [86, 0, 1, "_CPPv4N4cvc58internal6PfRule9XOR_ELIM2E", "cvc5::internal::PfRule::XOR_ELIM2"], [11, 4, 1, "_CPPv4N4cvc55modesE", "cvc5::modes"], [11, 5, 1, "_CPPv4N4cvc55modes15BlockModelsModeE", "cvc5::modes::BlockModelsMode"], [11, 0, 1, "_CPPv4N4cvc55modes15BlockModelsMode8LITERALSE", "cvc5::modes::BlockModelsMode::LITERALS"], [11, 0, 1, "_CPPv4N4cvc55modes15BlockModelsMode6VALUESE", "cvc5::modes::BlockModelsMode::VALUES"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType25LEARNED_LIT_CONSTANT_PROPE", "cvc5::modes::LEARNED_LIT_CONSTANT_PROP"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType17LEARNED_LIT_INPUTE", "cvc5::modes::LEARNED_LIT_INPUT"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType20LEARNED_LIT_INTERNALE", "cvc5::modes::LEARNED_LIT_INTERNAL"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType22LEARNED_LIT_PREPROCESSE", "cvc5::modes::LEARNED_LIT_PREPROCESS"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType29LEARNED_LIT_PREPROCESS_SOLVEDE", "cvc5::modes::LEARNED_LIT_PREPROCESS_SOLVED"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType20LEARNED_LIT_SOLVABLEE", "cvc5::modes::LEARNED_LIT_SOLVABLE"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType19LEARNED_LIT_UNKNOWNE", "cvc5::modes::LEARNED_LIT_UNKNOWN"], [11, 0, 1, "_CPPv4N4cvc55modes15BlockModelsMode8LITERALSE", "cvc5::modes::LITERALS"], [11, 5, 1, "_CPPv4N4cvc55modes14LearnedLitTypeE", "cvc5::modes::LearnedLitType"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType25LEARNED_LIT_CONSTANT_PROPE", "cvc5::modes::LearnedLitType::LEARNED_LIT_CONSTANT_PROP"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType17LEARNED_LIT_INPUTE", "cvc5::modes::LearnedLitType::LEARNED_LIT_INPUT"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType20LEARNED_LIT_INTERNALE", "cvc5::modes::LearnedLitType::LEARNED_LIT_INTERNAL"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType22LEARNED_LIT_PREPROCESSE", "cvc5::modes::LearnedLitType::LEARNED_LIT_PREPROCESS"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType29LEARNED_LIT_PREPROCESS_SOLVEDE", "cvc5::modes::LearnedLitType::LEARNED_LIT_PREPROCESS_SOLVED"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType20LEARNED_LIT_SOLVABLEE", "cvc5::modes::LearnedLitType::LEARNED_LIT_SOLVABLE"], [11, 0, 1, "_CPPv4N4cvc55modes14LearnedLitType19LEARNED_LIT_UNKNOWNE", "cvc5::modes::LearnedLitType::LEARNED_LIT_UNKNOWN"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent20PROOF_COMPONENT_FULLE", "cvc5::modes::PROOF_COMPONENT_FULL"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent26PROOF_COMPONENT_PREPROCESSE", "cvc5::modes::PROOF_COMPONENT_PREPROCESS"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent30PROOF_COMPONENT_RAW_PREPROCESSE", "cvc5::modes::PROOF_COMPONENT_RAW_PREPROCESS"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent19PROOF_COMPONENT_SATE", "cvc5::modes::PROOF_COMPONENT_SAT"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent29PROOF_COMPONENT_THEORY_LEMMASE", "cvc5::modes::PROOF_COMPONENT_THEORY_LEMMAS"], [11, 5, 1, "_CPPv4N4cvc55modes14ProofComponentE", "cvc5::modes::ProofComponent"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent20PROOF_COMPONENT_FULLE", "cvc5::modes::ProofComponent::PROOF_COMPONENT_FULL"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent26PROOF_COMPONENT_PREPROCESSE", "cvc5::modes::ProofComponent::PROOF_COMPONENT_PREPROCESS"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent30PROOF_COMPONENT_RAW_PREPROCESSE", "cvc5::modes::ProofComponent::PROOF_COMPONENT_RAW_PREPROCESS"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent19PROOF_COMPONENT_SATE", "cvc5::modes::ProofComponent::PROOF_COMPONENT_SAT"], [11, 0, 1, "_CPPv4N4cvc55modes14ProofComponent29PROOF_COMPONENT_THEORY_LEMMASE", "cvc5::modes::ProofComponent::PROOF_COMPONENT_THEORY_LEMMAS"], [11, 0, 1, "_CPPv4N4cvc55modes15BlockModelsMode6VALUESE", "cvc5::modes::VALUES"], [11, 2, 1, "_CPPv4N4cvc55modeslsERNSt7ostreamE14LearnedLitType", "cvc5::modes::operator&lt;&lt;"], [11, 2, 1, "_CPPv4N4cvc55modeslsERNSt7ostreamE14ProofComponent", "cvc5::modes::operator&lt;&lt;"], [11, 3, 1, "_CPPv4N4cvc55modeslsERNSt7ostreamE14LearnedLitType", "cvc5::modes::operator&lt;&lt;::ltype"], [11, 3, 1, "_CPPv4N4cvc55modeslsERNSt7ostreamE14LearnedLitType", "cvc5::modes::operator&lt;&lt;::out"], [11, 3, 1, "_CPPv4N4cvc55modeslsERNSt7ostreamE14ProofComponent", "cvc5::modes::operator&lt;&lt;::out"], [11, 3, 1, "_CPPv4N4cvc55modeslsERNSt7ostreamE14ProofComponent", "cvc5::modes::operator&lt;&lt;::pc"], [18, 2, 1, "_CPPv4N4cvc5lsERNSt7ostreamERK4Sort", "cvc5::operator&lt;&lt;"], [18, 3, 1, "_CPPv4N4cvc5lsERNSt7ostreamERK4Sort", "cvc5::operator&lt;&lt;::out"], [18, 3, 1, "_CPPv4N4cvc5lsERNSt7ostreamERK4Sort", "cvc5::operator&lt;&lt;::s"], [10, 1, 1, "_CPPv4IENSt4hashIN4cvc54KindEEE", "std::hash&lt;cvc5::Kind&gt;"], [10, 2, 1, "_CPPv4NKSt4hashIN4cvc54KindEEclEN4cvc54KindE", "std::hash&lt;cvc5::Kind&gt;::operator()"], [10, 3, 1, "_CPPv4NKSt4hashIN4cvc54KindEEclEN4cvc54KindE", "std::hash&lt;cvc5::Kind&gt;::operator()::k"], [12, 1, 1, "_CPPv4IENSt4hashIN4cvc52OpEEE", "std::hash&lt;cvc5::Op&gt;"], [12, 2, 1, "_CPPv4NKSt4hashIN4cvc52OpEEclERKN4cvc52OpE", "std::hash&lt;cvc5::Op&gt;::operator()"], [12, 3, 1, "_CPPv4NKSt4hashIN4cvc52OpEEclERKN4cvc52OpE", "std::hash&lt;cvc5::Op&gt;::operator()::t"], [18, 1, 1, "_CPPv4IENSt4hashIN4cvc54SortEEE", "std::hash&lt;cvc5::Sort&gt;"], [18, 2, 1, "_CPPv4NKSt4hashIN4cvc54SortEEclERKN4cvc54SortE", "std::hash&lt;cvc5::Sort&gt;::operator()"], [18, 3, 1, "_CPPv4NKSt4hashIN4cvc54SortEEclERKN4cvc54SortE", "std::hash&lt;cvc5::Sort&gt;::operator()::s"], [21, 1, 1, "_CPPv4IENSt4hashIN4cvc54TermEEE", "std::hash&lt;cvc5::Term&gt;"], [21, 2, 1, "_CPPv4NKSt4hashIN4cvc54TermEEclERKN4cvc54TermE", "std::hash&lt;cvc5::Term&gt;::operator()"], [21, 3, 1, "_CPPv4NKSt4hashIN4cvc54TermEEclERKN4cvc54TermE", "std::hash&lt;cvc5::Term&gt;::operator()::t"]], "cvc5": [[26, 8, 1, "", "Datatype"], [27, 8, 1, "", "DatatypeConstructor"], [28, 8, 1, "", "DatatypeConstructorDecl"], [29, 8, 1, "", "DatatypeDecl"], [30, 8, 1, "", "DatatypeSelector"], [31, 8, 1, "", "Grammar"], [32, 8, 1, "", "Kind"], [33, 8, 1, "", "Op"], [36, 8, 1, "", "Result"], [37, 8, 1, "", "RoundingMode"], [38, 8, 1, "", "Solver"], [39, 8, 1, "", "Sort"], [40, 8, 1, "", "Statistics"], [41, 8, 1, "", "SynthResult"], [42, 8, 1, "", "Term"], [43, 8, 1, "", "UnknownExplanation"]], "cvc5.Datatype": [[26, 9, 1, "", "__getitem__"], [26, 9, 1, "", "__iter__"], [26, 9, 1, "", "getConstructor"], [26, 9, 1, "", "getName"], [26, 9, 1, "", "getNumConstructors"], [26, 9, 1, "", "getParameters"], [26, 9, 1, "", "getSelector"], [26, 9, 1, "", "isCodatatype"], [26, 9, 1, "", "isFinite"], [26, 9, 1, "", "isNull"], [26, 9, 1, "", "isParametric"], [26, 9, 1, "", "isRecord"], [26, 9, 1, "", "isTuple"], [26, 9, 1, "", "isWellFounded"]], "cvc5.DatatypeConstructor": [[27, 9, 1, "", "__getitem__"], [27, 9, 1, "", "__iter__"], [27, 9, 1, "", "getInstantiatedTerm"], [27, 9, 1, "", "getName"], [27, 9, 1, "", "getNumSelectors"], [27, 9, 1, "", "getSelector"], [27, 9, 1, "", "getTerm"], [27, 9, 1, "", "getTesterTerm"], [27, 9, 1, "", "isNull"]], "cvc5.DatatypeConstructorDecl": [[28, 9, 1, "", "addSelector"], [28, 9, 1, "", "addSelectorSelf"], [28, 9, 1, "", "addSelectorUnresolved"], [28, 9, 1, "", "isNull"]], "cvc5.DatatypeDecl": [[29, 9, 1, "", "addConstructor"], [29, 9, 1, "", "getName"], [29, 9, 1, "", "getNumConstructors"], [29, 9, 1, "", "isNull"], [29, 9, 1, "", "isParametric"]], "cvc5.DatatypeSelector": [[30, 9, 1, "", "getCodomainSort"], [30, 9, 1, "", "getName"], [30, 9, 1, "", "getTerm"], [30, 9, 1, "", "getUpdaterTerm"], [30, 9, 1, "", "isNull"]], "cvc5.Grammar": [[31, 9, 1, "", "addAnyConstant"], [31, 9, 1, "", "addAnyVariable"], [31, 9, 1, "", "addRule"], [31, 9, 1, "", "addRules"]], "cvc5.Kind": [[32, 10, 1, "", "ABS"], [32, 10, 1, "", "ADD"], [32, 10, 1, "", "AND"], [32, 10, 1, "", "APPLY_CONSTRUCTOR"], [32, 10, 1, "", "APPLY_SELECTOR"], [32, 10, 1, "", "APPLY_TESTER"], [32, 10, 1, "", "APPLY_UF"], [32, 10, 1, "", "APPLY_UPDATER"], [32, 10, 1, "", "ARCCOSECANT"], [32, 10, 1, "", "ARCCOSINE"], [32, 10, 1, "", "ARCCOTANGENT"], [32, 10, 1, "", "ARCSECANT"], [32, 10, 1, "", "ARCSINE"], [32, 10, 1, "", "ARCTANGENT"], [32, 10, 1, "", "BAG_CARD"], [32, 10, 1, "", "BAG_CHOOSE"], [32, 10, 1, "", "BAG_COUNT"], [32, 10, 1, "", "BAG_DIFFERENCE_REMOVE"], [32, 10, 1, "", "BAG_DIFFERENCE_SUBTRACT"], [32, 10, 1, "", "BAG_DUPLICATE_REMOVAL"], [32, 10, 1, "", "BAG_EMPTY"], [32, 10, 1, "", "BAG_FILTER"], [32, 10, 1, "", "BAG_FOLD"], [32, 10, 1, "", "BAG_FROM_SET"], [32, 10, 1, "", "BAG_INTER_MIN"], [32, 10, 1, "", "BAG_IS_SINGLETON"], [32, 10, 1, "", "BAG_MAKE"], [32, 10, 1, "", "BAG_MAP"], [32, 10, 1, "", "BAG_MEMBER"], [32, 10, 1, "", "BAG_PARTITION"], [32, 10, 1, "", "BAG_SUBBAG"], [32, 10, 1, "", "BAG_TO_SET"], [32, 10, 1, "", "BAG_UNION_DISJOINT"], [32, 10, 1, "", "BAG_UNION_MAX"], [32, 10, 1, "", "BITVECTOR_ADD"], [32, 10, 1, "", "BITVECTOR_AND"], [32, 10, 1, "", "BITVECTOR_ASHR"], [32, 10, 1, "", "BITVECTOR_COMP"], [32, 10, 1, "", "BITVECTOR_CONCAT"], [32, 10, 1, "", "BITVECTOR_EXTRACT"], [32, 10, 1, "", "BITVECTOR_ITE"], [32, 10, 1, "", "BITVECTOR_LSHR"], [32, 10, 1, "", "BITVECTOR_MULT"], [32, 10, 1, "", "BITVECTOR_NAND"], [32, 10, 1, "", "BITVECTOR_NEG"], [32, 10, 1, "", "BITVECTOR_NOR"], [32, 10, 1, "", "BITVECTOR_NOT"], [32, 10, 1, "", "BITVECTOR_OR"], [32, 10, 1, "", "BITVECTOR_REDAND"], [32, 10, 1, "", "BITVECTOR_REDOR"], [32, 10, 1, "", "BITVECTOR_REPEAT"], [32, 10, 1, "", "BITVECTOR_ROTATE_LEFT"], [32, 10, 1, "", "BITVECTOR_ROTATE_RIGHT"], [32, 10, 1, "", "BITVECTOR_SDIV"], [32, 10, 1, "", "BITVECTOR_SGE"], [32, 10, 1, "", "BITVECTOR_SGT"], [32, 10, 1, "", "BITVECTOR_SHL"], [32, 10, 1, "", "BITVECTOR_SIGN_EXTEND"], [32, 10, 1, "", "BITVECTOR_SLE"], [32, 10, 1, "", "BITVECTOR_SLT"], [32, 10, 1, "", "BITVECTOR_SLTBV"], [32, 10, 1, "", "BITVECTOR_SMOD"], [32, 10, 1, "", "BITVECTOR_SREM"], [32, 10, 1, "", "BITVECTOR_SUB"], [32, 10, 1, "", "BITVECTOR_TO_NAT"], [32, 10, 1, "", "BITVECTOR_UDIV"], [32, 10, 1, "", "BITVECTOR_UGE"], [32, 10, 1, "", "BITVECTOR_UGT"], [32, 10, 1, "", "BITVECTOR_ULE"], [32, 10, 1, "", "BITVECTOR_ULT"], [32, 10, 1, "", "BITVECTOR_ULTBV"], [32, 10, 1, "", "BITVECTOR_UREM"], [32, 10, 1, "", "BITVECTOR_XNOR"], [32, 10, 1, "", "BITVECTOR_XOR"], [32, 10, 1, "", "BITVECTOR_ZERO_EXTEND"], [32, 10, 1, "", "CARDINALITY_CONSTRAINT"], [32, 10, 1, "", "CONSTANT"], [32, 10, 1, "", "CONST_ARRAY"], [32, 10, 1, "", "CONST_BITVECTOR"], [32, 10, 1, "", "CONST_BOOLEAN"], [32, 10, 1, "", "CONST_FLOATINGPOINT"], [32, 10, 1, "", "CONST_INTEGER"], [32, 10, 1, "", "CONST_RATIONAL"], [32, 10, 1, "", "CONST_ROUNDINGMODE"], [32, 10, 1, "", "CONST_SEQUENCE"], [32, 10, 1, "", "CONST_STRING"], [32, 10, 1, "", "COSECANT"], [32, 10, 1, "", "COSINE"], [32, 10, 1, "", "COTANGENT"], [32, 10, 1, "", "DISTINCT"], [32, 10, 1, "", "DIVISIBLE"], [32, 10, 1, "", "DIVISION"], [32, 10, 1, "", "EQUAL"], [32, 10, 1, "", "EQ_RANGE"], [32, 10, 1, "", "EXISTS"], [32, 10, 1, "", "EXPONENTIAL"], [32, 10, 1, "", "FLOATINGPOINT_ABS"], [32, 10, 1, "", "FLOATINGPOINT_ADD"], [32, 10, 1, "", "FLOATINGPOINT_DIV"], [32, 10, 1, "", "FLOATINGPOINT_EQ"], [32, 10, 1, "", "FLOATINGPOINT_FMA"], [32, 10, 1, "", "FLOATINGPOINT_FP"], [32, 10, 1, "", "FLOATINGPOINT_GEQ"], [32, 10, 1, "", "FLOATINGPOINT_GT"], [32, 10, 1, "", "FLOATINGPOINT_IS_INF"], [32, 10, 1, "", "FLOATINGPOINT_IS_NAN"], [32, 10, 1, "", "FLOATINGPOINT_IS_NEG"], [32, 10, 1, "", "FLOATINGPOINT_IS_NORMAL"], [32, 10, 1, "", "FLOATINGPOINT_IS_POS"], [32, 10, 1, "", "FLOATINGPOINT_IS_SUBNORMAL"], [32, 10, 1, "", "FLOATINGPOINT_IS_ZERO"], [32, 10, 1, "", "FLOATINGPOINT_LEQ"], [32, 10, 1, "", "FLOATINGPOINT_LT"], [32, 10, 1, "", "FLOATINGPOINT_MAX"], [32, 10, 1, "", "FLOATINGPOINT_MIN"], [32, 10, 1, "", "FLOATINGPOINT_MULT"], [32, 10, 1, "", "FLOATINGPOINT_NEG"], [32, 10, 1, "", "FLOATINGPOINT_REM"], [32, 10, 1, "", "FLOATINGPOINT_RTI"], [32, 10, 1, "", "FLOATINGPOINT_SQRT"], [32, 10, 1, "", "FLOATINGPOINT_SUB"], [32, 10, 1, "", "FLOATINGPOINT_TO_FP_FROM_FP"], [32, 10, 1, "", "FLOATINGPOINT_TO_FP_FROM_IEEE_BV"], [32, 10, 1, "", "FLOATINGPOINT_TO_FP_FROM_REAL"], [32, 10, 1, "", "FLOATINGPOINT_TO_FP_FROM_SBV"], [32, 10, 1, "", "FLOATINGPOINT_TO_FP_FROM_UBV"], [32, 10, 1, "", "FLOATINGPOINT_TO_REAL"], [32, 10, 1, "", "FLOATINGPOINT_TO_SBV"], [32, 10, 1, "", "FLOATINGPOINT_TO_UBV"], [32, 10, 1, "", "FORALL"], [32, 10, 1, "", "GEQ"], [32, 10, 1, "", "GT"], [32, 10, 1, "", "HO_APPLY"], [32, 10, 1, "", "IAND"], [32, 10, 1, "", "IMPLIES"], [32, 10, 1, "", "INST_ADD_TO_POOL"], [32, 10, 1, "", "INST_ATTRIBUTE"], [32, 10, 1, "", "INST_NO_PATTERN"], [32, 10, 1, "", "INST_PATTERN"], [32, 10, 1, "", "INST_PATTERN_LIST"], [32, 10, 1, "", "INST_POOL"], [32, 10, 1, "", "INTERNAL_KIND"], [32, 10, 1, "", "INTS_DIVISION"], [32, 10, 1, "", "INTS_MODULUS"], [32, 10, 1, "", "INT_TO_BITVECTOR"], [32, 10, 1, "", "IS_INTEGER"], [32, 10, 1, "", "ITE"], [32, 10, 1, "", "LAMBDA"], [32, 10, 1, "", "LAST_KIND"], [32, 10, 1, "", "LEQ"], [32, 10, 1, "", "LT"], [32, 10, 1, "", "MATCH"], [32, 10, 1, "", "MATCH_BIND_CASE"], [32, 10, 1, "", "MATCH_CASE"], [32, 10, 1, "", "MULT"], [32, 10, 1, "", "NEG"], [32, 10, 1, "", "NOT"], [32, 10, 1, "", "NULL_TERM"], [32, 10, 1, "", "OR"], [32, 10, 1, "", "PI"], [32, 10, 1, "", "POW"], [32, 10, 1, "", "POW2"], [32, 10, 1, "", "REGEXP_ALL"], [32, 10, 1, "", "REGEXP_ALLCHAR"], [32, 10, 1, "", "REGEXP_COMPLEMENT"], [32, 10, 1, "", "REGEXP_CONCAT"], [32, 10, 1, "", "REGEXP_DIFF"], [32, 10, 1, "", "REGEXP_INTER"], [32, 10, 1, "", "REGEXP_LOOP"], [32, 10, 1, "", "REGEXP_NONE"], [32, 10, 1, "", "REGEXP_OPT"], [32, 10, 1, "", "REGEXP_PLUS"], [32, 10, 1, "", "REGEXP_RANGE"], [32, 10, 1, "", "REGEXP_REPEAT"], [32, 10, 1, "", "REGEXP_STAR"], [32, 10, 1, "", "REGEXP_UNION"], [32, 10, 1, "", "RELATION_AGGREGATE"], [32, 10, 1, "", "RELATION_GROUP"], [32, 10, 1, "", "RELATION_IDEN"], [32, 10, 1, "", "RELATION_JOIN"], [32, 10, 1, "", "RELATION_JOIN_IMAGE"], [32, 10, 1, "", "RELATION_PRODUCT"], [32, 10, 1, "", "RELATION_PROJECT"], [32, 10, 1, "", "RELATION_TCLOSURE"], [32, 10, 1, "", "RELATION_TRANSPOSE"], [32, 10, 1, "", "SECANT"], [32, 10, 1, "", "SELECT"], [32, 10, 1, "", "SEP_EMP"], [32, 10, 1, "", "SEP_NIL"], [32, 10, 1, "", "SEP_PTO"], [32, 10, 1, "", "SEP_STAR"], [32, 10, 1, "", "SEP_WAND"], [32, 10, 1, "", "SEQ_AT"], [32, 10, 1, "", "SEQ_CONCAT"], [32, 10, 1, "", "SEQ_CONTAINS"], [32, 10, 1, "", "SEQ_EXTRACT"], [32, 10, 1, "", "SEQ_INDEXOF"], [32, 10, 1, "", "SEQ_LENGTH"], [32, 10, 1, "", "SEQ_NTH"], [32, 10, 1, "", "SEQ_PREFIX"], [32, 10, 1, "", "SEQ_REPLACE"], [32, 10, 1, "", "SEQ_REPLACE_ALL"], [32, 10, 1, "", "SEQ_REV"], [32, 10, 1, "", "SEQ_SUFFIX"], [32, 10, 1, "", "SEQ_UNIT"], [32, 10, 1, "", "SEQ_UPDATE"], [32, 10, 1, "", "SET_CARD"], [32, 10, 1, "", "SET_CHOOSE"], [32, 10, 1, "", "SET_COMPLEMENT"], [32, 10, 1, "", "SET_COMPREHENSION"], [32, 10, 1, "", "SET_EMPTY"], [32, 10, 1, "", "SET_FILTER"], [32, 10, 1, "", "SET_FOLD"], [32, 10, 1, "", "SET_INSERT"], [32, 10, 1, "", "SET_INTER"], [32, 10, 1, "", "SET_IS_SINGLETON"], [32, 10, 1, "", "SET_MAP"], [32, 10, 1, "", "SET_MEMBER"], [32, 10, 1, "", "SET_MINUS"], [32, 10, 1, "", "SET_SINGLETON"], [32, 10, 1, "", "SET_SUBSET"], [32, 10, 1, "", "SET_UNION"], [32, 10, 1, "", "SET_UNIVERSE"], [32, 10, 1, "", "SEXPR"], [32, 10, 1, "", "SINE"], [32, 10, 1, "", "SKOLEM_ADD_TO_POOL"], [32, 10, 1, "", "SQRT"], [32, 10, 1, "", "STORE"], [32, 10, 1, "", "STRING_CHARAT"], [32, 10, 1, "", "STRING_CONCAT"], [32, 10, 1, "", "STRING_CONTAINS"], [32, 10, 1, "", "STRING_FROM_CODE"], [32, 10, 1, "", "STRING_FROM_INT"], [32, 10, 1, "", "STRING_INDEXOF"], [32, 10, 1, "", "STRING_INDEXOF_RE"], [32, 10, 1, "", "STRING_IN_REGEXP"], [32, 10, 1, "", "STRING_IS_DIGIT"], [32, 10, 1, "", "STRING_LENGTH"], [32, 10, 1, "", "STRING_LEQ"], [32, 10, 1, "", "STRING_LT"], [32, 10, 1, "", "STRING_PREFIX"], [32, 10, 1, "", "STRING_REPLACE"], [32, 10, 1, "", "STRING_REPLACE_ALL"], [32, 10, 1, "", "STRING_REPLACE_RE"], [32, 10, 1, "", "STRING_REPLACE_RE_ALL"], [32, 10, 1, "", "STRING_REV"], [32, 10, 1, "", "STRING_SUBSTR"], [32, 10, 1, "", "STRING_SUFFIX"], [32, 10, 1, "", "STRING_TO_CODE"], [32, 10, 1, "", "STRING_TO_INT"], [32, 10, 1, "", "STRING_TO_LOWER"], [32, 10, 1, "", "STRING_TO_REGEXP"], [32, 10, 1, "", "STRING_TO_UPPER"], [32, 10, 1, "", "STRING_UPDATE"], [32, 10, 1, "", "SUB"], [32, 10, 1, "", "TABLE_AGGREGATE"], [32, 10, 1, "", "TABLE_GROUP"], [32, 10, 1, "", "TABLE_JOIN"], [32, 10, 1, "", "TABLE_PRODUCT"], [32, 10, 1, "", "TABLE_PROJECT"], [32, 10, 1, "", "TANGENT"], [32, 10, 1, "", "TO_INTEGER"], [32, 10, 1, "", "TO_REAL"], [32, 10, 1, "", "TUPLE_PROJECT"], [32, 10, 1, "", "UNDEFINED_KIND"], [32, 10, 1, "", "UNINTERPRETED_SORT_VALUE"], [32, 10, 1, "", "VARIABLE"], [32, 10, 1, "", "VARIABLE_LIST"], [32, 10, 1, "", "WITNESS"], [32, 10, 1, "", "XOR"]], "cvc5.Op": [[33, 9, 1, "", "__getitem__"], [33, 9, 1, "", "getKind"], [33, 9, 1, "", "getNumIndices"], [33, 9, 1, "", "isIndexed"], [33, 9, 1, "", "isNull"]], "cvc5.Result": [[36, 9, 1, "", "getUnknownExplanation"], [36, 9, 1, "", "isNull"], [36, 9, 1, "", "isSat"], [36, 9, 1, "", "isUnknown"], [36, 9, 1, "", "isUnsat"]], "cvc5.RoundingMode": [[37, 10, 1, "", "ROUND_NEAREST_TIES_TO_AWAY"], [37, 10, 1, "", "ROUND_NEAREST_TIES_TO_EVEN"], [37, 10, 1, "", "ROUND_TOWARD_NEGATIVE"], [37, 10, 1, "", "ROUND_TOWARD_POSITIVE"], [37, 10, 1, "", "ROUND_TOWARD_ZERO"]], "cvc5.Solver": [[38, 9, 1, "", "addSygusAssume"], [38, 9, 1, "", "addSygusConstraint"], [38, 9, 1, "", "addSygusInvConstraint"], [38, 9, 1, "", "assertFormula"], [38, 9, 1, "", "blockModel"], [38, 9, 1, "", "blockModelValues"], [38, 9, 1, "", "checkSat"], [38, 9, 1, "", "checkSatAssuming"], [38, 9, 1, "", "checkSynth"], [38, 9, 1, "", "checkSynthNext"], [38, 9, 1, "", "declareDatatype"], [38, 9, 1, "", "declareFun"], [38, 9, 1, "", "declarePool"], [38, 9, 1, "", "declareSepHeap"], [38, 9, 1, "", "declareSort"], [38, 9, 1, "", "declareSygusVar"], [38, 9, 1, "", "defineFun"], [38, 9, 1, "", "defineFunRec"], [38, 9, 1, "", "defineFunsRec"], [38, 9, 1, "", "getAbduct"], [38, 9, 1, "", "getAbductNext"], [38, 9, 1, "", "getAssertions"], [38, 9, 1, "", "getBooleanSort"], [38, 9, 1, "", "getDifficulty"], [38, 9, 1, "", "getInfo"], [38, 9, 1, "", "getInstantiations"], [38, 9, 1, "", "getIntegerSort"], [38, 9, 1, "", "getInterpolant"], [38, 9, 1, "", "getInterpolantNext"], [38, 9, 1, "", "getLearnedLiterals"], [38, 9, 1, "", "getModel"], [38, 9, 1, "", "getModelDomainElements"], [38, 9, 1, "", "getNullSort"], [38, 9, 1, "", "getOption"], [38, 9, 1, "", "getOptionInfo"], [38, 9, 1, "", "getOptionNames"], [38, 9, 1, "", "getProof"], [38, 9, 1, "", "getQuantifierElimination"], [38, 9, 1, "", "getQuantifierEliminationDisjunct"], [38, 9, 1, "", "getRealSort"], [38, 9, 1, "", "getRegExpSort"], [38, 9, 1, "", "getRoundingModeSort"], [38, 9, 1, "", "getStatistics"], [38, 9, 1, "", "getStringSort"], [38, 9, 1, "", "getSynthSolution"], [38, 9, 1, "", "getSynthSolutions"], [38, 9, 1, "", "getUnsatAssumptions"], [38, 9, 1, "", "getUnsatCore"], [38, 9, 1, "", "getValue"], [38, 9, 1, "", "getValueSepHeap"], [38, 9, 1, "", "getValueSepNil"], [38, 9, 1, "", "isModelCoreSymbol"], [38, 9, 1, "", "mkArraySort"], [38, 9, 1, "", "mkBagSort"], [38, 9, 1, "", "mkBitVector"], [38, 9, 1, "", "mkBitVectorSort"], [38, 9, 1, "", "mkBoolean"], [38, 9, 1, "", "mkCardinalityConstraint"], [38, 9, 1, "", "mkConst"], [38, 9, 1, "", "mkConstArray"], [38, 9, 1, "", "mkDatatypeConstructorDecl"], [38, 9, 1, "", "mkDatatypeDecl"], [38, 9, 1, "", "mkDatatypeSort"], [38, 9, 1, "", "mkDatatypeSorts"], [38, 9, 1, "", "mkEmptyBag"], [38, 9, 1, "", "mkEmptySequence"], [38, 9, 1, "", "mkEmptySet"], [38, 9, 1, "", "mkFalse"], [38, 9, 1, "", "mkFloatingPoint"], [38, 9, 1, "", "mkFloatingPointNaN"], [38, 9, 1, "", "mkFloatingPointNegInf"], [38, 9, 1, "", "mkFloatingPointNegZero"], [38, 9, 1, "", "mkFloatingPointPosInf"], [38, 9, 1, "", "mkFloatingPointPosZero"], [38, 9, 1, "", "mkFloatingPointSort"], [38, 9, 1, "", "mkFunctionSort"], [38, 9, 1, "", "mkGrammar"], [38, 9, 1, "", "mkInteger"], [38, 9, 1, "", "mkOp"], [38, 9, 1, "", "mkParamSort"], [38, 9, 1, "", "mkPi"], [38, 9, 1, "", "mkPredicateSort"], [38, 9, 1, "", "mkReal"], [38, 9, 1, "", "mkRecordSort"], [38, 9, 1, "", "mkRegexpAll"], [38, 9, 1, "", "mkRegexpAllchar"], [38, 9, 1, "", "mkRegexpNone"], [38, 9, 1, "", "mkRoundingMode"], [38, 9, 1, "", "mkSepEmp"], [38, 9, 1, "", "mkSepNil"], [38, 9, 1, "", "mkSequenceSort"], [38, 9, 1, "", "mkSetSort"], [38, 9, 1, "", "mkString"], [38, 9, 1, "", "mkTerm"], [38, 9, 1, "", "mkTrue"], [38, 9, 1, "", "mkTuple"], [38, 9, 1, "", "mkTupleSort"], [38, 9, 1, "", "mkUninterpretedSort"], [38, 9, 1, "", "mkUninterpretedSortConstructorSort"], [38, 9, 1, "", "mkUniverseSet"], [38, 9, 1, "", "mkUnresolvedDatatypeSort"], [38, 9, 1, "", "mkVar"], [38, 9, 1, "", "pop"], [38, 9, 1, "", "push"], [38, 9, 1, "", "resetAssertions"], [38, 9, 1, "", "setInfo"], [38, 9, 1, "", "setLogic"], [38, 9, 1, "", "setOption"], [38, 9, 1, "", "simplify"], [38, 9, 1, "", "synthFun"], [38, 9, 1, "", "synthInv"]], "cvc5.Sort": [[39, 9, 1, "", "getArrayElementSort"], [39, 9, 1, "", "getArrayIndexSort"], [39, 9, 1, "", "getBagElementSort"], [39, 9, 1, "", "getBitVectorSize"], [39, 9, 1, "", "getDatatype"], [39, 9, 1, "", "getDatatypeArity"], [39, 9, 1, "", "getDatatypeConstructorArity"], [39, 9, 1, "", "getDatatypeConstructorCodomainSort"], [39, 9, 1, "", "getDatatypeConstructorDomainSorts"], [39, 9, 1, "", "getDatatypeSelectorCodomainSort"], [39, 9, 1, "", "getDatatypeSelectorDomainSort"], [39, 9, 1, "", "getDatatypeTesterCodomainSort"], [39, 9, 1, "", "getDatatypeTesterDomainSort"], [39, 9, 1, "", "getFloatingPointExponentSize"], [39, 9, 1, "", "getFloatingPointSignificandSize"], [39, 9, 1, "", "getFunctionArity"], [39, 9, 1, "", "getFunctionCodomainSort"], [39, 9, 1, "", "getFunctionDomainSorts"], [39, 9, 1, "", "getInstantiatedParameters"], [39, 9, 1, "", "getSequenceElementSort"], [39, 9, 1, "", "getSetElementSort"], [39, 9, 1, "", "getSymbol"], [39, 9, 1, "", "getTupleLength"], [39, 9, 1, "", "getTupleSorts"], [39, 9, 1, "", "getUninterpretedSortConstructor"], [39, 9, 1, "", "getUninterpretedSortConstructorArity"], [39, 9, 1, "", "hasSymbol"], [39, 9, 1, "", "instantiate"], [39, 9, 1, "", "isArray"], [39, 9, 1, "", "isBag"], [39, 9, 1, "", "isBitVector"], [39, 9, 1, "", "isBoolean"], [39, 9, 1, "", "isDatatype"], [39, 9, 1, "", "isDatatypeConstructor"], [39, 9, 1, "", "isDatatypeSelector"], [39, 9, 1, "", "isDatatypeTester"], [39, 9, 1, "", "isDatatypeUpdater"], [39, 9, 1, "", "isFloatingPoint"], [39, 9, 1, "", "isFunction"], [39, 9, 1, "", "isInstantiated"], [39, 9, 1, "", "isInteger"], [39, 9, 1, "", "isNull"], [39, 9, 1, "", "isPredicate"], [39, 9, 1, "", "isReal"], [39, 9, 1, "", "isRecord"], [39, 9, 1, "", "isRegExp"], [39, 9, 1, "", "isRoundingMode"], [39, 9, 1, "", "isSequence"], [39, 9, 1, "", "isSet"], [39, 9, 1, "", "isString"], [39, 9, 1, "", "isTuple"], [39, 9, 1, "", "isUninterpretedSort"], [39, 9, 1, "", "isUninterpretedSortConstructor"], [39, 9, 1, "", "substitute"]], "cvc5.Statistics": [[40, 9, 1, "", "__getitem__"], [40, 9, 1, "", "get"]], "cvc5.SynthResult": [[41, 9, 1, "", "hasNoSolution"], [41, 9, 1, "", "hasSolution"], [41, 9, 1, "", "isNull"], [41, 9, 1, "", "isUnknown"]], "cvc5.Term": [[42, 9, 1, "", "__getitem__"], [42, 9, 1, "", "__iter__"], [42, 9, 1, "", "andTerm"], [42, 9, 1, "", "eqTerm"], [42, 9, 1, "", "getBitVectorValue"], [42, 9, 1, "", "getBooleanValue"], [42, 9, 1, "", "getCardinalityConstraint"], [42, 9, 1, "", "getConstArrayBase"], [42, 9, 1, "", "getFloatingPointValue"], [42, 9, 1, "", "getId"], [42, 9, 1, "", "getIntegerValue"], [42, 9, 1, "", "getKind"], [42, 9, 1, "", "getNumChildren"], [42, 9, 1, "", "getOp"], [42, 9, 1, "", "getRealOrIntegerValueSign"], [42, 9, 1, "", "getRealValue"], [42, 9, 1, "", "getRoundingModeValue"], [42, 9, 1, "", "getSequenceValue"], [42, 9, 1, "", "getSetValue"], [42, 9, 1, "", "getSort"], [42, 9, 1, "", "getStringValue"], [42, 9, 1, "", "getSymbol"], [42, 9, 1, "", "getTupleValue"], [42, 9, 1, "", "getUninterpretedSortValue"], [42, 9, 1, "", "hasOp"], [42, 9, 1, "", "hasSymbol"], [42, 9, 1, "", "impTerm"], [42, 9, 1, "", "isBitVectorValue"], [42, 9, 1, "", "isBooleanValue"], [42, 9, 1, "", "isCardinalityConstraint"], [42, 9, 1, "", "isConstArray"], [42, 9, 1, "", "isFloatingPointNaN"], [42, 9, 1, "", "isFloatingPointNegInf"], [42, 9, 1, "", "isFloatingPointNegZero"], [42, 9, 1, "", "isFloatingPointPosInf"], [42, 9, 1, "", "isFloatingPointPosZero"], [42, 9, 1, "", "isFloatingPointValue"], [42, 9, 1, "", "isIntegerValue"], [42, 9, 1, "", "isNull"], [42, 9, 1, "", "isRealValue"], [42, 9, 1, "", "isRoundingModeValue"], [42, 9, 1, "", "isSequenceValue"], [42, 9, 1, "", "isSetValue"], [42, 9, 1, "", "isStringValue"], [42, 9, 1, "", "isTupleValue"], [42, 9, 1, "", "isUninterpretedSortValue"], [42, 9, 1, "", "iteTerm"], [42, 9, 1, "", "notTerm"], [42, 9, 1, "", "orTerm"], [42, 9, 1, "", "substitute"], [42, 9, 1, "", "toPythonObj"], [42, 9, 1, "", "xorTerm"]], "cvc5.UnknownExplanation": [[43, 10, 1, "", "INCOMPLETE"], [43, 10, 1, "", "INTERRUPTED"], [43, 10, 1, "", "MEMOUT"], [43, 10, 1, "", "OTHER"], [43, 10, 1, "", "REQUIRES_FULL_CHECK"], [43, 10, 1, "", "RESOURCEOUT"], [43, 10, 1, "", "TIMEOUT"], [43, 10, 1, "", "UNKNOWN_REASON"], [43, 10, 1, "", "UNSUPPORTED"]], "cvc5.pythonic": [[45, 11, 1, "", "Add"], [48, 11, 1, "", "And"], [45, 11, 1, "", "Arccosecant"], [45, 11, 1, "", "Arccosine"], [45, 11, 1, "", "Arccotangent"], [45, 11, 1, "", "Arcsecant"], [45, 11, 1, "", "Arcsine"], [45, 11, 1, "", "Arctangent"], [45, 8, 1, "", "ArithRef"], [45, 8, 1, "", "ArithSortRef"], [46, 11, 1, "", "Array"], [46, 8, 1, "", "ArrayRef"], [46, 11, 1, "", "ArraySort"], [46, 8, 1, "", "ArraySortRef"], [47, 11, 1, "", "BV2Int"], [47, 11, 1, "", "BVAdd"], [47, 11, 1, "", "BVAnd"], [47, 11, 1, "", "BVMult"], [47, 11, 1, "", "BVNeg"], [47, 11, 1, "", "BVNot"], [47, 11, 1, "", "BVOr"], [47, 11, 1, "", "BVRedAnd"], [47, 11, 1, "", "BVRedOr"], [47, 11, 1, "", "BVSub"], [47, 11, 1, "", "BVXor"], [47, 11, 1, "", "BitVec"], [47, 8, 1, "", "BitVecNumRef"], [47, 8, 1, "", "BitVecRef"], [47, 11, 1, "", "BitVecSort"], [47, 8, 1, "", "BitVecSortRef"], [47, 11, 1, "", "BitVecVal"], [47, 11, 1, "", "BitVecs"], [48, 11, 1, "", "Bool"], [48, 8, 1, "", "BoolRef"], [48, 11, 1, "", "BoolSort"], [48, 8, 1, "", "BoolSortRef"], [48, 11, 1, "", "BoolVal"], [48, 11, 1, "", "BoolVector"], [48, 11, 1, "", "Bools"], [45, 11, 1, "", "Cbrt"], [56, 8, 1, "", "CheckSatResult"], [47, 11, 1, "", "Concat"], [48, 11, 1, "", "Const"], [46, 11, 1, "", "ConstArray"], [48, 11, 1, "", "Consts"], [45, 11, 1, "", "Cosecant"], [45, 11, 1, "", "Cosine"], [45, 11, 1, "", "Cotangent"], [49, 11, 1, "", "CreateDatatypes"], [49, 8, 1, "", "Datatype"], [49, 8, 1, "", "DatatypeConstructorRef"], [49, 8, 1, "", "DatatypeRecognizerRef"], [49, 8, 1, "", "DatatypeRef"], [49, 8, 1, "", "DatatypeSelectorRef"], [49, 8, 1, "", "DatatypeSortRef"], [49, 11, 1, "", "DisjointSum"], [48, 11, 1, "", "Distinct"], [45, 11, 1, "", "Div"], [55, 11, 1, "", "EmptySet"], [53, 11, 1, "", "Exists"], [45, 11, 1, "", "Exponential"], [48, 8, 1, "", "ExprRef"], [47, 11, 1, "", "Extract"], [50, 11, 1, "", "FP"], [50, 8, 1, "", "FPNumRef"], [50, 8, 1, "", "FPRMRef"], [50, 8, 1, "", "FPRef"], [50, 11, 1, "", "FPSort"], [50, 8, 1, "", "FPSortRef"], [50, 11, 1, "", "FPVal"], [50, 11, 1, "", "FPs"], [50, 11, 1, "", "Float128"], [50, 11, 1, "", "Float16"], [50, 11, 1, "", "Float32"], [50, 11, 1, "", "Float64"], [50, 11, 1, "", "FloatDouble"], [50, 11, 1, "", "FloatHalf"], [50, 11, 1, "", "FloatQuadruple"], [50, 11, 1, "", "FloatSingle"], [53, 11, 1, "", "ForAll"], [48, 11, 1, "", "FreshBool"], [48, 11, 1, "", "FreshConst"], [48, 11, 1, "", "FreshFunction"], [45, 11, 1, "", "FreshInt"], [45, 11, 1, "", "FreshReal"], [55, 11, 1, "", "FullSet"], [48, 8, 1, "", "FuncDeclRef"], [48, 11, 1, "", "Function"], [45, 11, 1, "", "Geq"], [45, 11, 1, "", "Gt"], [48, 11, 1, "", "If"], [48, 11, 1, "", "Implies"], [45, 11, 1, "", "Int"], [47, 11, 1, "", "Int2BV"], [45, 8, 1, "", "IntNumRef"], [45, 11, 1, "", "IntSort"], [45, 11, 1, "", "IntVal"], [45, 11, 1, "", "IntVector"], [45, 11, 1, "", "Ints"], [45, 11, 1, "", "IntsModulus"], [45, 11, 1, "", "IsInt"], [55, 11, 1, "", "IsMember"], [55, 11, 1, "", "IsSubset"], [46, 11, 1, "", "K"], [47, 11, 1, "", "LShR"], [53, 11, 1, "", "Lambda"], [45, 11, 1, "", "Leq"], [45, 11, 1, "", "Lt"], [56, 8, 1, "", "ModelRef"], [45, 11, 1, "", "Mult"], [48, 11, 1, "", "Not"], [48, 11, 1, "", "Or"], [45, 11, 1, "", "Pi"], [45, 11, 1, "", "Pow"], [56, 11, 1, "", "Product"], [45, 11, 1, "", "Q"], [53, 8, 1, "", "QuantifierRef"], [50, 11, 1, "", "RNA"], [50, 11, 1, "", "RNE"], [50, 11, 1, "", "RTN"], [50, 11, 1, "", "RTP"], [50, 11, 1, "", "RTZ"], [45, 8, 1, "", "RatNumRef"], [45, 11, 1, "", "RatVal"], [45, 11, 1, "", "Real"], [45, 11, 1, "", "RealSort"], [45, 11, 1, "", "RealVal"], [45, 11, 1, "", "RealVector"], [45, 11, 1, "", "Reals"], [47, 11, 1, "", "RepeatBitVec"], [47, 11, 1, "", "RotateLeft"], [47, 11, 1, "", "RotateRight"], [50, 11, 1, "", "RoundNearestTiesToAway"], [50, 11, 1, "", "RoundNearestTiesToEven"], [50, 11, 1, "", "RoundTowardNegative"], [50, 11, 1, "", "RoundTowardPositive"], [50, 11, 1, "", "RoundTowardZero"], [47, 11, 1, "", "SDiv"], [47, 11, 1, "", "SGE"], [47, 11, 1, "", "SGT"], [47, 11, 1, "", "SLE"], [47, 11, 1, "", "SLT"], [51, 8, 1, "", "SMTException"], [47, 11, 1, "", "SMod"], [47, 11, 1, "", "SRem"], [45, 11, 1, "", "Secant"], [46, 11, 1, "", "Select"], [55, 11, 1, "", "Set"], [55, 11, 1, "", "SetAdd"], [55, 11, 1, "", "SetComplement"], [55, 11, 1, "", "SetDel"], [55, 11, 1, "", "SetDifference"], [55, 11, 1, "", "SetIntersect"], [55, 11, 1, "", "SetMinus"], [55, 8, 1, "", "SetRef"], [55, 11, 1, "", "SetSort"], [55, 8, 1, "", "SetSortRef"], [55, 11, 1, "", "SetUnion"], [47, 11, 1, "", "SignExt"], [56, 11, 1, "", "SimpleSolver"], [45, 11, 1, "", "Sine"], [55, 11, 1, "", "Singleton"], [56, 8, 1, "", "Solver"], [56, 11, 1, "", "SolverFor"], [48, 8, 1, "", "SortRef"], [45, 11, 1, "", "Sqrt"], [46, 11, 1, "", "Store"], [45, 11, 1, "", "Sub"], [56, 11, 1, "", "Sum"], [45, 11, 1, "", "Tangent"], [45, 11, 1, "", "ToInt"], [45, 11, 1, "", "ToReal"], [49, 11, 1, "", "TupleSort"], [47, 11, 1, "", "UDiv"], [47, 11, 1, "", "UGE"], [47, 11, 1, "", "UGT"], [47, 11, 1, "", "ULE"], [47, 11, 1, "", "ULT"], [45, 11, 1, "", "UMinus"], [47, 11, 1, "", "URem"], [46, 11, 1, "", "Update"], [48, 11, 1, "", "Xor"], [47, 11, 1, "", "ZeroExt"], [56, 11, 1, "", "evaluate"], [50, 11, 1, "", "fpAbs"], [50, 11, 1, "", "fpAdd"], [50, 11, 1, "", "fpBVToFP"], [50, 11, 1, "", "fpDiv"], [50, 11, 1, "", "fpEQ"], [50, 11, 1, "", "fpFMA"], [50, 11, 1, "", "fpFP"], [50, 11, 1, "", "fpFPToFP"], [50, 11, 1, "", "fpGEQ"], [50, 11, 1, "", "fpGT"], [50, 11, 1, "", "fpInfinity"], [50, 11, 1, "", "fpIsInf"], [50, 11, 1, "", "fpIsNaN"], [50, 11, 1, "", "fpIsNegative"], [50, 11, 1, "", "fpIsNormal"], [50, 11, 1, "", "fpIsPositive"], [50, 11, 1, "", "fpIsSubnormal"], [50, 11, 1, "", "fpIsZero"], [50, 11, 1, "", "fpLEQ"], [50, 11, 1, "", "fpLT"], [50, 11, 1, "", "fpMax"], [50, 11, 1, "", "fpMin"], [50, 11, 1, "", "fpMinusInfinity"], [50, 11, 1, "", "fpMinusZero"], [50, 11, 1, "", "fpMul"], [50, 11, 1, "", "fpNEQ"], [50, 11, 1, "", "fpNaN"], [50, 11, 1, "", "fpNeg"], [50, 11, 1, "", "fpPlusInfinity"], [50, 11, 1, "", "fpPlusZero"], [50, 11, 1, "", "fpRealToFP"], [50, 11, 1, "", "fpRem"], [50, 11, 1, "", "fpRoundToIntegral"], [50, 11, 1, "", "fpSignedToFP"], [50, 11, 1, "", "fpSqrt"], [50, 11, 1, "", "fpSub"], [50, 11, 1, "", "fpToFP"], [50, 11, 1, "", "fpToFPUnsigned"], [50, 11, 1, "", "fpToReal"], [50, 11, 1, "", "fpToSBV"], [50, 11, 1, "", "fpToUBV"], [50, 11, 1, "", "fpUnsignedToFP"], [50, 11, 1, "", "fpZero"], [50, 11, 1, "", "get_default_fp_sort"], [50, 11, 1, "", "get_default_rounding_mode"], [46, 11, 1, "", "is_K"], [45, 11, 1, "", "is_add"], [48, 11, 1, "", "is_and"], [51, 11, 1, "", "is_app"], [51, 11, 1, "", "is_app_of"], [45, 11, 1, "", "is_arith"], [45, 11, 1, "", "is_arith_sort"], [46, 11, 1, "", "is_array"], [46, 11, 1, "", "is_array_sort"], [48, 11, 1, "", "is_bool"], [48, 11, 1, "", "is_bool_value"], [47, 11, 1, "", "is_bv"], [47, 11, 1, "", "is_bv_sort"], [47, 11, 1, "", "is_bv_value"], [48, 11, 1, "", "is_const"], [46, 11, 1, "", "is_const_array"], [48, 11, 1, "", "is_distinct"], [45, 11, 1, "", "is_div"], [48, 11, 1, "", "is_eq"], [51, 11, 1, "", "is_expr"], [48, 11, 1, "", "is_false"], [50, 11, 1, "", "is_fp"], [50, 11, 1, "", "is_fp_sort"], [50, 11, 1, "", "is_fp_value"], [50, 11, 1, "", "is_fprm"], [50, 11, 1, "", "is_fprm_sort"], [50, 11, 1, "", "is_fprm_value"], [48, 11, 1, "", "is_func_decl"], [45, 11, 1, "", "is_ge"], [45, 11, 1, "", "is_gt"], [45, 11, 1, "", "is_idiv"], [48, 11, 1, "", "is_implies"], [45, 11, 1, "", "is_int"], [45, 11, 1, "", "is_int_value"], [45, 11, 1, "", "is_is_int"], [45, 11, 1, "", "is_le"], [45, 11, 1, "", "is_lt"], [45, 11, 1, "", "is_mod"], [45, 11, 1, "", "is_mul"], [48, 11, 1, "", "is_not"], [48, 11, 1, "", "is_or"], [53, 11, 1, "", "is_quantifier"], [45, 11, 1, "", "is_rational_value"], [45, 11, 1, "", "is_real"], [46, 11, 1, "", "is_select"], [51, 11, 1, "", "is_sort"], [46, 11, 1, "", "is_store"], [45, 11, 1, "", "is_sub"], [45, 11, 1, "", "is_to_int"], [45, 11, 1, "", "is_to_real"], [48, 11, 1, "", "is_true"], [46, 11, 1, "", "is_update"], [53, 11, 1, "", "is_var"], [48, 11, 1, "", "mk_not"], [56, 11, 1, "", "prove"], [56, 12, 1, "", "sat"], [50, 11, 1, "", "set_default_fp_sort"], [50, 11, 1, "", "set_default_rounding_mode"], [56, 11, 1, "", "simplify"], [56, 11, 1, "", "solve"], [56, 11, 1, "", "solve_using"], [56, 11, 1, "", "substitute"], [56, 12, 1, "", "unknown"], [56, 12, 1, "", "unsat"]], "cvc5.pythonic.ArithRef": [[45, 9, 1, "", "__add__"], [45, 9, 1, "", "__div__"], [45, 9, 1, "", "__ge__"], [45, 9, 1, "", "__gt__"], [45, 9, 1, "", "__le__"], [45, 9, 1, "", "__lt__"], [45, 9, 1, "", "__mod__"], [45, 9, 1, "", "__mul__"], [45, 9, 1, "", "__neg__"], [45, 9, 1, "", "__pos__"], [45, 9, 1, "", "__pow__"], [45, 9, 1, "", "__radd__"], [45, 9, 1, "", "__rdiv__"], [45, 9, 1, "", "__rmod__"], [45, 9, 1, "", "__rmul__"], [45, 9, 1, "", "__rpow__"], [45, 9, 1, "", "__rsub__"], [45, 9, 1, "", "__rtruediv__"], [45, 9, 1, "", "__sub__"], [45, 9, 1, "", "__truediv__"], [45, 9, 1, "", "is_int"], [45, 9, 1, "", "is_real"], [45, 9, 1, "", "sort"]], "cvc5.pythonic.ArithSortRef": [[45, 9, 1, "", "cast"], [45, 9, 1, "", "is_int"], [45, 9, 1, "", "is_real"], [45, 9, 1, "", "subsort"]], "cvc5.pythonic.ArrayRef": [[46, 9, 1, "", "__getitem__"], [46, 9, 1, "", "arg"], [46, 9, 1, "", "default"], [46, 9, 1, "", "domain"], [46, 9, 1, "", "range"], [46, 9, 1, "", "sort"]], "cvc5.pythonic.ArraySortRef": [[46, 9, 1, "", "domain"], [46, 9, 1, "", "range"]], "cvc5.pythonic.BitVecNumRef": [[47, 9, 1, "", "as_long"], [47, 9, 1, "", "as_signed_long"]], "cvc5.pythonic.BitVecRef": [[47, 9, 1, "", "__add__"], [47, 9, 1, "", "__and__"], [47, 9, 1, "", "__div__"], [47, 9, 1, "", "__ge__"], [47, 9, 1, "", "__gt__"], [47, 9, 1, "", "__invert__"], [47, 9, 1, "", "__le__"], [47, 9, 1, "", "__lshift__"], [47, 9, 1, "", "__lt__"], [47, 9, 1, "", "__mod__"], [47, 9, 1, "", "__mul__"], [47, 9, 1, "", "__neg__"], [47, 9, 1, "", "__or__"], [47, 9, 1, "", "__pos__"], [47, 9, 1, "", "__radd__"], [47, 9, 1, "", "__rand__"], [47, 9, 1, "", "__rdiv__"], [47, 9, 1, "", "__rlshift__"], [47, 9, 1, "", "__rmod__"], [47, 9, 1, "", "__rmul__"], [47, 9, 1, "", "__ror__"], [47, 9, 1, "", "__rrshift__"], [47, 9, 1, "", "__rshift__"], [47, 9, 1, "", "__rsub__"], [47, 9, 1, "", "__rtruediv__"], [47, 9, 1, "", "__rxor__"], [47, 9, 1, "", "__sub__"], [47, 9, 1, "", "__truediv__"], [47, 9, 1, "", "__xor__"], [47, 9, 1, "", "size"], [47, 9, 1, "", "sort"]], "cvc5.pythonic.BitVecSortRef": [[47, 9, 1, "", "cast"], [47, 9, 1, "", "size"], [47, 9, 1, "", "subsort"]], "cvc5.pythonic.BoolRef": [[48, 9, 1, "", "__mul__"], [48, 9, 1, "", "__rmul__"], [48, 9, 1, "", "sort"]], "cvc5.pythonic.BoolSortRef": [[48, 9, 1, "", "cast"], [48, 9, 1, "", "is_bool"], [48, 9, 1, "", "is_int"], [48, 9, 1, "", "subsort"]], "cvc5.pythonic.CheckSatResult": [[56, 9, 1, "", "__eq__"], [56, 10, 1, "", "__hash__"], [56, 9, 1, "", "__init__"], [56, 9, 1, "", "__ne__"], [56, 9, 1, "", "__repr__"], [56, 10, 1, "", "__weakref__"]], "cvc5.pythonic.Datatype": [[49, 9, 1, "", "__init__"], [49, 9, 1, "", "__repr__"], [49, 10, 1, "", "__weakref__"], [49, 9, 1, "", "create"], [49, 9, 1, "", "declare"]], "cvc5.pythonic.DatatypeConstructorRef": [[49, 9, 1, "", "__call__"], [49, 9, 1, "", "__init__"], [49, 9, 1, "", "arity"], [49, 9, 1, "", "domain"], [49, 9, 1, "", "range"]], "cvc5.pythonic.DatatypeRecognizerRef": [[49, 9, 1, "", "__call__"], [49, 9, 1, "", "__init__"], [49, 9, 1, "", "arity"], [49, 9, 1, "", "domain"], [49, 9, 1, "", "range"]], "cvc5.pythonic.DatatypeRef": [[49, 9, 1, "", "sort"]], "cvc5.pythonic.DatatypeSelectorRef": [[49, 9, 1, "", "__call__"], [49, 9, 1, "", "__init__"], [49, 9, 1, "", "arity"], [49, 9, 1, "", "domain"], [49, 9, 1, "", "range"]], "cvc5.pythonic.DatatypeSortRef": [[49, 9, 1, "", "__init__"], [49, 9, 1, "", "accessor"], [49, 9, 1, "", "constructor"], [49, 9, 1, "", "num_constructors"], [49, 9, 1, "", "recognizer"]], "cvc5.pythonic.ExprRef": [[48, 9, 1, "", "__bool__"], [48, 9, 1, "", "__eq__"], [48, 9, 1, "", "__hash__"], [48, 9, 1, "", "__init__"], [48, 9, 1, "", "__ne__"], [48, 9, 1, "", "__nonzero__"], [48, 9, 1, "", "__repr__"], [48, 9, 1, "", "__str__"], [48, 10, 1, "", "__weakref__"], [48, 9, 1, "", "arg"], [48, 9, 1, "", "as_ast"], [48, 9, 1, "", "children"], [48, 9, 1, "", "decl"], [48, 9, 1, "", "eq"], [48, 9, 1, "", "get_id"], [48, 9, 1, "", "hash"], [48, 9, 1, "", "is_int"], [48, 9, 1, "", "kind"], [48, 9, 1, "", "num_args"], [48, 9, 1, "", "sexpr"], [48, 9, 1, "", "sort"]], "cvc5.pythonic.FPNumRef": [[50, 9, 1, "", "as_string"], [50, 9, 1, "", "exponent"], [50, 9, 1, "", "exponent_as_long"], [50, 9, 1, "", "isInf"], [50, 9, 1, "", "isNaN"], [50, 9, 1, "", "isNegative"], [50, 9, 1, "", "isNormal"], [50, 9, 1, "", "isPositive"], [50, 9, 1, "", "isSubnormal"], [50, 9, 1, "", "isZero"], [50, 9, 1, "", "sign"], [50, 9, 1, "", "significand"], [50, 9, 1, "", "significand_as_long"]], "cvc5.pythonic.FPRMRef": [[50, 9, 1, "", "as_string"]], "cvc5.pythonic.FPRef": [[50, 9, 1, "", "__add__"], [50, 9, 1, "", "__div__"], [50, 9, 1, "", "__ge__"], [50, 9, 1, "", "__gt__"], [50, 9, 1, "", "__le__"], [50, 9, 1, "", "__lt__"], [50, 9, 1, "", "__mod__"], [50, 9, 1, "", "__mul__"], [50, 9, 1, "", "__neg__"], [50, 9, 1, "", "__pos__"], [50, 9, 1, "", "__radd__"], [50, 9, 1, "", "__rdiv__"], [50, 9, 1, "", "__rmod__"], [50, 9, 1, "", "__rmul__"], [50, 9, 1, "", "__rsub__"], [50, 9, 1, "", "__rtruediv__"], [50, 9, 1, "", "__sub__"], [50, 9, 1, "", "__truediv__"], [50, 9, 1, "", "as_string"], [50, 9, 1, "", "ebits"], [50, 9, 1, "", "sbits"], [50, 9, 1, "", "sort"]], "cvc5.pythonic.FPSortRef": [[50, 9, 1, "", "cast"], [50, 9, 1, "", "ebits"], [50, 9, 1, "", "sbits"]], "cvc5.pythonic.FuncDeclRef": [[48, 9, 1, "", "__call__"], [48, 9, 1, "", "arity"], [48, 9, 1, "", "domain"], [48, 9, 1, "", "name"], [48, 9, 1, "", "range"]], "cvc5.pythonic.IntNumRef": [[45, 9, 1, "", "as_binary_string"], [45, 9, 1, "", "as_long"], [45, 9, 1, "", "as_string"]], "cvc5.pythonic.ModelRef": [[56, 9, 1, "", "__getitem__"], [56, 9, 1, "", "__init__"], [56, 9, 1, "", "__len__"], [56, 9, 1, "", "__repr__"], [56, 10, 1, "", "__weakref__"], [56, 9, 1, "", "decls"], [56, 9, 1, "", "eval"], [56, 9, 1, "", "evaluate"], [56, 9, 1, "", "vars"]], "cvc5.pythonic.QuantifierRef": [[53, 9, 1, "", "as_ast"], [53, 9, 1, "", "body"], [53, 9, 1, "", "children"], [53, 9, 1, "", "is_exists"], [53, 9, 1, "", "is_forall"], [53, 9, 1, "", "is_lambda"], [53, 9, 1, "", "num_vars"], [53, 9, 1, "", "sort"], [53, 9, 1, "", "var_name"], [53, 9, 1, "", "var_sort"]], "cvc5.pythonic.RatNumRef": [[45, 9, 1, "", "as_decimal"], [45, 9, 1, "", "as_fraction"], [45, 9, 1, "", "as_long"], [45, 9, 1, "", "as_string"], [45, 9, 1, "", "denominator"], [45, 9, 1, "", "denominator_as_long"], [45, 9, 1, "", "is_int"], [45, 9, 1, "", "is_int_value"], [45, 9, 1, "", "is_real"], [45, 9, 1, "", "numerator"], [45, 9, 1, "", "numerator_as_long"]], "cvc5.pythonic.SMTException": [[51, 9, 1, "", "__init__"], [51, 9, 1, "", "__str__"], [51, 10, 1, "", "__weakref__"]], "cvc5.pythonic.SetRef": [[55, 9, 1, "", "__and__"], [55, 9, 1, "", "__getitem__"], [55, 9, 1, "", "__or__"], [55, 9, 1, "", "default"], [55, 9, 1, "", "domain"], [55, 9, 1, "", "range"], [55, 9, 1, "", "sort"]], "cvc5.pythonic.SetSortRef": [[55, 9, 1, "", "domain"], [55, 9, 1, "", "range"]], "cvc5.pythonic.Solver": [[56, 9, 1, "", "__iadd__"], [56, 9, 1, "", "__init__"], [56, 9, 1, "", "__repr__"], [56, 10, 1, "", "__weakref__"], [56, 9, 1, "", "add"], [56, 9, 1, "", "append"], [56, 9, 1, "", "assert_exprs"], [56, 9, 1, "", "assertions"], [56, 9, 1, "", "check"], [56, 9, 1, "", "getOption"], [56, 9, 1, "", "getOptionInfo"], [56, 9, 1, "", "getOptionNames"], [56, 9, 1, "", "insert"], [56, 9, 1, "", "model"], [56, 9, 1, "", "num_scopes"], [56, 9, 1, "", "pop"], [56, 9, 1, "", "push"], [56, 9, 1, "", "reason_unknown"], [56, 9, 1, "", "reset"], [56, 9, 1, "", "resetAssertions"], [56, 9, 1, "", "set"], [56, 9, 1, "", "setOption"], [56, 9, 1, "", "sexpr"], [56, 9, 1, "", "statistics"]], "cvc5.pythonic.SortRef": [[48, 9, 1, "", "__eq__"], [48, 9, 1, "", "__hash__"], [48, 9, 1, "", "__init__"], [48, 9, 1, "", "__ne__"], [48, 9, 1, "", "__repr__"], [48, 9, 1, "", "__str__"], [48, 10, 1, "", "__weakref__"], [48, 9, 1, "", "as_ast"], [48, 9, 1, "", "cast"], [48, 9, 1, "", "eq"], [48, 9, 1, "", "hash"], [48, 9, 1, "", "is_int"], [48, 9, 1, "", "name"], [48, 9, 1, "", "sexpr"], [48, 9, 1, "", "subsort"]]}, "objtypes": {"0": "cpp:enumerator", "1": "cpp:class", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:type", "5": "cpp:enum", "6": "cpp:member", "7": "cpp:templateParam", "8": "py:class", "9": "py:method", "10": "py:attribute", "11": "py:function", "12": "py:data"}, "objnames": {"0": ["cpp", "enumerator", "C++ enumerator"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "type", "C++ type"], "5": ["cpp", "enum", "C++ enum"], "6": ["cpp", "member", "C++ member"], "7": ["cpp", "templateParam", "C++ template parameter"], "8": ["py", "class", "Python class"], "9": ["py", "method", "Python method"], "10": ["py", "attribute", "Python attribute"], "11": ["py", "function", "Python function"], "12": ["py", "data", "Python data"]}, "titleterms": {"api": [0, 1, 23, 24, 34, 44, 52, 80, 92], "document": [0, 57, 79, 80], "c": 1, "class": [1, 45, 46, 47, 48, 49, 50, 53, 55, 56, 80], "hierarchi": 1, "datatyp": [2, 26, 49, 63, 81, 92], "datatypeconstructor": [3, 27], "datatypeconstructordecl": [4, 28], "datatypedecl": [5, 29], "datatypeselector": [6, 30], "driveropt": 7, "except": [8, 51, 65], "grammar": [9, 31, 76, 82], "kind": [10, 32], "mode": [11, 50], "op": [12, 33], "optioninfo": 13, "quickstart": [14, 25, 35, 54, 58, 70], "guid": [14, 25, 35, 54, 58], "exampl": [14, 25, 35, 54, 58, 64, 70, 80, 92, 93, 94, 98], "result": [15, 36, 56], "roundingmod": [16, 37], "solver": [17, 38, 56, 80], "sort": [18, 39], "statist": [19, 40, 90], "synthresult": [20, 41], "term": [21, 42, 45, 46, 47, 48, 50, 55], "unknownexplan": [22, 43], "java": [23, 24], "build": [24, 80], "cvc5": [24, 79, 80, 81], "packag": 24, "io": 24, "github": 24, "base": [34, 81], "python": [34, 44, 52], "which": 44, "should": 44, "i": 44, "us": [44, 81], "instal": [44, 80], "arithmet": [45, 69, 80, 81], "basic": [45, 46, 47, 48, 50, 55], "builder": [45, 46, 47, 48, 50, 53, 55], "overload": [45, 46, 47, 48, 50, 55], "other": 45, "oper": [45, 46, 48, 50, 55, 80], "transcendent": [45, 98], "tester": [45, 46, 47, 48, 50, 51, 53], "arrai": [46, 61, 81], "bit": [47, 60, 61, 66], "vector": [47, 60, 61, 66], "core": 48, "boolean": 48, "gener": [48, 80], "equal": 48, "overview": 49, "declar": [49, 92], "util": [49, 56], "float": [50, 67, 80, 81], "point": [50, 67, 80, 81], "fp": 50, "round": 50, "intern": 51, "quantifi": [53, 81], "set": [55, 73, 81, 95], "simpl": 56, "solv": 56, "The": 56, "model": 56, "binari": 57, "theori": [59, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 74, 80, 81, 91, 92, 93, 94, 95, 96, 97, 98], "bag": [59, 91], "combin": 62, "handl": 65, "extract": 66, "hello": 68, "world": 68, "linear": [69, 80], "relat": [71, 95], "sequenc": [72, 94], "string": [74, 81, 96], "sygu": [75, 76, 77, 82], "function": [75, 81], "invari": 77, "index": 78, "tabl": 79, "content": 79, "support": 80, "system": 80, "compil": 80, "maco": 80, "cross": 80, "window": 80, "depend": 80, "antlr": 80, "3": 80, "4": 80, "parser": [80, 81], "cadic": 80, "sat": [80, 81], "gmp": 80, "gnu": 80, "multi": 80, "precis": 80, "librari": 80, "symfpu": 80, "number": 80, "option": [80, 81, 89], "cryptominisat": 80, "kissat": 80, "libpoli": 80, "polynomi": 80, "cln": 80, "v1": 80, "glpk": 80, "cut": 80, "log": 80, "A": 80, "fork": 80, "program": 80, "kit": 80, "editlin": 80, "improv": 80, "interact": 80, "experi": 80, "googl": 80, "test": 80, "unit": 80, "framework": 80, "languag": 80, "bind": 80, "regress": 80, "custom": 80, "target": 80, "recompil": 80, "specif": 80, "version": 80, "differ": 80, "lgpl": 80, "most": 81, "commonli": 81, "addit": 81, "modul": 81, "bitvector": 81, "decis": 81, "heurist": 81, "express": 81, "driver": 81, "parallel": 81, "print": 81, "proof": [81, 83, 84, 85, 86, 87], "layer": 81, "separ": [81, 93], "logic": [81, 92, 93, 98], "smt": 81, "uninterpret": 81, "output": 82, "tag": 82, "inst": 82, "trigger": 82, "raw": 82, "benchmark": 82, "learn": 82, "lit": 82, "sub": 82, "post": 82, "assert": 82, "pre": 82, "deep": 82, "restart": 82, "incomplet": 82, "format": [83, 84, 85], "aleth": 83, "dot": 84, "lfsc": 85, "rule": 86, "product": 87, "refer": [88, 91, 92, 93, 94, 95, 96, 97, 98], "resourc": 89, "limit": 89, "overal": 89, "time": 89, "tlimit": 89, "manag": 89, "spend": 89, "finit": [91, 95], "semant": [91, 92, 93, 94, 95, 96, 98], "syntax": [92, 93, 94, 98], "updat": 92, "parametr": 92, "tupl": 92, "codatatyp": 92, "signatur": 93, "standard": 97, "non": 97, "extend": 97}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 56}})